Sections:
00: "MAIN" (0-2069)


Source: "monitor.asm"
                            	     1: ; zBug V1.0 is a small monitor program for 68000-Based Single Board Computer
                            	     2: ; The source code was assembled using C32 CROSS ASSEMBLER VERSION 3.0
                            	     3: ;
                            	     4: 
                            	     5: ; Copyright (c) 2002 WICHIT SIRICHOTE email kswichit@kmitl.ac.th
                            	     6: ; 
                            	     7: ;
                            	     8: ; This program is free software; you can redistribute it and/or modify
                            	     9: ; it under the terms of the GNU General Public License as published by
                            	    10: ; the Free Software Foundation; either version 2 of the License, or
                            	    11: ; (at your option) any later version.
                            	    12: ;
                            	    13: ; This program is distributed in the hope that it will be useful,
                            	    14: ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                            	    15: ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                            	    16: ; GNU General Public License for more details.
                            	    17: ;
                            	    18: ; November 6 2014 - Modifications for 68Katy by Steve Chamberlin
                            	    19: ;
                            	    20: 
                            	    21: LOADADDR    EQU $00000
                            	    22: 
                            	    23: ; 68Katy memory map
                            	    24: ROMBASE	    EQU $00000
                            	    25: SERIN       EQU $78000
                            	    26: SEROUT      EQU $7A000
                            	    27: SERSTATUS_RDF   EQU $7C000
                            	    28: SERSTATUS_TXE   EQU $7D000
                            	    29: DOUT        EQU $7E000
                            	    30: RAM         EQU $80000
                            	    31: RAMTOP      EQU $FFFFF
                            	    32: 
                            	    33: ; RAM-resident vector jump table, 198 bytes
                            	    34: ; the ROM exception vectors point here
                            	    35: JUMP_TABLE_TOP  EQU  RAMTOP-5
                            	    36: JBUS_ERR    EQU  JUMP_TABLE_TOP ; 32
                            	    37: JADDR_ERR   EQU  JBUS_ERR-6 ; 31
                            	    38: JILLEGAL    EQU  JADDR_ERR-6
                            	    39: JZERO_DIV   EQU  JILLEGAL-6 ; 29
                            	    40: JCHK        EQU  JZERO_DIV-6
                            	    41: JTRAPV      EQU  JCHK-6 ; 27
                            	    42: JPRIV_VIOL  EQU  JTRAPV-6
                            	    43: JTRACE      EQU  JPRIV_VIOL-6 ; 25
                            	    44: JLINE_A     EQU  JTRACE-6
                            	    45: JLINE_F     EQU  JLINE_A-6 ; 23
                            	    46: JINT1       EQU  JLINE_F-6
                            	    47: JINT2       EQU  JINT1-6
                            	    48: JINT3       EQU  JINT2-6
                            	    49: JINT4       EQU  JINT3-6
                            	    50: JINT5       EQU  JINT4-6
                            	    51: JINT6       EQU  JINT5-6
                            	    52: JINT7       EQU  JINT6-6 ; 16
                            	    53: JTRAP0      EQU  JINT7-6
                            	    54: JTRAP1      EQU  JTRAP0-6
                            	    55: JTRAP2      EQU  JTRAP1-6
                            	    56: JTRAP3      EQU  JTRAP2-6
                            	    57: JTRAP4      EQU  JTRAP3-6
                            	    58: JTRAP5      EQU  JTRAP4-6
                            	    59: JTRAP6      EQU  JTRAP5-6
                            	    60: JTRAP7      EQU  JTRAP6-6
                            	    61: JTRAP8      EQU  JTRAP7-6
                            	    62: JTRAP9      EQU  JTRAP8-6
                            	    63: JTRAPA      EQU  JTRAP9-6
                            	    64: JTRAPB      EQU  JTRAPA-6
                            	    65: JTRAPC      EQU  JTRAPB-6
                            	    66: JTRAPD      EQU  JTRAPC-6
                            	    67: JTRAPE      EQU  JTRAPD-6
                            	    68: JTRAPF      EQU  JTRAPE-6
                            	    69: JLAST_ENTRY EQU  JTRAPF      
                            	    70: 
                            	    71: ; jump table patching
                            	    72: JUMPLONG    EQU  $4EF9           ; opcode for jmp long
                            	    73: 
                            	    74: ; Monitor's RAM area, 192 bytes
                            	    75: MONVARS     EQU  JLAST_ENTRY-192
                            	    76: OFFSET_OFF  EQU  0               ; 32 byte, for disassembler usage
                            	    77: FLAG        EQU  OFFSET_OFF+32   ; 2 byte, 16-bit monitor flag
                            	    78: BUFFER      EQU  FLAG+2          ; 80 byte
                            	    79: POINTER_NOW EQU  BUFFER+80       ; 4 byte
                            	    80: USER_DATA   EQU  POINTER_NOW+4   ; 32 byte, user D0-D7
                            	    81: USER_ADDR   EQU  USER_DATA+32    ; 28 byte, user A0-A6
                            	    82: USER_USP    EQU  USER_ADDR+28    ; 4 byte, A7 = USP
                            	    83: USER_SR     EQU  USER_USP+4      ; 2 byte
                            	    84: USER_SS     EQU  USER_SR+2       ; 4 byte
                            	    85: USER_PC     EQU  USER_SS+4       ; 4 byte
                            	    86: OFFSET      EQU  MONVARS+OFFSET_OFF
                            	    87: 
                            	    88: ; Monitor's stack
                            	    89: SUPER_STACK EQU MONVARS-4	        ; top of supervisor stack, monitor worst-case stack usage is about 40-50 bytes
                            	    90: USER_STACK  EQU SUPER_STACK-80   ; top of user stack
                            	    91: 
                            	    92: ; status register values
                            	    93: INT_ON   EQU  $2000    ; BOTH, SET SUPERVISOR MODE, S=1
                            	    94: INT_OFF  EQU  $2700
                            	    95: SUPERVISOR_BIT EQU 5
                            	    96: TRACE_BIT EQU 7
                            	    97: 
                            	    98: CR      EQU 13
                            	    99: LF      EQU 10
                            	   100: SP      EQU 32
                            	   101: BS      EQU 8
                            	   102: RS      EQU $1E
                            	   103: ESC     EQU $1B
                            	   104: BIT_ESC      EQU 0              ; ESC BIT POSITION #0
                            	   105: 
                            	   106: MAIN    EQU 0
                            	   107: UTIL    EQU 1
                            	   108: 
                            	   109:    SECTION MAIN
                            	   110:    ORG LOADADDR               
                            	   111:    
                            	   112: ; ROM Exception vector table
                            	   113: ; When running from RAM, this is just wasted space
                            	   114: 
00:00000000 600003FE        	   115:    BRA SZERO               ; 4 bytes, if executing from RAMBASE. This is also the stack pointer value after reset
00:00000004 00000418        	   116:    dc.l SRESET
00:00000008 000FFFFA        	   117:    dc.l JBUS_ERR, JADDR_ERR, JILLEGAL, JZERO_DIV, JCHK, JTRAPV, JPRIV_VIOL, JTRACE, JLINE_A, JLINE_F
00:0000000C 000FFFF4
00:00000010 000FFFEE
00:00000014 000FFFE8
00:00000018 000FFFE2
00:0000001C 000FFFDC
00:00000020 000FFFD6
00:00000024 000FFFD0
00:00000028 000FFFCA
00:0000002C 000FFFC4
                            	   118: 
                            	   119:    ORG LOADADDR+$64   
00:00000064 000FFFBE        	   120:    dc.l JINT1, JINT2, JINT3, JINT4, JINT5, JINT6, JINT7
00:00000068 000FFFB8
00:0000006C 000FFFB2
00:00000070 000FFFAC
00:00000074 000FFFA6
00:00000078 000FFFA0
00:0000007C 000FFF9A
00:00000080 000FFF94        	   121:    dc.l JTRAP0, JTRAP1, JTRAP2, JTRAP3, JTRAP4, JTRAP5, JTRAP6, JTRAP7, JTRAP8, JTRAP9, JTRAPA, JTRAPB, JTRAPC, JTRAPD,
00:00000084 000FFF8E
00:00000088 000FFF88
00:0000008C 000FFF82
00:00000090 000FFF7C
00:00000094 000FFF76
00:00000098 000FFF70
00:0000009C 000FFF6A
00:000000A0 000FFF64
00:000000A4 000FFF5E
00:000000A8 000FFF58
00:000000AC 000FFF52
00:000000B0 000FFF4C
00:000000B4 000FFF46
00:000000B8 000FFF40
00:000000BC 000FFF3A
                            	   122:    ; end of exception vector table
                            	   123: 
                            	   124:    ORG LOADADDR+$400
                            	   125: 
                            	   126: SZERO:
00:00000400 46FC2700        	   127:       MOVE.W #INT_OFF,SR  ; INTERRUPT OFF, SUPERVISOR MODE SET
00:00000404 2E7C000FFE76    	   128:       MOVE.L #SUPER_STACK,SP  ; REINIT SYSTEM STACK
00:0000040A 47F900001E99    	   129:       LEA.L BZERO.L,A3
00:00000410 6100025C        	   130:       BSR PSTR
00:00000414 4EF8042C        	   131:       JMP START
                            	   132: SRESET:
00:00000418 46FC2700        	   133:       MOVE.W #INT_OFF,SR  ; INTERRUPT OFF, SUPERVISOR MODE SET
00:0000041C 2E7C000FFE76    	   134:       MOVE.L #SUPER_STACK,SP  ; REINIT SYSTEM STACK
00:00000422 47F900001E80    	   135:       LEA.L BRESET.L,A3
00:00000428 61000244        	   136:       BSR PSTR
                            	   137: START:
                            	   138:       ; turn off LEDs
00:0000042C 227C0007E000    	   139:       MOVEA.L #DOUT,A1
00:00000432 143C00FF        	   140:       MOVE.B #$FF,D2
00:00000436 1282            	   141:       MOVE.B D2,(A1)    
                            	   142:       
                            	   143:       ; init RAM jump table entries
00:00000438 227C000FFF3A    	   144:       MOVEA.L #JLAST_ENTRY,A1
00:0000043E 247C00100000    	   145:       MOVEA.L #RAMTOP+1,A2
                            	   146:       
                            	   147: FILLJMP
00:00000444 32FC4EF9        	   148:       MOVE.W #JUMPLONG,(A1)+
00:00000448 22FC00000F22    	   149:       MOVE.L #SERVICE_DEFAULT,(A1)+
00:0000044E B5C9            	   150:       CMPA.L A1,A2
00:00000450 66F2            	   151:       BNE FILLJMP
                            	   152:       
00:00000452 23FC00000DCE000F	   153:       MOVE.L #SERVICE_TRAP0,JTRACE+2
00:0000045A FFD2
00:0000045C 23FC00000DCE000F	   154:       MOVE.L #SERVICE_TRAP0,JTRAP0+2
00:00000464 FF96
00:00000466 23FC00000EE6000F	   155:       MOVE.L #SERVICE_ILLEGAL,JILLEGAL+2
00:0000046E FFF0
00:00000470 23FC00000EF0000F	   156:       MOVE.L #SERVICE_ADDRERR,JADDR_ERR+2
00:00000478 FFF6
00:0000047A 23FC00000EFA000F	   157:       MOVE.L #SERVICE_ZERODIV,JZERO_DIV+2
00:00000482 FFEA
00:00000484 23FC00000F04000F	   158:       MOVE.L #SERVICE_PRIVVIOL,JPRIV_VIOL+2
00:0000048C FFD8
00:0000048E 23FC00000F0E000F	   159:       MOVE.L #SERVICE_LINEA,JLINE_A+2
00:00000496 FFCC
00:00000498 23FC00000F18000F	   160:       MOVE.L #SERVICE_LINEF,JLINE_F+2
00:000004A0 FFC6
                            	   161: 
                            	   162:       ; monitor init
                            	   163:       ;BSR SCROLL
                            	   164: 
00:000004A2 61000898        	   165:       BSR CLEAR_MON_RAM
                            	   166: 
00:000004A6 47F900001E54    	   167:       LEA.L TITLE1.L,A3
00:000004AC 610001C0        	   168:       BSR PSTR
                            	   169: 
                            	   170:       ; init pointer and user PC to a safe RAM location that should be after a RAM-resident monitor
00:000004B0 2C7C000FFE7A    	   171:       MOVEA.L #MONVARS,A6
00:000004B6 2D7C000840000072	   172:       MOVE.L #RAM+$4000,POINTER_NOW(A6)
00:000004BE 2D7C0008400000BC	   173:       MOVE.L #RAM+$4000,USER_PC(A6)    
                            	   174:       
00:000004C6 2D7C000FFE2600B2	   175:       MOVE.L #USER_STACK,USER_USP(A6) ; INIT USER STACK
00:000004CE 40C0            	   176:       MOVE.W SR,D0
00:000004D0 3D4000B6        	   177:       MOVE.W D0,USER_SR(A6) 
                            	   178: 
00:000004D4 42AE0020        	   179:       CLR.L FLAG(A6)         ; CLEAR SYSTEM MONITOR FLAG
                            	   180:       ;MOVE.W #INT_ON,SR       ; ON INTERRUPT, SUPERVISOR MODE SET
                            	   181: 
00:000004D8 610001CC        	   182: LOOP  BSR SEND_PROMPT
00:000004DC 61000162        	   183:       BSR CIN
00:000004E0 B03C0040        	   184:       CMP.B #$40,D0
00:000004E4 6D04            	   185:       BLT.S NO_CHANGE
                            	   186: 
00:000004E6 C03C00DF        	   187:       AND.B #$DF,D0
                            	   188: 
                            	   189: NO_CHANGE
00:000004EA B03C004C        	   190:       CMP.B #'L',D0
00:000004EE 6606            	   191:       BNE NEXT1
00:000004F0 610002EC        	   192:       BSR READ_S_REC    ; load Motorola S-record
00:000004F4 60E2            	   193:       BRA LOOP
                            	   194: 
00:000004F6 B03C0053        	   195: NEXT1 CMP.B #'S',D0       
00:000004FA 6606            	   196:       BNE NEXT2
00:000004FC 6100096E        	   197:       BSR VIEW_USP      ; VIEW USER STACK
00:00000500 60D6            	   198:       BRA LOOP
                            	   199: 
00:00000502 B03C0048        	   200: NEXT2 CMP.B #'H',D0
00:00000506 6606            	   201:       BNE NEXT3
00:00000508 610003E8        	   202:       BSR HEX_DUMP      ; hex dump memory from current pointer
00:0000050C 60CA            	   203:       BRA LOOP
                            	   204: 
00:0000050E B03C0050        	   205: NEXT3 CMP.B #'P',D0
00:00000512 6606            	   206:       BNE NEXT4
00:00000514 6100044E        	   207:       BSR NEW_POINTER   ; change current memory pointer
00:00000518 60BE            	   208:       BRA LOOP
                            	   209: 
00:0000051A B03C004A        	   210: NEXT4 CMP.B #'J',D0
00:0000051E 6606            	   211:       BNE NEXT5
00:00000520 6100077A        	   212:       BSR JUMP          ; jump to address
00:00000524 60B2            	   213:       BRA LOOP
                            	   214: 
00:00000526 B03C004E        	   215: NEXT5 CMP.B #'N',D0
00:0000052A 6606            	   216:       BNE NEXT6
00:0000052C 6100022E        	   217:       BSR READ_BINARY   ; upload binary data
00:00000530 60A6            	   218:       BRA LOOP
                            	   219: 
00:00000532 B03C0046        	   220: NEXT6 CMP.B #'F',D0
00:00000536 6606            	   221:       BNE NEXT7
00:00000538 6100049A        	   222:       BSR FILL_MEMORY    ; fill memory 
00:0000053C 609A            	   223:       BRA LOOP
                            	   224: 
00:0000053E B03C0045        	   225: NEXT7 CMP.B #'E',D0
00:00000542 6606            	   226:       BNE NEXT8
00:00000544 610004FE        	   227:       BSR EDIT_MEMORY    ; edit memory
00:00000548 608E            	   228:       BRA LOOP
                            	   229: 
00:0000054A B03C005A        	   230: NEXT8 CMP.B #'Z',D0
00:0000054E 6606            	   231:       BNE NEXT9
00:00000550 610004BA        	   232:       BSR CLEAR_MEMORY   ; clear memory
00:00000554 6082            	   233:       BRA LOOP
                            	   234: 
00:00000556 B03C0055        	   235: NEXT9 CMP.B #'U',D0
00:0000055A 6608            	   236:       BNE NEXT10
00:0000055C 610001C4        	   237:       BSR UPDATE_FLASH
00:00000560 6000FF76        	   238:       BRA LOOP
                            	   239: 
00:00000564 B03C003F        	   240: NEXT10 CMP.B #'?',D0
00:00000568 6644            	   241:        BNE.S NEXT11
00:0000056A 610008F4        	   242:        BSR ABOUT         ; about and help
                            	   243:        ; show amount of RAM used for monitor and jump table
00:0000056E 47F9000020F6    	   244:        LEA.L MEMUSE1.L,A3
00:00000574 610000F8        	   245:        BSR PSTR
00:00000578 7000            	   246:        MOVE.L #LOADADDR,D0
00:0000057A 61000362        	   247:        BSR OUT6X
00:0000057E 103C002D        	   248:        MOVE.B #'-',D0
00:00000582 6178            	   249:        BSR COUT
00:00000584 203C000023DD    	   250:        MOVE.L #TAIL,D0
00:0000058A 61000352        	   251:        BSR OUT6X  
00:0000058E 47F900002107    	   252:        LEA.L MEMUSE2.L,A3
00:00000594 610000D8        	   253:        BSR PSTR 
00:00000598 203C000FFE26    	   254:        MOVE.L #USER_STACK,D0
00:0000059E 6100033E        	   255:        BSR OUT6X     
00:000005A2 610000D6        	   256:        BSR NEW_LINE
00:000005A6 61000528        	   257:        BSR HELP
00:000005AA 6000FF2C        	   258:        BRA LOOP
                            	   259: 
00:000005AE B03C0052        	   260: NEXT11 CMP.B #'R',D0
00:000005B2 6608            	   261:       BNE.S NEXT12
00:000005B4 610005AE        	   262:       BSR DISPLAY_REG    ; display register contents
00:000005B8 6000FF1E        	   263:       BRA LOOP
                            	   264: 
00:000005BC B03C002E        	   265: NEXT12 CMP.B #'.',D0
00:000005C0 6608            	   266:       BNE.S NEXT13
00:000005C2 6100078C        	   267:       BSR MODIFY_REG     ; modify register contents
00:000005C6 6000FF10        	   268:       BRA LOOP
                            	   269: 
00:000005CA B03C0044        	   270: NEXT13 CMP.B #'D',D0
00:000005CE 6608            	   271:        BNE.S NEXT14
00:000005D0 6100083A        	   272:        BSR DISASSEMBLE   ; disassemble memory from current pointer
00:000005D4 6000FF02        	   273:        BRA LOOP
                            	   274: 
                            	   275: NEXT14 ;CMP.B #'A',D0
                            	   276:        ;BNE.S NEXT15
                            	   277:        ;BSR ABOUT
                            	   278:        ;BRA LOOP
                            	   279: 
00:000005D8 B03C0054        	   280: NEXT15 CMP.B #'T',D0
00:000005DC 6608            	   281:        BNE.S NEXT16
00:000005DE 6100071A        	   282:        BSR TRACE_JUMP    ; trace execution from user PC
00:000005E2 6000FEF4        	   283:        BRA LOOP
                            	   284: 
                            	   285: NEXT16 ;CMP.B #'G',D0
                            	   286:        ;BNE.S NEXT17
                            	   287:        ;JMP $102000.L       ; USE G COMMAND FOR SIMPLE JUMP TO RAM
                            	   288: 
00:000005E6 B03C0049        	   289: NEXT17 CMP.B #'I',D0
00:000005EA 6604            	   290:        BNE.S NEXT18
00:000005EC 600008EA        	   291:        BRA BOOT_RAM      ; simulate "boot" from RAM
                            	   292: 
00:000005F0 61000088        	   293: NEXT18  BSR NEW_LINE
00:000005F4 610000CA        	   294:       BSR SEND_TITLE     ; unrecognized command
00:000005F8 6000FEDE        	   295:       BRA LOOP
                            	   296: 
                            	   297: 
00:000005FC 13FC00FD0007E000	   298: COUT      MOVE.B #$FD,DOUT	  
00:00000604 083900000007D000	   299: 	  BTST.B #0,SERSTATUS_TXE
00:0000060C 66EE            	   300:           BNE.S  COUT
00:0000060E 13C00007A000    	   301:           MOVE.B D0,SEROUT
00:00000614 13FC00FF0007E000	   302:           MOVE.B #$FF,DOUT
00:0000061C 4E75            	   303:           RTS
                            	   304: 
                            	   305: 
00:0000061E 13FC00FE0007E000	   306: CINS      MOVE.B #$FE,DOUT
00:00000626 083900000007C000	   307: 	  BTST.B #0,SERSTATUS_RDF
00:0000062E 66EE            	   308:           BNE.S  CINS
00:00000630 103900078000    	   309:           MOVE.B SERIN,D0
00:00000636 13FC00FF0007E000	   310:           MOVE.B #$FF,DOUT
00:0000063E 4E75            	   311:           RTS
                            	   312: 
                            	   313: 
00:00000640 13FC00FE0007E000	   314: CIN      MOVE.B #$FE,DOUT
00:00000648 083900000007C000	   315: 	 BTST.B #0,SERSTATUS_RDF
00:00000650 66EE            	   316:          BNE.S  CIN
00:00000652 103900078000    	   317:          MOVE.B SERIN,D0
00:00000658 61A2            	   318:          BSR COUT
00:0000065A 13FC00FF0007E000	   319:          MOVE.B #$FF,DOUT
00:00000662 4E75            	   320:          RTS
                            	   321: 
00:00000664 083900000007C000	   322: CINREADY BTST.B #0,SERSTATUS_RDF
00:0000066C 4E75            	   323:          RTS
                            	   324:          
                            	   325: ; A3 POINTED TO FIRST BYTE
                            	   326: ; END WITH 0
                            	   327: 
00:0000066E 101B            	   328: PSTR     MOVE.B (A3)+,D0
00:00000670 4A00            	   329:          CMP.B  #0,D0
00:00000672 6704            	   330:          BEQ.S PSTR1
00:00000674 6186            	   331:          BSR COUT
00:00000676 60F6            	   332:          BRA.S PSTR
                            	   333: 
00:00000678 4E75            	   334: PSTR1    RTS
                            	   335: 
                            	   336: ; NEW LINE
                            	   337: 
00:0000067A 2F00            	   338: NEW_LINE MOVE.L D0,-(SP)
00:0000067C 103C000D        	   339:          MOVE.B #CR,D0
00:00000680 6100FF7A        	   340:          BSR COUT
00:00000684 103C000A        	   341:          MOVE.B #LF,D0
00:00000688 6100FF72        	   342:          BSR COUT
00:0000068C 201F            	   343:          MOVE.L (SP)+,D0
00:0000068E 4E75            	   344:          RTS
                            	   345: 
00:00000690 103C0020        	   346: SPACE    MOVE.B #SP,D0
00:00000694 6100FF66        	   347:          BSR COUT
00:00000698 4E75            	   348:          RTS
                            	   349: 
00:0000069A 323C0019        	   350: SCROLL   MOVE.W #25,D1
00:0000069E 61DA            	   351: SCROLL1  BSR NEW_LINE
00:000006A0 51C9FFFC        	   352:          DBF D1,SCROLL1
00:000006A4 4E75            	   353:          RTS
                            	   354: 
                            	   355: SEND_PROMPT
00:000006A6 2C7C000FFE7A    	   356:         MOVEA.L #MONVARS,A6
00:000006AC 61CC            	   357:         BSR NEW_LINE
00:000006AE 202E0072        	   358:         MOVE.L POINTER_NOW(A6),D0
00:000006B2 6100022A        	   359:         BSR OUT6X
00:000006B6 47F900001EA5    	   360:         LEA.L PROMPT.L,A3
00:000006BC 61B0            	   361:         BSR PSTR
00:000006BE 4E75            	   362:         RTS
                            	   363: 
00:000006C0 47F900001E54    	   364: SEND_TITLE LEA.L TITLE1.L,A3
00:000006C6 61A6            	   365:            BSR PSTR
00:000006C8 4E75            	   366:            RTS
                            	   367: 
                            	   368: ; S19 LOADER
                            	   369: 
                            	   370: ; CONVERT ASCII LETTER TO 8-BIT VALUE
                            	   371: 
00:000006CA 04000030        	   372: TO_HEX SUBI.B #$30,D0
00:000006CE 0C00000A        	   373:        CMPI.B #$A,D0
00:000006D2 6B06            	   374:        BMI  ZERO_TO_NINE
00:000006D4 C03C00DF        	   375:        AND.B #$DF,D0
00:000006D8 5F00            	   376:        SUBI.B #7,D0
                            	   377: 
                            	   378: ZERO_TO_NINE
                            	   379: 
00:000006DA 1200            	   380:        MOVE.B D0,D1
                            	   381: 
00:000006DC 4E75            	   382:         RTS
                            	   383: 
                            	   384: ; READ TWO BYTES ASCII AND CONVERT TO SINGLE BYTE DATA
                            	   385: 
                            	   386: ; ENTRY: D0 FROM CIN 
                            	   387: ; EXIT: D1 8-BIT VALUE 
                            	   388: ;       
                            	   389: 
                            	   390: 
00:000006DE 6100FF60        	   391: GET_HEX  BSR CIN
                            	   392: 
00:000006E2 B03C0020        	   393:          CMP.B #' ',D0         ; IF BIT_ESC PRESSED
00:000006E6 6608            	   394:          BNE.S GET_HEX1
00:000006E8 08EE00000020    	   395:          BSET.B #BIT_ESC,FLAG(A6)
00:000006EE 4E75            	   396:          RTS
                            	   397: 
                            	   398: 
00:000006F0 B03C000D        	   399: GET_HEX1 CMP.B #CR,D0
00:000006F4 6608            	   400:          BNE.S GET_HEX2
00:000006F6 08EE00010020    	   401:          BSET.B #1,FLAG(A6)       ; ENTER PRESSED
00:000006FC 4E75            	   402:          RTS
                            	   403: 
                            	   404: 
00:000006FE 61CA            	   405: GET_HEX2 BSR TO_HEX
00:00000700 E919            	   406:          ROL.B #4,D1
00:00000702 1401            	   407:          MOVE.B D1,D2
00:00000704 6100FF3A        	   408:          BSR CIN
00:00000708 61C0            	   409:          BSR TO_HEX
00:0000070A D202            	   410:          ADD.B D2,D1
00:0000070C 4E75            	   411:          RTS
                            	   412: 
                            	   413: 
00:0000070E 6100FF0E        	   414: GET_HEXS   BSR CINS
00:00000712 61B6            	   415:          BSR TO_HEX
00:00000714 E919            	   416:          ROL.B #4,D1
00:00000716 1401            	   417:          MOVE.B D1,D2
00:00000718 6100FF04        	   418:          BSR CINS
00:0000071C 61AC            	   419:          BSR TO_HEX
00:0000071E D202            	   420:          ADD.B D2,D1
00:00000720 4E75            	   421:          RTS
                            	   422: 
                            	   423: UPDATE_FLASH
00:00000722 47F900001F4F    	   424: 	 LEA.L UPDATE.L,A3
00:00000728 6100FF44        	   425:          BSR PSTR
                            	   426:          ; hard-code the address at RAMBASE+$1000 (RAMBASE+4K)
00:0000072C 287C00081000    	   427:          MOVE.L #RAM+$1000,A4
00:00000732 2A4C            	   428:          MOVEA.L A4,A5
00:00000734 4EB8077C        	   429:          JSR READ_BINARY_XFER
                            	   430:          ; copy flash util to RAMBASE
00:00000738 307C1BE8        	   431:          MOVE.L #FLASHUTIL_START,A0
00:0000073C 327C1E54        	   432:          MOVE.L #FLASHUTIL_END,A1
00:00000740 247C00080000    	   433:          MOVE.L #RAM,A2
                            	   434: COPY_FLASHUTIL
00:00000746 14D8            	   435:          MOVE.B (A0)+,(A2)+
00:00000748 B3C8            	   436:          CMP.L  A0,A1
00:0000074A 66FA            	   437:          BNE COPY_FLASHUTIL
                            	   438:          ; set up call to flash util
                            	   439:          ; A0 = source buffer start address (in RAM)
                            	   440: 	 ; A1 = source buffer end address + 1
                            	   441: 	 ; A2 = dest buffer start address (in Flash ROM)
00:0000074C 207C00081000    	   442: 	 MOVE.L #RAM+$1000,A0
00:00000752 224C            	   443: 	 MOVE.L A4,A1
00:00000754 95CA            	   444: 	 MOVE.L #ROMBASE,A2
                            	   445: 	 ; run flash util
00:00000756 4EF900080000    	   446: 	 JMP RAM
                            	   447:          
00:0000075C 47F900001FF4    	   448: READ_BINARY LEA.L LOADB.L,A3
00:00000762 6100FF0A        	   449:          BSR PSTR
00:00000766 47F900001ED6    	   450:          LEA.L STARTA.L,A3
00:0000076C 6100FF00        	   451:          BSR PSTR
00:00000770 61000246        	   452:          BSR GET_ADDRESS
00:00000774 2846            	   453:          MOVEA.L D6,A4
00:00000776 2A46            	   454:          MOVEA.L D6,A5
00:00000778 6100FF00        	   455:          BSR NEW_LINE
                            	   456: READ_BINARY_XFER
00:0000077C 47F900002008    	   457:          LEA.L LOADB1.L,A3
00:00000782 6100FEEA        	   458:          BSR PSTR
                            	   459: 
                            	   460: WAITBIN
00:00000786 6100FEDC        	   461:          BSR CINREADY
00:0000078A 66FA            	   462:          BNE WAITBIN
                            	   463:          
00:0000078C 6100FE90        	   464:          BSR CINS
00:00000790 B03C001B        	   465:          CMP.B #ESC,D0
00:00000794 6602            	   466:          BNE GOTBIN
00:00000796 4E75            	   467:          RTS
00:00000798 18C0            	   468: GOTBIN   MOVE.B D0,(A4)+
00:0000079A 6006            	   469: 	 BRA CHK_ACK
                            	   470: 	 
00:0000079C 18F900078000    	   471: GETBIN   MOVE.B SERIN,(A4)+
                            	   472: CHK_ACK  ;TSTB.L #$FF,A4
                            	   473:          ;BNE NOACK
                            	   474:          ;MOVE.B #'_',SEROUT
                            	   475: NOACK    ; quick test for next byte ready
00:000007A2 083900000007C000	   476:          BTST.B #0,SERSTATUS_RDF
00:000007AA 67F0            	   477:          BEQ GETBIN
                            	   478:          ; busy loop for next byte
00:000007AC 223C00004E20    	   479:          MOVE.L #20000,D1 ; reset timeout
                            	   480: 	
                            	   481: WAITBIN2 
                            	   482:          ;BSR CINREADY
00:000007B2 083900000007C000	   483:          BTST.B #0,SERSTATUS_RDF
00:000007BA 67E0            	   484:          BEQ GETBIN
00:000007BC 51C9FFF4        	   485:          DBF D1,WAITBIN2
                            	   486:          
                            	   487:          ; done
00:000007C0 6100FEB8        	   488:          BSR NEW_LINE
00:000007C4 2C4C            	   489:          MOVE.L A4,A6
00:000007C6 9DCD            	   490:          SUB.L A5,A6
00:000007C8 200E            	   491:          MOVE.L A6,D0
00:000007CA 61000310        	   492:          BSR PRINT_DEC
00:000007CE 47F900002047    	   493:          LEA.L NUMBER.L,A3
00:000007D4 6100FE98        	   494:          BSR PSTR
00:000007D8 6100FEA0        	   495:          BSR NEW_LINE
00:000007DC 4E75            	   496:          RTS
                            	   497: 
                            	   498: ;
                            	   499: ;S214000400227C00400001143C00006100002C128297
                            	   500: ;S804000000FB
                            	   501: 
                            	   502: ; READ S-RECORD
                            	   503: ; D5 = BYTE CHECK SUM FOR EACH RECORD
                            	   504: ; D4 = NUMBER OF BYTE RECEIVED
                            	   505: 
00:000007DE 47F900001FBA    	   506: READ_S_REC      LEA.L LOAD.L,A3
00:000007E4 6100FE88        	   507:                 BSR PSTR
00:000007E8 7800            	   508:                 CLR.L D4     ; CLEAR NUMBER OF BYTE 
00:000007EA 7A00            	   509:                 CLR.L D5     ; CLEAR CHECK SUM AND ERROR BYTE
                            	   510: 
00:000007EC 6100FE30        	   511: READ_S_REC1     BSR CINS
00:000007F0 B03C0053        	   512:                 CMP.B #'S',D0
00:000007F4 6602            	   513:                 BNE.S CHECK_ESC
00:000007F6 6008            	   514:                 BRA.S GET_TYPE
                            	   515: 
                            	   516: 
00:000007F8 B03C001B        	   517: CHECK_ESC       CMP.B #ESC,D0
00:000007FC 66EE            	   518:                 BNE.S READ_S_REC1
                            	   519: 
00:000007FE 4E75            	   520:                 RTS
                            	   521: 
                            	   522: 
00:00000800 6100FE1C        	   523: GET_TYPE        BSR CINS
00:00000804 B03C0038        	   524:                 CMP.B #'8',D0
00:00000808 6634            	   525:                 BNE CHECK_DATA
                            	   526: 
00:0000080A 6100FE12        	   527: WAIT_CR         BSR CINS
00:0000080E B03C000A        	   528:                 CMP.B #LF,D0
00:00000812 66F6            	   529:                 BNE.S WAIT_CR
                            	   530: 
00:00000814 6100FE64        	   531:                 BSR NEW_LINE
00:00000818 6100FE60        	   532:                 BSR NEW_LINE
00:0000081C 2004            	   533:                 MOVE.L D4,D0
00:0000081E 610002BC        	   534:                 BSR PRINT_DEC     ; SHOW NUMBER OF BYTE RECEIVED
00:00000822 367C2047        	   535:                 MOVEA.L #NUMBER,A3
00:00000826 6100FE46        	   536:                 BSR PSTR
                            	   537: 
00:0000082A 4845            	   538:                 SWAP.W D5
00:0000082C 7000            	   539:                 CLR.L D0
00:0000082E 3005            	   540:                 MOVE.W D5,D0
00:00000830 610002AA        	   541:                 BSR PRINT_DEC
00:00000834 367C2057        	   542:                 MOVEA.L #ERROR,A3
00:00000838 6100FE34        	   543:                 BSR PSTR
00:0000083C 4E75            	   544:                 RTS
                            	   545: 
                            	   546: 
00:0000083E B03C0032        	   547: CHECK_DATA      CMP.B #'2',D0
00:00000842 6708            	   548:                 BEQ.S DATA_FOUND
                            	   549: 
00:00000844 B03C0030        	   550:                 CMP.B #'0',D0
00:00000848 67A2            	   551:                 BEQ.S READ_S_REC1
00:0000084A 60A0            	   552:                 BRA.S READ_S_REC1
                            	   553: 
                            	   554: 
00:0000084C 4245            	   555: DATA_FOUND      CLR.W D5          ; CLEAR BYTE CHECK SUM
                            	   556: 
00:0000084E 6100FEBE        	   557:                 BSR GET_HEXS
00:00000852 7E00            	   558:                 CLR.L D7
00:00000854 1E01            	   559:                 MOVE.B D1,D7       ; NUMBER OF BYTE SAVED TO D7
00:00000856 5B07            	   560:                 SUBQ.B #5,D7
00:00000858 2007            	   561:                 MOVE.L D7,D0
                            	   562: 
00:0000085A DA01            	   563:                 ADD.B  D1,D5       ; ADD CHECK SUM
                            	   564: 
                            	   565: ; GET 24-BIT ADDRESS, SAVE TO A6
                            	   566: 
00:0000085C 7C00            	   567:               CLR.L D6
00:0000085E 6100FEAE        	   568:               BSR GET_HEXS
00:00000862 1C01            	   569:               MOVE.B D1,D6
00:00000864 DA01            	   570:               ADD.B  D1,D5
                            	   571: 
00:00000866 E19E            	   572:               ROL.L #8,D6
00:00000868 6100FEA4        	   573:               BSR GET_HEXS
00:0000086C 1C01            	   574:               MOVE.B D1,D6
00:0000086E DA01            	   575:               ADD.B D1,D5
                            	   576: 
00:00000870 E19E            	   577:               ROL.L #8,D6
                            	   578: 
00:00000872 6100FE9A        	   579:               BSR GET_HEXS
00:00000876 1C01            	   580:               MOVE.B D1,D6
00:00000878 DA01            	   581:               ADD.B D1,D5
                            	   582: 
00:0000087A 2C46            	   583:               MOVEA.L D6,A6
                            	   584:                          
00:0000087C 6100FE90        	   585: READ_DATA     BSR GET_HEXS
00:00000880 DA01            	   586:               ADD.B  D1,D5      ; ADD CHECK SUM
00:00000882 1CC1            	   587:               MOVE.B D1,(A6)+
                            	   588: 
00:00000884 4601            	   589:               not.b d1
                            	   590: 
00:00000886 13C10007E000    	   591:               MOVE.B D1,DOUT.L  ; INDICATOR WHILE LOADING
                            	   592: 
00:0000088C 5284            	   593:               ADDQ.L #1,D4      ; BUMP NUMBER OF BYTE RECEIVED
00:0000088E 51CFFFEC        	   594:               DBF D7,READ_DATA
                            	   595: 
00:00000892 4605            	   596:               NOT.B D5          ; ONE'S COMPLEMENT OF BYTE CHECK SUM         
                            	   597: 
00:00000894 6100FE78        	   598:               BSR GET_HEXS      ; GET BYTE CHECK SUM
                            	   599: 
00:00000898 BA01            	   600:               CMP.B D1,D5       ; COMPARE CHECK SUM
00:0000089A 670C            	   601:               BEQ.S NO_ERROR
                            	   602: 
00:0000089C DABC00010000    	   603:               ADD.L #$10000,D5  ; ADD 1 TO UPPER WORD
00:000008A2 103C0058        	   604:               MOVE.B #'X',D0    ; IF NOT EQUAL SEND "X" FOR ERROR
00:000008A6 6004            	   605:               BRA.S CHECKSUM_ERROR
                            	   606: 
00:000008A8 103C005F        	   607: NO_ERROR      MOVE.B #'_',D0      ; "_" NO ERROR RECORD
00:000008AC 6100FD4E        	   608: CHECKSUM_ERROR BSR COUT
                            	   609: 
00:000008B0 6000FF3A        	   610:               BRA READ_S_REC1
                            	   611: 
                            	   612: 
                            	   613: ;LOOP_BACK     BSR CIN
                            	   614: ;              CMP.B #13,D0
                            	   615: ;              BNE LOOP_BACK
                            	   616: ;              RTS
                            	   617: 
                            	   618: 
                            	   619: 
                            	   620: ; PRINT HEX 
                            	   621: ; OUT1X = PRINT ONE HEX
                            	   622: ; OUT2X = PRINT TWO
                            	   623: ; OUT4X = PRINT FOUR
                            	   624: ; OUT8X = PRINT EIGHT
                            	   625: ; ENTRY: D0
                            	   626: 
00:000008B4 1F00            	   627: OUT1X        MOVE.B D0,-(SP)    ;SAVE D0
00:000008B6 C03C000F        	   628:              AND.B #$F,D0
00:000008BA D03C0030        	   629:              ADD.B #'0',D0
00:000008BE B03C0039        	   630:              CMP.B #'9',D0
00:000008C2 6302            	   631:              BLS.S   OUT1X1
00:000008C4 5E00            	   632:              ADD.B #7,D0
00:000008C6 6100FD34        	   633: OUT1X1       BSR COUT
00:000008CA 101F            	   634:              MOVE.B (SP)+,D0    ;RESTORE D0
00:000008CC 4E75            	   635:              RTS
                            	   636: 
00:000008CE E818            	   637: OUT2X        ROR.B #4,D0
00:000008D0 61E2            	   638:              BSR.S OUT1X
00:000008D2 E918            	   639:              ROL.B #4,D0
00:000008D4 60DE            	   640:              BRA OUT1X
                            	   641: 
00:000008D6 E058            	   642: OUT4X        ROR.W #8,D0
00:000008D8 61F4            	   643:              BSR.S OUT2X
00:000008DA E158            	   644:              ROL.W #8,D0
00:000008DC 60F0            	   645:              BRA.S OUT2X
                            	   646: 
00:000008DE 4840            	   647: OUT6X        SWAP.W D0        ; OUT 24-BIT HEX NUMBER
00:000008E0 61EC            	   648:              BSR.S OUT2X
00:000008E2 4840            	   649:              SWAP.W D0
00:000008E4 60F0            	   650:              BRA.S OUT4X
                            	   651: 
00:000008E6 4840            	   652: OUT8X        SWAP.W D0        ; OUT 32-BIT HEX NUMBER
00:000008E8 61EC            	   653:              BSR.S  OUT4X
00:000008EA 4840            	   654:              SWAP.W D0
00:000008EC 60E8            	   655:              BRA.S  OUT4X
                            	   656: 
                            	   657: 
                            	   658: ; PRINT D0 CONTENT
                            	   659: 
00:000008EE 61F6            	   660: PRINT_D0  BSR.S OUT8X
00:000008F0 4E75            	   661:           RTS
                            	   662: 
                            	   663: ; HEX DUMP
                            	   664: ; DUMP MEMORY CONTENT
                            	   665: ; A3: START ADDRESS
                            	   666: 
00:000008F2 47F900001F71    	   667: HEX_DUMP    LEA.L HEX.L,A3
00:000008F8 6100FD74        	   668:             BSR PSTR
                            	   669: 
00:000008FC 2C7C000FFE7A    	   670:             MOVEA.L #MONVARS,A6
00:00000902 266E0072        	   671:             MOVEA.L POINTER_NOW(A6),A3
00:00000906 3C3C000F        	   672:             MOVE.W #15,D6
00:0000090A 6100FD6E        	   673:             BSR NEW_LINE
                            	   674: 
00:0000090E 6100FD6A        	   675: HEX_DUMP2   BSR NEW_LINE
00:00000912 200B            	   676:             MOVE.L A3,D0
00:00000914 61C8            	   677:             BSR OUT6X
00:00000916 6100FD78        	   678:             BSR SPACE
00:0000091A 6100FD74        	   679:             BSR SPACE
                            	   680: 
00:0000091E 3E3C000F        	   681:             MOVE.W #15,D7
                            	   682: 
00:00000922 101B            	   683: HEX_DUMP1   MOVE.B (A3)+,D0
00:00000924 61A8            	   684:             BSR OUT2X
00:00000926 6100FD68        	   685:             BSR SPACE
                            	   686: 
00:0000092A 51CFFFF6        	   687:             DBF D7,HEX_DUMP1
                            	   688: 
00:0000092E 6100FD60        	   689:             BSR SPACE
00:00000932 47EBFFF0        	   690:             SUBA.L #16,A3       ; GET BACK TO BEGINING 
00:00000936 3E3C000F        	   691:             MOVE.W #15,D7
                            	   692: 
00:0000093A 101B            	   693: HEX_DUMP6   MOVE.B (A3)+,D0
                            	   694: 
00:0000093C B03C0020        	   695:             CMP.B #$20,D0
00:00000940 6C06            	   696:             BGE.S HEX_DUMP3
                            	   697: 
00:00000942 103C002E        	   698: HEX_DUMP4   MOVE.B #'.',D0
00:00000946 6006            	   699:             BRA.S  HEX_DUMP5
                            	   700: 
00:00000948 B03C007F        	   701: HEX_DUMP3   CMP.B #$7F,D0
00:0000094C 6CF4            	   702:             BGE.S HEX_DUMP4
                            	   703: 
00:0000094E 6100FCAC        	   704: HEX_DUMP5   BSR COUT
00:00000952 51CFFFE6        	   705:             DBF D7,HEX_DUMP6
                            	   706: 
                            	   707: 
00:00000956 51CEFFB6        	   708:             DBF D6,HEX_DUMP2
                            	   709: 
00:0000095A 2D4B0072        	   710:             MOVE.L A3,POINTER_NOW(A6)   ; UPDATE POINTER_NOW
00:0000095E 6100FD1A        	   711:             BSR NEW_LINE
00:00000962 4E75            	   712:             RTS
                            	   713: 
                            	   714: 
                            	   715: ; NEW POINTER
                            	   716: ; CHANGE 24-BIT ADDRESS-> POINTER_NOW
                            	   717: 
00:00000964 47F900001F47    	   718: NEW_POINTER   LEA.L NEW.L,A3
00:0000096A 6100FD02        	   719:               BSR PSTR
                            	   720: 
                            	   721:               ;BSR SEND_PROMPT
                            	   722: 
00:0000096E 2C7C000FFE7A    	   723:               MOVEA.L #MONVARS,A6
00:00000974 7C00            	   724:               CLR.L D6
00:00000976 6100FD66        	   725:               BSR GET_HEX
00:0000097A 1C01            	   726:               MOVE.B D1,D6
00:0000097C E19E            	   727:               ROL.L #8,D6
00:0000097E 6100FD5E        	   728:               BSR GET_HEX
00:00000982 1C01            	   729:               MOVE.B D1,D6
00:00000984 E19E            	   730:               ROL.L #8,D6
00:00000986 6100FD56        	   731:               BSR GET_HEX
00:0000098A 1C01            	   732:               MOVE.B D1,D6
                            	   733: 
00:0000098C 08860000        	   734:               BCLR.L #0,D6        ; FORCE TO EVEN ADDRESS
                            	   735: 
00:00000990 2D460072        	   736:               MOVE.L D6,POINTER_NOW(A6)
00:00000994 4E75            	   737:               RTS
                            	   738: 
                            	   739: ;PRINT_DEBUG   BSR NEW_LINE
                            	   740: ;              MOVE.L DEBUG(A6),D0
                            	   741: ;              BSR OUT8X
                            	   742: ;              RTS
                            	   743: 
                            	   744: ;QUICK_HOME    LEA.L QUICK.L,A3
                            	   745: ;              BSR PSTR
                            	   746: ;              MOVEA.L #MONVARS,A6
                            	   747: ;              MOVE.L #RAM,POINTER_NOW(A6)
                            	   748: ;              RTS  
                            	   749: 
                            	   750: ; TEST RAM
                            	   751: 
                            	   752: ; GET 32BIT DATA
                            	   753: ; EXIT: D6 CONTAINS 32-BIT ADDRESS
                            	   754: 
00:00000996 7C00            	   755: GET_32BIT     CLR.L D6
00:00000998 6100FD44        	   756:               BSR GET_HEX
00:0000099C 1C01            	   757:               MOVE.B D1,D6
00:0000099E E19E            	   758:               ROL.L #8,D6
00:000009A0 6100FD3C        	   759:               BSR GET_HEX
00:000009A4 1C01            	   760:               MOVE.B D1,D6
00:000009A6 E19E            	   761:               ROL.L #8,D6
00:000009A8 6100FD34        	   762:               BSR GET_HEX
00:000009AC 1C01            	   763:               MOVE.B D1,D6
00:000009AE E19E            	   764:               ROL.L #8,D6
00:000009B0 6100FD2C        	   765:               BSR GET_HEX
00:000009B4 1C01            	   766:               MOVE.B D1,D6
00:000009B6 4E75            	   767:               RTS
                            	   768: 
                            	   769: 
                            	   770: ; GET_ADDRESS
                            	   771: ; EXIT: D6 CONTAINS 24-BIT ADDRESS
                            	   772: 
00:000009B8 7C00            	   773: GET_ADDRESS   CLR.L D6
00:000009BA 6100FD22        	   774:               BSR GET_HEX
                            	   775: 
00:000009BE 1C01            	   776: GET_ADDRESS1  MOVE.B D1,D6
00:000009C0 E19E            	   777:               ROL.L #8,D6
00:000009C2 6100FD1A        	   778:               BSR GET_HEX
00:000009C6 1C01            	   779:               MOVE.B D1,D6
00:000009C8 E19E            	   780:               ROL.L #8,D6
00:000009CA 6100FD12        	   781:               BSR GET_HEX
00:000009CE 1C01            	   782:               MOVE.B D1,D6
00:000009D0 4E75            	   783:               RTS
                            	   784: 
00:000009D2 4E75            	   785: TEST_RAM      RTS
                            	   786: 
                            	   787: ; FILL MEMORY WITH 0xFF
                            	   788: 
00:000009D4 47F900001EBF    	   789: FILL_MEMORY   LEA.L FILL.L,A3
00:000009DA 6100FC92        	   790:               BSR PSTR
                            	   791: 
00:000009DE 47F900001ED6    	   792:               LEA.L STARTA.L,A3
00:000009E4 6100FC88        	   793:               BSR PSTR
00:000009E8 61CE            	   794:               BSR GET_ADDRESS
00:000009EA 2846            	   795:               MOVEA.L D6,A4             ; A4 START ADDRESS
                            	   796: 
00:000009EC 47F900001EE8    	   797:               LEA.L STOP.L,A3
00:000009F2 6100FC7A        	   798:               BSR PSTR
00:000009F6 61C0            	   799:               BSR GET_ADDRESS
00:000009F8 2A46            	   800:               MOVEA.L D6,A5             ; A5 STOP ADDRESS
                            	   801: 
00:000009FA 38FCFFFF        	   802: FILL_MEMORY1  MOVE.W #$FFFF,(A4)+
00:000009FE BBCC            	   803:               CMPA.L A4,A5
00:00000A00 6CF8            	   804:               BGE.S FILL_MEMORY1
                            	   805: 
00:00000A02 367C1EF9        	   806:               MOVEA.L #DONE,A3
00:00000A06 6100FC66        	   807:               BSR PSTR
00:00000A0A 4E75            	   808:               RTS
                            	   809: 
                            	   810: ; CLEAR MEMORY WITH 0x00
                            	   811: 
00:00000A0C 47F900001EA7    	   812: CLEAR_MEMORY  LEA.L CLEAR.L,A3
00:00000A12 6100FC5A        	   813:               BSR PSTR
                            	   814: 
00:00000A16 47F900001ED6    	   815:               LEA.L STARTA.L,A3
00:00000A1C 6100FC50        	   816:               BSR PSTR
00:00000A20 6196            	   817:               BSR GET_ADDRESS
00:00000A22 2846            	   818:               MOVEA.L D6,A4             ; A4 START ADDRESS
                            	   819: 
00:00000A24 47F900001EE8    	   820:               LEA.L STOP.L,A3
00:00000A2A 6100FC42        	   821:               BSR PSTR
00:00000A2E 6188            	   822:               BSR GET_ADDRESS
00:00000A30 2A46            	   823:               MOVEA.L D6,A5             ; A5 STOP ADDRESS
                            	   824: 
00:00000A32 38FC0000        	   825: CLEAR_MEMORY1 MOVE.W #$0000,(A4)+
00:00000A36 BBCC            	   826:               CMPA.L A4,A5
00:00000A38 6CF8            	   827:               BGE.S CLEAR_MEMORY1
                            	   828: 
00:00000A3A 367C1EF9        	   829:               MOVEA.L #DONE,A3
00:00000A3E 6100FC2E        	   830:               BSR PSTR
00:00000A42 4E75            	   831:               RTS
                            	   832: 
                            	   833: ; EDIT MEMORY
                            	   834: ; PRESS SPACE BAR TO QUIT
                            	   835: 
00:00000A44 47F900001F03    	   836: EDIT_MEMORY   LEA.L EDIT1.L,A3
00:00000A4A 6100FC22        	   837:               BSR PSTR
                            	   838: 
00:00000A4E 47F900001F35    	   839:               LEA.L EDIT.L,A3
00:00000A54 6100FC18        	   840:               BSR PSTR
00:00000A58 6100FF5E        	   841:               BSR GET_ADDRESS
                            	   842: 
00:00000A5C 08860000        	   843:               BCLR.L #0,D6        ; FORCE TO EVEN ADDRESS
00:00000A60 2646            	   844:               MOVEA.L D6,A3       ; EDIT ADDRESS
                            	   845: 
                            	   846:              ; MOVEA.L POINTER_NOW.L,A3
                            	   847: 
00:00000A62 6100FC16        	   848: EDIT_MEMORY2  BSR NEW_LINE
00:00000A66 200B            	   849:               MOVE.L A3,D0
00:00000A68 6100FE74        	   850:               BSR OUT6X
00:00000A6C 6100FC22        	   851:               BSR SPACE
00:00000A70 6100FC1E        	   852:               BSR SPACE
                            	   853: 
00:00000A74 103C005B        	   854:               MOVE.B #'[',D0
00:00000A78 6100FB82        	   855:               BSR COUT
00:00000A7C 3013            	   856:               MOVE.W (A3),D0
00:00000A7E 6100FE56        	   857:               BSR OUT4X
00:00000A82 103C005D        	   858:               MOVE.B #']',D0
00:00000A86 6100FB74        	   859:               BSR COUT
                            	   860: 
00:00000A8A 6100FC04        	   861:               BSR SPACE
                            	   862: 
00:00000A8E 4241            	   863:               CLR.W D1
00:00000A90 6100FC4C        	   864:               BSR GET_HEX
                            	   865: 
00:00000A94 08AE00000020    	   866:               BCLR.B #BIT_ESC,FLAG(A6)	; TEST BIT_ESC BIT
00:00000A9A 662E            	   867:               BNE.S EDIT_MEMORY3  ; IF BIT = 1 THEN EXIT
                            	   868: 
00:00000A9C 08AE00010020    	   869:               BCLR.B #1,FLAG(A6)  ; CHECK IF ENTER KEY PRESSED
00:00000AA2 6622            	   870:               BNE.S EDIT_MEMORY4  ; SKIP WRITE TO RAM
                            	   871: 
00:00000AA4 E159            	   872:               ROL.W #8,D1
00:00000AA6 6100FC36        	   873:               BSR GET_HEX
                            	   874: 
00:00000AAA 36BC0000        	   875:               MOVE.W #0,(A3)
                            	   876: 
00:00000AAE 3013            	   877:               MOVE.W (A3),D0   ; TEST RAM OR ROM BY WRITING 0 AND READ BACK
00:00000AB0 4A40            	   878:               CMP.W #0,D0
00:00000AB2 6604            	   879:               BNE.S EDIT_MEMORY5
                            	   880: 
00:00000AB4 3681            	   881:               MOVE.W D1,(A3)     ; OK WRITE TO RAM
00:00000AB6 600E            	   882:               BRA.S EDIT_MEMORY4 
                            	   883: 
00:00000AB8 2F0B            	   884: EDIT_MEMORY5  MOVE.L A3,-(SP)
00:00000ABA 47F900001F41    	   885:               LEA.L ROM.L,A3
00:00000AC0 6100FBAC        	   886:               BSR PSTR
00:00000AC4 265F            	   887:               MOVEA.L (SP)+,A3
                            	   888: 
00:00000AC6 548B            	   889: EDIT_MEMORY4  ADDQ.L #2,A3     ; BUMP A3
                            	   890: 
00:00000AC8 6098            	   891:               BRA.S EDIT_MEMORY2
                            	   892: 
00:00000ACA 6100FBAE        	   893: EDIT_MEMORY3  BSR NEW_LINE
00:00000ACE 4E75            	   894:               RTS
                            	   895: 
                            	   896: 
                            	   897: ; HELP LIST MONITOR COMMANDS
                            	   898: 
00:00000AD0 47F900002205    	   899: HELP          LEA.L HELP_LIST.L,A3
00:00000AD6 6100FB96        	   900:               BSR PSTR
00:00000ADA 4E75            	   901:               RTS
                            	   902: 
                            	   903: ;----------------------------------------------------------------------
                            	   904: ; PRINT_DEC
                            	   905: ; D0 32-BIT BINARY NUMBER
                            	   906: 
00:00000ADC 2F00            	   907: PRINT_DEC MOVE.L D0,-(SP)  ; SAVE D0
00:00000ADE 2A7C000FFE7A    	   908:           MOVEA.L #MONVARS,A5
00:00000AE4 4BED0022        	   909:           ADDA.L #BUFFER,A5
00:00000AE8 6112            	   910:           BSR DHEX2DEC
00:00000AEA 267C000FFE7A    	   911:           MOVEA.L #MONVARS,A3
00:00000AF0 47EB0022        	   912:           ADDA.L #BUFFER,A3
00:00000AF4 6100FB78        	   913:           BSR PSTR
00:00000AF8 201F            	   914:           MOVE.L (SP)+,D0 ; RESTORE D0
00:00000AFA 4E75            	   915:           RTS
                            	   916: 
                            	   917: ;**************************************************************************
                            	   918: ; The portion of code within STAR lines are modified from Tutor source code
                            	   919: ;
                            	   920: ;
                            	   921: ; HEX2DEC   HEX2DEC convert hex to decimal                   
                            	   922: ; CONVERT BINARY TO DECIMAL  REG D0 PUT IN (A5) BUFFER AS ASCII
                            	   923: 
00:00000AFC 48E77F00        	   924: DHEX2DEC  MOVEM.L D1/D2/D3/D4/D5/D6/D7,-(SP)   ;SAVE REGISTERS
00:00000B00 2E00            	   925:          MOVE.L  D0,D7               ;SAVE IT HERE
00:00000B02 6A08            	   926:          BPL.S   DHX2DC
00:00000B04 4487            	   927:          NEG.L   D7             ;CHANGE TO POSITIVE
00:00000B06 6B4E            	   928:          BMI.S   DHX2DC57        ;SPECIAL CASE (-0)
00:00000B08 1AFC002D        	   929:          MOVE.B  #'-',(A5)+     ;PUT IN NEG SIGN
00:00000B0C 4244            	   930: DHX2DC    CLR.W   D4             ;FOR ZERO SURPRESS
00:00000B0E 7C0A            	   931:          MOVEQ.L   #10,D6         ;COUNTER
00:00000B10 7401            	   932: DHX2DC0   MOVEQ.L   #1,D2          ;VALUE TO SUB
00:00000B12 2206            	   933:          MOVE.L  D6,D1          ;COUNTER
00:00000B14 5381            	   934:          SUBQ.L  #1,D1          ;ADJUST - FORM POWER OF TEN
00:00000B16 671A            	   935:          BEQ.S   DHX2DC2         ;IF POWER IS ZERO
00:00000B18 3602            	   936: DHX2DC1   MOVE.W  D2,D3          ;D3=LOWER WORD
00:00000B1A C6FC000A        	   937:          MULU.W    #10,D3
00:00000B1E 4842            	   938:          SWAP.W    D2             ;D2=UPPER WORD
00:00000B20 C4FC000A        	   939:          MULU.W    #10,D2
00:00000B24 4843            	   940:          SWAP.W    D3             ;ADD UPPER TO UPPER
00:00000B26 D443            	   941:          ADD.W   D3,D2
00:00000B28 4842            	   942:          SWAP.W    D2             ;PUT UPPER IN UPPER
00:00000B2A 4843            	   943:          SWAP.W    D3             ;PUT LOWER IN LOWER
00:00000B2C 3403            	   944:          MOVE.W  D3,D2          ;D2=UPPER & LOWER
00:00000B2E 5381            	   945:          SUBQ.L  #1,D1
00:00000B30 66E6            	   946:          BNE     DHX2DC1
00:00000B32 7000            	   947: DHX2DC2   CLR.L   D0             ;HOLDS SUB AMT
00:00000B34 BE82            	   948: DHX2DC22  CMP.L   D2,D7
00:00000B36 6D06            	   949:          BLT.S   DHX2DC3         ;IF NO MORE SUB POSSIBLE
00:00000B38 5280            	   950:          ADDQ.L  #1,D0          ;BUMP SUBS
00:00000B3A 9E82            	   951:          SUB.L   D2,D7          ;COUNT DOWN BY POWERS OF TEN
00:00000B3C 60F6            	   952:          BRA.S   DHX2DC22        ;DO MORE
00:00000B3E 4A00            	   953: DHX2DC3   TST.B   D0             ;ANY VALUE?
00:00000B40 6604            	   954:          BNE.S   DHX2DC4
00:00000B42 4A44            	   955:          TST.W   D4             ;ZERO SURPRESS
00:00000B44 6708            	   956:          BEQ.S   DHX2DC5
00:00000B46 06000030        	   957: DHX2DC4   ADDI.B  #$30,D0        ;BINARY TO ASCII
00:00000B4A 1AC0            	   958:          MOVE.B  D0,(A5)+       ;PUT IN BUFFER
00:00000B4C 1800            	   959:          MOVE.B  D0,D4          ;MARK AS NON ZERO SURPRESS
00:00000B4E 5386            	   960: DHX2DC5   SUBQ.L  #1,D6          ;NEXT POWER
00:00000B50 66BE            	   961:          BNE     DHX2DC0
00:00000B52 4A44            	   962:          TST.W   D4             ;SEE IF ANYTHING PRINTED
00:00000B54 6604            	   963:          BNE.S   DHX2DC6
00:00000B56 1AFC0030        	   964: DHX2DC57  MOVE.B  #'0',(A5)+     ;PRINT AT LEST A ZERO
00:00000B5A 1ABC0000        	   965: DHX2DC6   MOVE.B  #0,(A5)        ; PUT TERMINATOR
00:00000B5E 4CDF00FE        	   966:          MOVEM.L (SP)+,D1/D2/D3/D4/D5/D6/D7   ;RESTORE REGISTERS
00:00000B62 4E75            	   967:          RTS                    ;END OF ROUTINE
                            	   968: 
                            	   969: ;******************************************************************************
                            	   970: 
                            	   971: 
                            	   972: ; DISPLAY USER REGISTERS D0-D7 AND A0-A7
                            	   973: ;
                            	   974: 
00:00000B64 47F900002071    	   975: DISPLAY_REG  LEA.L REGISTER_DISP.L,A3
00:00000B6A 6100FB02        	   976:              BSR PSTR
                            	   977: 
00:00000B6E 2C7C000FFE7A    	   978: DISPLAY_REG1 MOVEA.L #MONVARS,A6
00:00000B74 6100FB04        	   979:              BSR NEW_LINE
00:00000B78 6100FB00        	   980:              BSR NEW_LINE
00:00000B7C 367C21EE        	   981:              MOVEA.L #PC_REG,A3
00:00000B80 6100FAEC        	   982:              BSR PSTR
00:00000B84 202E00BC        	   983:              MOVE.L USER_PC(A6),D0
00:00000B88 6100FD54        	   984:              BSR OUT6X
                            	   985: 
00:00000B8C 6100FB02        	   986:              BSR SPACE
                            	   987: 
00:00000B90 367C21F2        	   988:              MOVEA.L #SR_REG,A3
00:00000B94 6100FAD8        	   989:              BSR PSTR
00:00000B98 302E00B6        	   990:              MOVE.W USER_SR(A6),D0
00:00000B9C 6100FD38        	   991:              BSR OUT4X
                            	   992: 
                            	   993: ; NOW PRINT FLAG LOGIC IN BINARY
00:00000BA0 1800            	   994:              MOVE.B D0,D4       ; SAVE TO D4
                            	   995: 
00:00000BA2 E70C            	   996:              LSL.B #3,D4        ; BIT POSITION BEFORE SHIFTING OUT
                            	   997: 
00:00000BA4 6100FAEA        	   998:              BSR SPACE
00:00000BA8 367C2202        	   999:              MOVEA.L #X_FLAG,A3
00:00000BAC 6100FAC0        	  1000:              BSR PSTR
00:00000BB0 E30C            	  1001:              LSL.B #1,D4
00:00000BB2 610000D2        	  1002:              BSR PRINT_BIT
                            	  1003: 
00:00000BB6 6100FAD8        	  1004:              BSR SPACE
00:00000BBA 367C21FF        	  1005:              MOVEA.L #N_FLAG,A3
00:00000BBE 6100FAAE        	  1006:              BSR PSTR
00:00000BC2 E30C            	  1007:              LSL.B #1,D4
00:00000BC4 610000C0        	  1008:              BSR PRINT_BIT
                            	  1009: 
00:00000BC8 6100FAC6        	  1010:              BSR SPACE
00:00000BCC 367C21FC        	  1011:              MOVEA.L #Z_FLAG,A3
00:00000BD0 6100FA9C        	  1012:              BSR PSTR
00:00000BD4 E30C            	  1013:              LSL.B #1,D4
00:00000BD6 610000AE        	  1014:              BSR PRINT_BIT
                            	  1015: 
00:00000BDA 6100FAB4        	  1016:              BSR SPACE
00:00000BDE 367C21F9        	  1017:              MOVEA.L #V_FLAG,A3
00:00000BE2 6100FA8A        	  1018:              BSR PSTR
00:00000BE6 E30C            	  1019:              LSL.B #1,D4
00:00000BE8 6100009C        	  1020:              BSR PRINT_BIT
                            	  1021: 
00:00000BEC 6100FAA2        	  1022:              BSR SPACE
00:00000BF0 367C21F6        	  1023:              MOVEA.L #CARRY_FLAG,A3
00:00000BF4 6100FA78        	  1024:              BSR PSTR
00:00000BF8 E30C            	  1025:              LSL.B #1,D4
00:00000BFA 6100008A        	  1026:              BSR PRINT_BIT
                            	  1027: 
                            	  1028: 
00:00000BFE 6100FA7A        	  1029:              BSR NEW_LINE
00:00000C02 143C0000        	  1030:              MOVE.B #0,D2
                            	  1031: 
00:00000C06 2C7C000FFE7A    	  1032:              MOVEA.L #MONVARS,A6
                            	  1033: 
00:00000C0C 47EE0076        	  1034:              LEA.L USER_DATA(A6),A3
                            	  1035: 
00:00000C10 103C0044        	  1036: REG1         MOVE.B #'D',D0
00:00000C14 6100F9E6        	  1037:              BSR COUT
00:00000C18 1002            	  1038:              MOVE.B D2,D0
00:00000C1A 6100FC98        	  1039:              BSR OUT1X
00:00000C1E 103C003D        	  1040:              MOVE.B #'=',D0
00:00000C22 6100F9D8        	  1041:              BSR COUT
                            	  1042: 
00:00000C26 201B            	  1043:              MOVE.L (A3)+,D0
00:00000C28 6100FCBC        	  1044:              BSR OUT8X
00:00000C2C 5202            	  1045:              ADDQ.B #1,D2
00:00000C2E 0C020008        	  1046:              CMPI.B #8,D2
00:00000C32 6710            	  1047:              BEQ.S REG4
00:00000C34 6100FA5A        	  1048:              BSR SPACE
                            	  1049: 
00:00000C38 0C020004        	  1050:              CMPI.B #4,D2
00:00000C3C 66D2            	  1051:              BNE.S REG1
00:00000C3E 6100FA3A        	  1052:              BSR NEW_LINE
00:00000C42 60CC            	  1053:              BRA.S REG1
                            	  1054: 
00:00000C44 6100FA34        	  1055: REG4         BSR NEW_LINE
00:00000C48 143C0000        	  1056:              MOVE.B #0,D2
                            	  1057: 
00:00000C4C 103C0041        	  1058: REG3         MOVE.B #'A',D0
00:00000C50 6100F9AA        	  1059:              BSR COUT
00:00000C54 1002            	  1060:              MOVE.B D2,D0
00:00000C56 6100FC5C        	  1061:              BSR OUT1X
00:00000C5A 103C003D        	  1062:              MOVE.B #'=',D0
00:00000C5E 6100F99C        	  1063:              BSR COUT
                            	  1064: 
00:00000C62 201B            	  1065:              MOVE.L (A3)+,D0
00:00000C64 6100FC80        	  1066:              BSR OUT8X
00:00000C68 5202            	  1067:              ADDQ.B #1,D2
00:00000C6A 0C020008        	  1068:              CMPI.B #8,D2
00:00000C6E 6710            	  1069:              BEQ.S REG2
00:00000C70 6100FA1E        	  1070:              BSR SPACE
                            	  1071: 
00:00000C74 0C020004        	  1072:              CMPI.B #4,D2
00:00000C78 66D2            	  1073:              BNE.S REG3
00:00000C7A 6100F9FE        	  1074:              BSR NEW_LINE
00:00000C7E 60CC            	  1075:              BRA.S REG3
                            	  1076: 
00:00000C80 6100F9F8        	  1077: REG2         BSR NEW_LINE
00:00000C84 4E75            	  1078:              RTS
                            	  1079: 
                            	  1080: 
                            	  1081: 
                            	  1082: 
                            	  1083: ; SEND '0' OR '1' TO SCREEN
                            	  1084: 
00:00000C86 650A            	  1085: PRINT_BIT   BCS.S WRITE_1
00:00000C88 103C0030        	  1086:             MOVE.B #'0',D0
00:00000C8C 6100F96E        	  1087:             BSR COUT
00:00000C90 4E75            	  1088:             RTS
                            	  1089: 
00:00000C92 103C0031        	  1090: WRITE_1     MOVE.B #'1',D0
00:00000C96 6100F964        	  1091:             BSR COUT
00:00000C9A 4E75            	  1092:             RTS
                            	  1093: 
                            	  1094: ; JUMP TO USER PROGRAM
                            	  1095: ; 
                            	  1096: 
00:00000C9C 47F900002061    	  1097: JUMP       LEA.L JUMP_TO.L,A3
00:00000CA2 6100F9CA        	  1098:            BSR PSTR
                            	  1099: 
00:00000CA6 2C7C000FFE7A    	  1100:            MOVEA.L #MONVARS,A6
00:00000CAC 202E00BC        	  1101:            MOVE.L USER_PC(A6),D0
00:00000CB0 6100FC2C        	  1102:            BSR OUT6X
00:00000CB4 103C003E        	  1103:            MOVE.B #'>',D0
                            	  1104: 
00:00000CB8 6100F942        	  1105:            BSR COUT
                            	  1106: 
00:00000CBC 6100FA20        	  1107:            BSR GET_HEX
                            	  1108: 
00:00000CC0 08AE00000020    	  1109:            BCLR.B #BIT_ESC,FLAG(A6) ; TEST BIT_ESC BIT
00:00000CC6 6614            	  1110:            BNE.S ABORT             ; IF BIT = 1 THEN EXIT
                            	  1111: 
00:00000CC8 08AE00010020    	  1112:            BCLR.B #1,FLAG(A6)  ; CHECK IF ENTER KEY PRESSED
00:00000CCE 660E            	  1113:            BNE.S JUMP1         ; RUN USER PROGRAM
                            	  1114: 
00:00000CD0 7C00            	  1115:            CLR.L D6
00:00000CD2 6100FCEA        	  1116:            BSR GET_ADDRESS1
                            	  1117: 
                            	  1118: ; GOT D6 FOR DESTINATION
                            	  1119: 
00:00000CD6 2D4600BC        	  1120:            MOVE.L D6,USER_PC(A6)  ; SAVE TO USER PC
00:00000CDA 6002            	  1121:            BRA.S JUMP1
                            	  1122: 
00:00000CDC 4E75            	  1123: ABORT      RTS                 ; GET BACK MONITOR
                            	  1124: 
00:00000CDE 2C7C000FFE7A    	  1125: JUMP1      MOVEA.L #MONVARS,A6     ; POINTED TO START MONITOR RAM
                            	  1126: 
00:00000CE4 206E00B2        	  1127:            MOVEA.L USER_USP(A6),A0
00:00000CE8 4E60            	  1128:            MOVE.L  A0,USP           ; WRITE TO REAL USER STACK (A7)
                            	  1129: 
00:00000CEA 2F2E00BC        	  1130:            MOVE.L  USER_PC(A6),-(SP)     ; PUSH PC
                            	  1131: 
                            	  1132:            ;BCLR.B   #5,USER_SR(A6) ; SET USER MODE     
                            	  1133: 
00:00000CEE 3F2E00B6        	  1134:            MOVE.W  USER_SR(A6),-(SP)
00:00000CF2 4CEE7FFF0076    	  1135:            MOVEM.L USER_DATA(A6),D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
00:00000CF8 4E73            	  1136:            RTE                     ; JUMP TO USER PROGRAM
                            	  1137: 
                            	  1138: 
                            	  1139: ; TRACE JUMP
                            	  1140: ; SET TRACE BIT IN SAVED STATUS REGISTER
                            	  1141: 
00:00000CFA 47F900002115    	  1142: TRACE_JUMP LEA.L TRACE_MSG.L,A3
00:00000D00 6100F96C        	  1143:            BSR PSTR
00:00000D04 6100F974        	  1144:            BSR NEW_LINE
                            	  1145: 
00:00000D08 2C7C000FFE7A    	  1146:            MOVEA.L #MONVARS,A6
00:00000D0E 286E00BC        	  1147:            MOVEA.L USER_PC(A6),A4
00:00000D12 4CD40007        	  1148:            MOVEM.L (A4),D0/D1/D2
00:00000D16 2A7C000FFE7A    	  1149:            MOVEA.L #MONVARS,A5
00:00000D1C 4BED0022        	  1150:            ADDA.L #BUFFER,A5      ; LOAD A5 WITH $130000+BUFFER
                            	  1151: 
00:00000D20 4EB9000016FC    	  1152:            JSR  DCODE68K.L
                            	  1153: 
                            	  1154: 
00:00000D26 6100F952        	  1155:            BSR NEW_LINE
00:00000D2A 61000128        	  1156:            BSR PRINT_LINE
                            	  1157: 
00:00000D2E 2C7C000FFE7A    	  1158:            MOVEA.L #MONVARS,A6
                            	  1159: 
00:00000D34 08EE000700B6    	  1160:            BSET.B #TRACE_BIT,USER_SR(A6)  ; SET TRACE BIT
00:00000D3A 60A2            	  1161:            BRA JUMP1                    ; BORROW JUMP ROUTINE
                            	  1162: 
                            	  1163: ; CLEAR MONITOR RAM
                            	  1164: 
00:00000D3C 2C7C000FFE7A    	  1165: CLEAR_MON_RAM MOVEA.L #MONVARS,A6
00:00000D42 3E3C0077        	  1166:               MOVE.W  #119,D7          ; 240 bytes of monitor RAM, divide by 2 and subtract 1
                            	  1167: 
00:00000D46 3CFC0000        	  1168: CLEAR1        MOVE.W #0000,(A6)+
00:00000D4A 51CFFFFA        	  1169:               DBRA D7,CLEAR1
00:00000D4E 4E75            	  1170:               RTS
                            	  1171: 
                            	  1172: 
                            	  1173: 
                            	  1174: ; MODIFY USER REGISTERS
                            	  1175: 
00:00000D50 2C7C000FFE7A    	  1176: MODIFY_REG    MOVEA.L #MONVARS,A6
00:00000D56 6100F8E8        	  1177:               BSR CIN
00:00000D5A C03C00DF        	  1178:               AND.B #$DF,D0
00:00000D5E 0C000050        	  1179:               CMPI.B #'P',D0
00:00000D62 661A            	  1180:               BNE.S DATA_REGP
                            	  1181: 
00:00000D64 103C0043        	  1182:               MOVE.B #'C',D0
00:00000D68 6100F892        	  1183:               BSR COUT
00:00000D6C 103C003D        	  1184:               MOVE.B #'=',D0
00:00000D70 6100F88A        	  1185:               BSR COUT
00:00000D74 6100FC42        	  1186:               BSR GET_ADDRESS
                            	  1187: 
00:00000D78 2D4600BC        	  1188:               MOVE.L D6,USER_PC(A6)
00:00000D7C 4E75            	  1189:               RTS
                            	  1190: 
00:00000D7E 0C000044        	  1191: DATA_REGP     CMPI.B #'D',D0
00:00000D82 6622            	  1192:               BNE.S ADDRESS_REGP
00:00000D84 6100F8BA        	  1193:               BSR CIN
00:00000D88 903C0030        	  1194:               SUB.B #'0',D0
                            	  1195: 
00:00000D8C 7E00            	  1196:               CLR.L D7
00:00000D8E 1E00            	  1197:               MOVE.B D0,D7
                            	  1198: 
00:00000D90 103C003D        	  1199:               MOVE.B #'=',D0
00:00000D94 6100F866        	  1200:               BSR COUT
                            	  1201: 
00:00000D98 6100FBFC        	  1202:               BSR GET_32BIT
                            	  1203: 
00:00000D9C E50F            	  1204:               LSL.B #2,D7        ; D7*4
00:00000D9E DCC7            	  1205:               ADDA.W D7,A6
00:00000DA0 2D460076        	  1206:               MOVE.L D6,USER_DATA(A6)  ; SAVE TO USER DATA REGISTERS
                            	  1207: 
00:00000DA4 4E75            	  1208:               RTS
                            	  1209:               
00:00000DA6 0C000041        	  1210: ADDRESS_REGP  CMPI.B #'A',D0
00:00000DAA 6620            	  1211:               BNE.S WHATP
00:00000DAC 6100F892        	  1212:               BSR CIN
00:00000DB0 903C0030        	  1213:               SUB.B #'0',D0
                            	  1214: 
00:00000DB4 7E00            	  1215:               CLR.L D7
00:00000DB6 1E00            	  1216:               MOVE.B D0,D7
                            	  1217: 
00:00000DB8 103C003D        	  1218:               MOVE.B #'=',D0
00:00000DBC 6100F83E        	  1219:               BSR COUT
                            	  1220: 
00:00000DC0 6100FBD4        	  1221:               BSR GET_32BIT
                            	  1222: 
00:00000DC4 E50F            	  1223:               LSL.B #2,D7        ; D7*4
00:00000DC6 DCC7            	  1224:               ADDA.W D7,A6
00:00000DC8 2D460096        	  1225:               MOVE.L D6,USER_ADDR(A6)  ; SAVE TO USER ADDRESS REGISTERS
                            	  1226: 
00:00000DCC 4E75            	  1227: WHATP         RTS
                            	  1228: 
                            	  1229: ;=======================================================================
                            	  1230: ; TRAP #N SERVICES
                            	  1231: ;
                            	  1232: 
00:00000DCE 2F08            	  1233: SERVICE_TRAP0   MOVE.L A0,-(SP)      ; SAVE A0 BEFOREHAND
00:00000DD0 207C000FFE7A    	  1234:                 MOVEA.L #MONVARS,A0  ; USE A0 AS THE POINTER
00:00000DD6 41E80076        	  1235:                 LEA.L USER_DATA(A0),A0
00:00000DDA 48D07FFF        	  1236:                 MOVEM.L D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6,(A0)
00:00000DDE 215F0020        	  1237:                 MOVE.L (SP)+,32(A0)  ; RESTORE A0
                            	  1238: 
00:00000DE2 207C000FFE7A    	  1239:                 MOVEA.L #MONVARS,A0
00:00000DE8 315F00B6        	  1240:                 MOVE.W (SP)+,USER_SR(A0)
00:00000DEC 08A8000700B6    	  1241:                 BCLR.B #TRACE_BIT,USER_SR(A0) ; TURN TRACE BIT OFF
00:00000DF2 215F00BC        	  1242:                 MOVE.L (SP)+,USER_PC(A0)
                            	  1243: 
00:00000DF6 4E6A            	  1244:                 MOVE.L USP,A2
00:00000DF8 214A00B2        	  1245:                 MOVE.L A2,USER_USP(A0)
                            	  1246: 
00:00000DFC 6100FD70        	  1247:                 BSR DISPLAY_REG1
                            	  1248: 
00:00000E00 2E7C000FFE76    	  1249:                 MOVE.L #SUPER_STACK,SP  ; REINIT SYSTEM STACK
                            	  1250:                 ;MOVE.W #INT_ON,SR   ; REENTER SUPERVISOR MODE
                            	  1251: 
00:00000E06 4EF9000004D8    	  1252:                 JMP LOOP.L        ; GET BACK MONITOR
                            	  1253: 
                            	  1254: 
                            	  1255: ; DISASSEMBLE THE MACHNIE CODE INTO MNEMONIC
                            	  1256: 
00:00000E0C 47F90000209B    	  1257: DISASSEMBLE     LEA.L DIS.L,A3
00:00000E12 6100F85A        	  1258:                 BSR PSTR
                            	  1259: 
                            	  1260:            ;   LEA.L $102000.L,A4
                            	  1261: 
00:00000E16 2C7C000FFE7A    	  1262:                MOVEA.L #MONVARS,A6
                            	  1263: 
00:00000E1C 3E3C0013        	  1264:                MOVE.W #19,D7       ; 20 LINES DISASSEMBLE
                            	  1265: 
00:00000E20 286E0072        	  1266:                MOVEA.L POINTER_NOW(A6),A4
                            	  1267: 
00:00000E24 4CD40007        	  1268: DIS1           MOVEM.L (A4),D0/D1/D2
00:00000E28 2A7C000FFE7A    	  1269:                MOVEA.L #MONVARS,A5
00:00000E2E 4BED0022        	  1270:                ADDA.L #BUFFER,A5      ; LOAD A5 WITH $130000+BUFFER
                            	  1271: 
00:00000E32 48E70102        	  1272:                MOVEM.L A6/D7,-(SP)
                            	  1273: 
00:00000E36 4EB9000016FC    	  1274:                JSR  DCODE68K.L
                            	  1275: 
00:00000E3C 6100F83C        	  1276:                BSR NEW_LINE
00:00000E40 6112            	  1277:                BSR PRINT_LINE
                            	  1278: 
00:00000E42 4CDF4080        	  1279:                MOVEM.L (SP)+,D7/A6
                            	  1280: 
00:00000E46 51CFFFDC        	  1281:                DBRA D7,DIS1
                            	  1282: 
00:00000E4A 2D4C0072        	  1283:                MOVE.L A4,POINTER_NOW(A6) ; NEXT BLOCK
00:00000E4E 6100F82A        	  1284:                BSR NEW_LINE
00:00000E52 4E75            	  1285:                RTS
                            	  1286: 
00:00000E54 101D            	  1287: PRINT_LINE     MOVE.B (A5)+,D0
00:00000E56 6100F7A4        	  1288:                BSR COUT
00:00000E5A BDCD            	  1289:                CMPA.L A5,A6
00:00000E5C 66F6            	  1290:                BNE.S PRINT_LINE
00:00000E5E 4E75            	  1291:                RTS
                            	  1292: 
                            	  1293: 
                            	  1294: ; UPLOAD BINARY IMAGE FROM MEMORY
                            	  1295: ; SEND IT TO TERMINAL AS HEX CODE IN LONG WORD FORMAT
                            	  1296: ; USE FOR DISASSEMBLER HEX CODE PREPARATION
                            	  1297: 
                            	  1298: ;UPLOAD        LEA.L UPLOAD1.L,A3
                            	  1299: ;              BSR PSTR
                            	  1300: ;              BSR CIN
                            	  1301: ;
                            	  1302: ;              LEA.L RAM,A5    ; START
                            	  1303: ;              LEA.L $102000.L,A6    ; STOP
                            	  1304: ;
                            	  1305: ;UPLOAD3       BSR NEW_LINE
                            	  1306: ;              LEA.L STRING1.L,A3
                            	  1307: ;              BSR PSTR
                            	  1308: ;
                            	  1309: ;              MOVE.W #7,D7
                            	  1310: ;
                            	  1311: ;UPLOAD2       MOVE.B #'$',D0
                            	  1312: ;              BSR COUT
                            	  1313: ;              MOVE.L (A5)+,D0
                            	  1314: ;              BSR OUT8X
                            	  1315: ;              MOVE.B #',',D0
                            	  1316: ;              BSR COUT
                            	  1317: ;              DBRA D7,UPLOAD2
                            	  1318: ;
                            	  1319: ;              CMPA.L A5,A6
                            	  1320: ;              BGT  UPLOAD3
                            	  1321: ;
                            	  1322: ;              RTS
                            	  1323: 
                            	  1324: ; ABOUT zBUG V1.0
                            	  1325: 
00:00000E60 47F9000020B5    	  1326: ABOUT         LEA.L ABOUTZBUG.L,A3
00:00000E66 6100F806        	  1327:               BSR PSTR
00:00000E6A 4E75            	  1328:               RTS
                            	  1329: 
                            	  1330: ; VIEW USER STACK
                            	  1331: 
00:00000E6C 47F900002126    	  1332: VIEW_USP      LEA.L VIEW.L,A3
00:00000E72 6100F7FA        	  1333:               BSR PSTR
                            	  1334: 
00:00000E76 6100F802        	  1335:               BSR NEW_LINE
                            	  1336: 
00:00000E7A 227C001FFC9C    	  1337:               MOVEA.L #SUPER_STACK+USER_STACK,A1 ; TOP OF USER STACK
                            	  1338: 
00:00000E80 41E9FFE0        	  1339:               LEA.L -32(A1),A0    ; EACH COMPOSED OF TWO BYTES
                            	  1340: 
00:00000E84 3E3C0010        	  1341:               MOVE.W #16,D7
00:00000E88 2C7C000FFE7A    	  1342:               MOVEA.L #MONVARS,A6
                            	  1343: 
                            	  1344: 
00:00000E8E 2008            	  1345: VIEW1         MOVE.L A0,D0
                            	  1346: 
00:00000E90 2F00            	  1347:               MOVE.L D0,-(SP)
                            	  1348: 
00:00000E92 B1EE00B2        	  1349:               CMPA.L USER_USP(A6),A0
00:00000E96 660C            	  1350:               BNE.S NOT_TOS
                            	  1351: 
00:00000E98 47F9000021DE    	  1352:               LEA.L TOP_OF_STACK.L,A3
00:00000E9E 6100F7CE        	  1353:               BSR PSTR
00:00000EA2 600A            	  1354:               BRA.S SKIP_PRINT_BLANK
                            	  1355: 
00:00000EA4 47F9000021E6    	  1356: NOT_TOS       LEA.L BLANK_BLOCK.L,A3
00:00000EAA 6100F7C2        	  1357:               BSR PSTR
                            	  1358: 
                            	  1359: SKIP_PRINT_BLANK
                            	  1360: 
00:00000EAE 201F            	  1361:               MOVE.L (SP)+,D0
00:00000EB0 6100FA2C        	  1362:               BSR OUT6X
00:00000EB4 6100F7DA        	  1363:               BSR SPACE
                            	  1364: 
00:00000EB8 103C005B        	  1365:               MOVE.B #'[',D0
00:00000EBC 6100F73E        	  1366:               BSR COUT
                            	  1367: 
00:00000EC0 3018            	  1368:               MOVE.W (A0)+,D0
00:00000EC2 6100FA12        	  1369:               BSR OUT4X
                            	  1370: 
00:00000EC6 103C005D        	  1371:               MOVE.B #']',D0
00:00000ECA 6100F730        	  1372:               BSR COUT
                            	  1373: 
00:00000ECE 6100F7AA        	  1374:               BSR NEW_LINE
00:00000ED2 51CFFFBA        	  1375:               DBRA D7,VIEW1
                            	  1376: 
00:00000ED6 4E75            	  1377:               RTS
                            	  1378: 
                            	  1379: 
                            	  1380: ; LOAD SP WITH [RAM] AND PC [RAM+4]
                            	  1381: 
00:00000ED8 2E7900080000    	  1382: BOOT_RAM      MOVEA.L RAM.L,SP
00:00000EDE 207900080004    	  1383:               MOVEA.L 4+RAM.L,A0
00:00000EE4 4ED0            	  1384:               JMP     (A0)
                            	  1385: 
                            	  1386: ;SERVICE_ILLEGAL MOVEA.L #ILLEGAL_MSG.L,A3
00:00000EE6 367C2149        	  1387: SERVICE_ILLEGAL MOVEA.L #ILLEGAL_MSG,A3
00:00000EEA 6100F782        	  1388:                 BSR PSTR
00:00000EEE 4E40            	  1389:                 TRAP #0
                            	  1390: 
                            	  1391: ;SERVICE_ADDRERR MOVEA.L #ADDRERR_MSG.L,A3
00:00000EF0 367C217C        	  1392: SERVICE_ADDRERR MOVEA.L #ADDRERR_MSG,A3
00:00000EF4 6100F778        	  1393:                 BSR PSTR
00:00000EF8 4E40            	  1394:                 TRAP #0
                            	  1395: 
                            	  1396: ;SERVICE_ZERODIV MOVEA.L #ZERODIV_MSG.L,A3
00:00000EFA 367C218D        	  1397: SERVICE_ZERODIV MOVEA.L #ZERODIV_MSG,A3
00:00000EFE 6100F76E        	  1398:                 BSR PSTR
00:00000F02 4E40            	  1399:                 TRAP #0
                            	  1400: 
                            	  1401: ;SERVICE_PRIVVIOL MOVEA.L #PRIVVIOL_MSG.L,A3
00:00000F04 367C21A1        	  1402: SERVICE_PRIVVIOL MOVEA.L #PRIVVIOL_MSG,A3
00:00000F08 6100F764        	  1403:                 BSR PSTR
00:00000F0C 4E40            	  1404:                 TRAP #0
                            	  1405: 
                            	  1406: ;SERVICE_LINEA MOVEA.L #LINEA_MSG.L,A3
00:00000F0E 367C21B8        	  1407: SERVICE_LINEA MOVEA.L #LINEA_MSG,A3
00:00000F12 6100F75A        	  1408:                 BSR PSTR
00:00000F16 4E40            	  1409:                 TRAP #0
                            	  1410: 
                            	  1411: ;SERVICE_LINEF MOVEA.L #LINEF_MSG.L,A3
00:00000F18 367C21CB        	  1412: SERVICE_LINEF MOVEA.L #LINEF_MSG,A3
00:00000F1C 6100F750        	  1413:                 BSR PSTR
00:00000F20 4E40            	  1414:                 TRAP #0
                            	  1415: 
                            	  1416: ; Default handler for jump table entries that aren't set
                            	  1417: ;SERVICE_DEFAULT MOVEA.L #DEFAULT_MSG.L,A3
00:00000F22 367C2160        	  1418: SERVICE_DEFAULT MOVEA.L #DEFAULT_MSG,A3
00:00000F26 6100F746        	  1419:                 BSR PSTR
00:00000F2A 4E40            	  1420:                 TRAP #0
                            	  1421: 
                            	  1422: ; DCODE68K
                            	  1423:   INCLUDE "dis.asm"

Source: "dis.asm"
                            	     1: ;-------------------------------------------------------------------------
                            	     2: ; File DCODE68K  68K ONE LINE DISASSEMBLER                        07/28/82
                            	     3: 
                            	     4: ;        CALLING SEQUENCE:
                            	     5: ;   D0,D1,D2 = CODE TO BE DISASSEMBLED
                            	     6: ;   A4 = VALUE OF PROGRAM COUNTER FOR THE CODE
                            	     7: ;   A5 = POINTER TO STORE DATA (BUFSIZE = 80 ASSUMED)
                            	     8: ;        JSR       DCODE68K
                            	     9: 
                            	    10: ;        RETURN:
                            	    11: ;   A4 = VALUE OF PROGRAM COUNTER FOR NEXT INSTRUCTION
                            	    12: ;   A5 = POINTER TO LINE AS DISASSEMBLED
                            	    13: ;   A6 = POINTER TO END OF LINE
                            	    14: ;
                            	    15: ; 01234567890123456789012345678901234567890123456789
                            	    16: ; AAAAAA FDATA.DDDDDDDDDDDDDD FOC.... FOP.....
                            	    17: 
                            	    18: FDATA   EQU     10             DATA FIELD
                            	    19: FOC     EQU     31             OP-CODE FIELD
                            	    20: FOP     EQU     39             OPERAND FIELD
                            	    21: 
                            	    22: ; missing constants
                            	    23: BLANK    EQU ' '
                            	    24: BUFSIZE  EQU 80
                            	    25: EOT      EQU 4
                            	    26: 
                            	    27: LOCVARSZ EQU 16
                            	    28: ;  OFFSET -LOCVARSZ
                            	    29: ;DDATA DS.L 3 ; displacement of data in locvars
                            	    30: ;HISPC DS.L 1 ; displacement of PC in locvars
                            	    31: ;  ORG *
                            	    32: 
                            	    33: DDATA EQU -16
                            	    34: HISPC EQU -4
                            	    35: 
                            	    36: ; CAUSES ORGIN MODULO 4
                            	    37: LONG     MACRO
                            	    38:          DS      0
                            	    39:          DS.B    (*-X)&2
                            	    40:          ENDM
                            	    41: 
                            	    42: 
                            	    43: X        DS      0              BASE ADDRESS THIS MODULE
                            	    44:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	    45: 
                            	    46: *  MOVEM REGISTERS TO EA
                            	    47: *
                            	    48: *        01001D001S......
                            	    49: *        ..........XXXXXX       EFFECTIVE ADDRESS
                            	    50: *        .........0......       WORD
                            	    51: *        .........1......       LONG
                            	    52: *        .....0..........       REGISTER TO MEMORY
                            	    53: *        .....1..........       MEMORY TO REGISTER
                            	    54: *
                            	    55: 
                            	    56: IMOVEMFR DS      0
00:00000F2C 6100073E        	    57:          BSR     MOVEMS         SIZE
                            	    58: 
00:00000F30 7C38            	    59:          MOVEQ   #$0038,D6
00:00000F32 CC54            	    60:          AND.W   (A4),D6
00:00000F34 0C460020        	    61:          CMPI.W  #$0020,D6
00:00000F38 6706            	    62:          BEQ.S   IM7788         PREDECREMENT MODE
                            	    63: 
00:00000F3A 7C01            	    64:          MOVEQ   #1,D6          D6 = INCREMENTER (BIT POSITION)
00:00000F3C 7200            	    65:          MOVEQ   #0,D1          D1 = BIT POSITION
00:00000F3E 6004            	    66:          BRA.S   IM7799
                            	    67: 
00:00000F40 7CFF            	    68: IM7788   MOVEQ   #-1,D6         D6 = DECREMENTER (BIT POSITION)
00:00000F42 720F            	    69:          MOVEQ   #15,D1         D1 = BIT POSITION
00:00000F44 6100073A        	    70: IM7799   BSR     MOVEMR         BUILD MASK WORD
                            	    71: 
00:00000F48 1CFC002C        	    72:          MOVE.B  #',',(A6)+     STORE COMMA
                            	    73: 
00:00000F4C 5483            	    74:          ADDQ.L  #2,D3
00:00000F4E 3814            	    75:          MOVE.W  (A4),D4
00:00000F50 3E3C01F4        	    76:          MOVE.W  #$1F4,D7       CONTROL + PREDECREMENT
00:00000F54 61000554        	    77:          BSR     EEA
00:00000F58 601C            	    78:          BRA.S   CS16           COMMON
                            	    79: 
                            	    80:          LONG
                            	     1M          DS      0
00:00000F5A 00              	     2M          DS.B    (*-X)&2
00:00000F5B *
                            	    81: * MOVEM  EA  TO REGISTERS
                            	    82: *
00:00000F5C 6100070E        	    83: IMOVEMTR BSR     MOVEMS         SIZE
00:00000F60 5483            	    84:          ADDQ.L  #2,D3
00:00000F62 3E3C07EC        	    85:          MOVE.W  #$7EC,D7       CONTROL + POSTINCREMENT
00:00000F66 61000542        	    86:          BSR     EEA
                            	    87: 
00:00000F6A 1CFC002C        	    88:          MOVE.B  #',',(A6)+     STORE COMMA
                            	    89: 
00:00000F6E 7C01            	    90:          MOVEQ   #1,D6          D6 = BIT POSITION INCREMENTER
00:00000F70 7200            	    91:          MOVEQ   #0,D1          D1 = BIT POSITION
00:00000F72 6100070C        	    92:          BSR     MOVEMR
                            	    93: 
00:00000F76 606C            	    94: CS16     BRA.S   CS15           COMMON
                            	    95: 
                            	    96: 
                            	    97:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	    98: ISTOP    DS      0
00:00000F78 302C0002        	    99:          MOVE.W  2(A4),D0
00:00000F7C 1CFC0023        	   100:          MOVE.B  #'#',(A6)+     IMMEDIATE
00:00000F80 1CFC0024        	   101:          MOVE.B  #'$',(A6)+     HEX
00:00000F84 61000BE0        	   102:          BSR     PNT4HX         VALUE
00:00000F88 6000080A        	   103:          BRA     COMMON4
                            	   104: 
                            	   105:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	   106: IMMED    DS      0              ADD  AND  CMP #  EOR  OR  SUB
00:00000F8C 61000492        	   107:          BSR     FORMSIZE
00:00000F90 5483            	   108:          ADDQ.L  #2,D3          SIZE = 4
00:00000F92 1CFC0023        	   109:          MOVE.B  #'#',(A6)+     IMMEDIATE
                            	   110: 
00:00000F96 7000            	   111:          CLR.L   D0
00:00000F98 302C0002        	   112:          MOVE.W  2(A4),D0       D0 = EXTENSION WORD
00:00000F9C 3214            	   113:          MOVE.W  (A4),D1
00:00000F9E EC49            	   114:          LSR.W   #6,D1
00:00000FA0 02410003        	   115:          ANDI.W  #3,D1
00:00000FA4 6746            	   116:          BEQ.S   IMMED65        .BYTE
                            	   117: 
00:00000FA6 0C010001        	   118:          CMPI.B  #1,D1
00:00000FAA 6750            	   119:          BEQ.S   IMMED75        .WORD
                            	   120: 
00:00000FAC 5483            	   121:          ADDQ.L  #2,D3          .LONG    SIZE = 6
00:00000FAE 202C0002        	   122:          MOVE.L  2(A4),D0       D0 = LONG EXTENSION WORD
                            	   123: 
00:00000FB2 61000B40        	   124: IMMED45  BSR     HEX2DEC        DECIMAL
                            	   125: 
00:00000FB6 1CC5            	   126:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	   127: 
00:00000FB8 3014            	   128:          MOVE    (A4),D0
00:00000FBA 0240003F        	   129:          ANDI.W  #$003F,D0
00:00000FBE 0C40003C        	   130:          CMPI.W  #$003C,D0      DESTINATION ADDRESS MODE 111100  "SR"
00:00000FC2 6622            	   131:          BNE.S   IMMED55        NOT FOUND
                            	   132: 
00:00000FC4 3014            	   133:          MOVE.W  (A4),D0        "SR"  ILLEGAL FOR
00:00000FC6 02404000        	   134:          ANDI.W  #$4000,D0      ADDI   SUBI  CMPI
00:00000FCA 660007F2        	   135:          BNE     FERROR         0600   0400  0C00
                            	   136: 
00:00000FCE 3214            	   137:          MOVE.W  (A4),D1
00:00000FD0 024100C0        	   138:          ANDI.W  #$00C0,D1
00:00000FD4 0C410080        	   139:          CMPI.W  #$0080,D1
00:00000FD8 670007E4        	   140:          BEQ     FERROR         .LONG NOT ALLOWED
                            	   141: 
00:00000FDC 1CFC0053        	   142:          MOVE.B  #'S',(A6)+     #,SR FOR ANDI, EORI, ORI
00:00000FE0 1CFC0052        	   143:          MOVE.B  #'R',(A6)+
00:00000FE4 603E            	   144: CS15     BRA.S   CS14           COMMON
                            	   145: 
00:00000FE6 610004C2        	   146: IMMED55  BSR     EEA
00:00000FEA 6038            	   147:          BRA.S   CS14           COMMON
                            	   148: 
00:00000FEC 2200            	   149: IMMED65  MOVE.L  D0,D1          D1 = XXXXXXXX........
00:00000FEE E049            	   150:          LSR.W   #8,D1          D1 = 00000000XXXXXXXX
00:00000FF0 670A            	   151:          BEQ.S   IMMED75
00:00000FF2 2200            	   152:          MOVE.L  D0,D1
00:00000FF4 EE41            	   153:          ASR.W   #7,D1
00:00000FF6 5241            	   154:          ADDQ.W  #1,D1          CHECK FOR NEGATIVE
00:00000FF8 660007C4        	   155:          BNE     FERROR
                            	   156: 
00:00000FFC 48C0            	   157: IMMED75  EXT.L   D0
00:00000FFE 60B2            	   158:          BRA     IMMED45
                            	   159: 
                            	   160: *  BIT   5432109876543210
                            	   161: *        ....RRRMMM......       DESTINATION REGISTER MODE
                            	   162: *        ..........MMMRRR       SOURCE MODE REGISTER
                            	   163: *        0001............       .BYTE
                            	   164: *        0011............       .WORD
                            	   165: *        0010............       .LONG
                            	   166: *
                            	   167: * IF BYTE SIZE; DESTINATION ADDRESS DIRECT NOT ALLOWED
                            	   168:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	   169: IMOVE    DS      0
00:00001000 600003C2        	   170:          BRA     IMOVEA1
                            	   171: 
                            	   172:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	   173: ILINK    DS      0
00:00001004 615E            	   174:          BSR.S   FORMREGA
                            	   175: 
00:00001006 1CC5            	   176:          MOVE.B  D5,(A6)+       COMMA SERARATOR
                            	   177: 
00:00001008 1CFC0023        	   178:          MOVE.B  #'#',(A6)+
00:0000100C 302C0002        	   179:          MOVE.W  2(A4),D0
00:00001010 48C0            	   180:          EXT.L   D0
00:00001012 61000AE0        	   181:          BSR     HEX2DEC        DECIMAL DISPLACEMENT
00:00001016 6000077C        	   182:          BRA     COMMON4
                            	   183: 
                            	   184:          LONG
                            	     1M          DS      0
00:0000101A 00              	     2M          DS.B    (*-X)&2
00:0000101B *
                            	   185: FORM1    DS      0              CLR  NEG  NEGX  NOT TST
                            	   186: ;         BSR.L   FORMSIZE
00:0000101C 61000402        	   187:          BSR   FORMSIZE
                            	   188: 
                            	   189: 
                            	   190: *                               NBCD TAS
00:00001020 61000488        	   191: FORM1A   BSR     EEA            DATA ALTERABLE ONLY
00:00001024 606E            	   192: CS14     BRA.S   CS13           COMMON
                            	   193: 
                            	   194:          LONG
                            	     1M          DS      0
00:00001026 00              	     2M          DS.B    (*-X)&2
00:00001027 *
                            	   195: FORM3    DS      0              EXT  SWAP
00:00001028 614A            	   196:          BSR.S   FORMREGD
00:0000102A 6068            	   197:          BRA.S   CS13           COMMON
                            	   198: 
                            	   199:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	   200: FORM4    DS      0              TRAP
00:0000102C 1CFC0023        	   201:          MOVE.B  #'#',(A6)+
00:00001030 3014            	   202:          MOVE.W  (A4),D0
00:00001032 02800000000F    	   203:          ANDI.L  #$0F,D0
00:00001038 61000ABA        	   204:          BSR     HEX2DEC        DECIMAL
00:0000103C 6056            	   205:          BRA.S   CS13           COMMON
                            	   206: 
                            	   207:          LONG
                            	     1M          DS      0
00:0000103E 00              	     2M          DS.B    (*-X)&2
00:0000103F *
                            	   208: FORM5    DS      0              UNLNK
00:00001040 6122            	   209:          BSR.S   FORMREGA
00:00001042 6050            	   210:          BRA.S   CS13           COMMON
                            	   211: 
                            	   212: *  BIT   5432109876543210
                            	   213: *        ....RRR.........       ADDRESS REGISTER
                            	   214: *        ..........XXXXXX       EFFECTIVE ADDRESS
                            	   215: *
                            	   216:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	   217: FORM6A   DS      0              LEA
00:00001044 3E3C07E4        	   218:          MOVE.W  #$7E4,D7       CONTROL ADDRESSING
00:00001048 6154            	   219:          BSR.S   EEA10
                            	   220: 
00:0000104A 1CC5            	   221:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	   222: 
00:0000104C 3814            	   223:          MOVE.W  (A4),D4
00:0000104E EF5C            	   224:          ROL.W   #7,D4
00:00001050 6112            	   225:          BSR.S   FORMREGA
00:00001052 6040            	   226:          BRA.S   CS13           COMMON
                            	   227: 
                            	   228: *  BIT   5432109876543210
                            	   229: *        ....DDD.........       DATA REGISTER
                            	   230: *        ..........XXXXXX       EFFECTIVE ADDRESS
                            	   231: *
                            	   232:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	   233: FORM6D   DS      0              CHK  DIVS  DIVU  MULS  MULU
00:00001054 3E3C0FFD        	   234:          MOVE.W  #$FFD,D7       DATA ADDRESSING
00:00001058 6144            	   235:          BSR.S   EEA10
                            	   236: 
00:0000105A 1CC5            	   237:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	   238: 
00:0000105C 3814            	   239:          MOVE.W  (A4),D4
00:0000105E EF5C            	   240:          ROL.W   #7,D4
00:00001060 6112            	   241:          BSR.S   FORMREGD
00:00001062 6030            	   242:          BRA.S   CS13           COMMON
                            	   243: 
00:00001064 1CFC0041        	   244: FORMREGA MOVE.B  #'A',(A6)+     FORMAT A@
00:00001068 02040007        	   245: FORMREG5 ANDI.B  #$07,D4
00:0000106C 00040030        	   246:          ORI.B   #'0',D4
00:00001070 1CC4            	   247:          MOVE.B  D4,(A6)+
00:00001072 4E75            	   248:          RTS
                            	   249: 
00:00001074 1CFC0044        	   250: FORMREGD MOVE.B  #'D',(A6)+     FORMAT D@
00:00001078 60EE            	   251:          BRA     FORMREG5
                            	   252: 
                            	   253: *  BIT   5432109876543210
                            	   254: *        ....DDD......DDD       DATA REGISTERS
                            	   255: *
                            	   256:          LONG
                            	     1M          DS      0
00:0000107A 00              	     2M          DS.B    (*-X)&2
00:0000107B *
                            	   257: FORM7    DS      0              EXG
00:0000107C EF5C            	   258:          ROL.W   #7,D4
00:0000107E 61F4            	   259:          BSR     FORMREGD
                            	   260: 
00:00001080 1CC5            	   261:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	   262: 
00:00001082 3814            	   263:          MOVE.W  (A4),D4
00:00001084 61EE            	   264:          BSR     FORMREGD
00:00001086 600C            	   265:          BRA.S   CS13           COMMON
                            	   266: 
                            	   267: *  BIT   5432109876543210
                            	   268: *        ....AAA......AAA       ADDRESS REGISTERS
                            	   269: *
                            	   270:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	   271: FORM8    DS      0              EXG
00:00001088 EF5C            	   272:          ROL.W   #7,D4
00:0000108A 61D8            	   273:          BSR     FORMREGA
                            	   274: 
00:0000108C 1CFC002C        	   275: FORM815  MOVE.B  #',',(A6)+     COMMA SEPARATOR
                            	   276: 
00:00001090 3814            	   277:          MOVE.W  (A4),D4
00:00001092 61D0            	   278:          BSR     FORMREGA
00:00001094 60000080        	   279: CS13     BRA     CS12           COMMON
                            	   280: 
                            	   281: *  BIT   5432109876543210
                            	   282: *        ....DDD.........       DATA REGISTER
                            	   283: *        .............AAA       ADDRESS REGISTER
                            	   284: *
                            	   285:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	   286: FORM9    DS      0              EXG
00:00001098 EF5C            	   287:          ROL.W   #7,D4
00:0000109A 61D8            	   288:          BSR     FORMREGD       DATA REGISTER
00:0000109C 60EE            	   289:          BRA     FORM815
                            	   290: 
00:0000109E 6000040A        	   291: EEA10    BRA     EEA
                            	   292: 
                            	   293: *  BIT   5432109876543210
                            	   294: *        ..........AAAAAA         EFFECTIVE ADDRESS
                            	   295: *        .......MMM......         OP-MODE
                            	   296: *        ....RRR.........         D-REGISTER
                            	   297: *        .......011......         WORD  EA,A@
                            	   298: *        .......111......         LONG  EA,A@
                            	   299: *        .......000......         EA,D@ BYTE (ADDRESS REGISTER DIRECT NOT ALLOWED)
                            	   300: *        .......0........         EA,D@
                            	   301: *        .......1........         D@,EA
                            	   302: *        ........00......         BYTE
                            	   303: *        ........01......         WORD
                            	   304: *        ........10......         LONG
                            	   305: *
                            	   306:          LONG
                            	     1M          DS      0
00:000010A2 00              	     2M          DS.B    (*-X)&2
00:000010A3 *
                            	   307: *                               ADD <EA>,A@   CMP <EA>,A@   SUB <EA>,A@
                            	   308: FORM10EX DS      0              ADD  CMP  SUB
00:000010A4 3E3C0FFF        	   309:          MOVE.W  #$FFF,D7       ALL MODES ALLOWED
00:000010A8 2004            	   310:          MOVE.L  D4,D0
00:000010AA 024001C0        	   311:          ANDI.W  #$01C0,D0
00:000010AE 673A            	   312:          BEQ.S   FORM103        .......000......
00:000010B0 0C4001C0        	   313:          CMPI.W  #$01C0,D0
00:000010B4 6710            	   314:          BEQ.S   FORM10E3       .......111......
00:000010B6 0C4000C0        	   315:          CMPI.W  #$00C0,D0
00:000010BA 661E            	   316:          BNE.S   FORM10E6
                            	   317: 
00:000010BC 1AFC002E        	   318:          MOVE.B  #'.',(A5)+     .......011......       STORE PERIOD
00:000010C0 1AFC0057        	   319:          MOVE.B  #'W',(A5)+
00:000010C4 6008            	   320:          BRA.S   FORM10E4
                            	   321: 
00:000010C6 1AFC002E        	   322: FORM10E3 MOVE.B  #'.',(A5)+
00:000010CA 1AFC004C        	   323:          MOVE.B  #'L',(A5)+
                            	   324: 
00:000010CE 61CE            	   325: FORM10E4 BSR     EEA10
                            	   326: 
00:000010D0 1CC5            	   327:          MOVE.B  D5,(A6)+       STORE COMMA SEPARATOR
                            	   328: 
00:000010D2 3814            	   329:          MOVE.W  (A4),D4
00:000010D4 EF5C            	   330:          ROL.W   #7,D4
00:000010D6 618C            	   331:          BSR     FORMREGA       <EA>,A@
00:000010D8 603C            	   332:          BRA.S   CS12           COMMON
                            	   333: 
00:000010DA 08140000        	   334: FORM10E6 BTST.B  #0,(A4)
00:000010DE 6620            	   335:          BNE.S   FORM105        .......1........    D@,<EA>
00:000010E0 600C            	   336:          BRA.S   FORM104        .......0........    <EA>,D@
                            	   337: 
                            	   338: *  BIT   5432109876543210
                            	   339: *        ..........AAAAAA       EFFECTIVE ADDRESS
                            	   340: *        .......MMM......       OP-MODE
                            	   341: *        ....RRR.........       D-REGISTER
                            	   342: *        .......0........       EA,D@
                            	   343: *        .......1........       D@,EA
                            	   344: *        ........00......       BYTE
                            	   345: *        ........01......       WORD
                            	   346: *        ........10......       LONG
                            	   347:          LONG
                            	     1M          DS      0
00:000010E2 00              	     2M          DS.B    (*-X)&2
00:000010E3 *
                            	   348: FORM10   DS      0              AND  EOR  OR
00:000010E4 08140000        	   349:          BTST.B  #0,(A4)
00:000010E8 6616            	   350:          BNE.S   FORM105
                            	   351: 
00:000010EA 3E3C0FFD        	   352: FORM103  MOVE.W  #$FFD,D7       DATA ADDRESSING
00:000010EE 61000330        	   353: FORM104  BSR     FORMSIZE
00:000010F2 61AA            	   354:          BSR     EEA10          <EA>,D@
                            	   355: 
00:000010F4 1CC5            	   356:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	   357: 
00:000010F6 1814            	   358:          MOVE.B  (A4),D4
00:000010F8 E20C            	   359:          LSR.B   #1,D4
00:000010FA 6100FF78        	   360:          BSR     FORMREGD
00:000010FE 6016            	   361:          BRA.S   CS12           COMMON
                            	   362: 
00:00001100 6100031E        	   363: FORM105  BSR     FORMSIZE       D@,<EA>
00:00001104 1814            	   364:          MOVE.B  (A4),D4
00:00001106 E20C            	   365:          LSR.B   #1,D4
00:00001108 6100FF6A        	   366:          BSR     FORMREGD
                            	   367: 
00:0000110C 1CC5            	   368:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	   369: 
00:0000110E 3814            	   370:          MOVE.W  (A4),D4
00:00001110 3E3C01FD        	   371:          MOVE.W  #$1FD,D7       ALTERABLE MEMORY ADDRESSING
00:00001114 6188            	   372:          BSR     EEA10
00:00001116 6000067E        	   373: CS12     BRA     COMMON
                            	   374: 
                            	   375:          LONG
                            	     1M          DS      0
00:0000111A 00              	     2M          DS.B    (*-X)&2
00:0000111B *
                            	   376: *                               PEA     (JMP  JSR)
00:0000111C 3E3C07E4        	   377: FORM11   MOVE.W  #$7E4,D7       CONTROL ADDERSSING
00:00001120 6100FF7C        	   378:          BSR     EEA10
00:00001124 60F0            	   379:          BRA     CS12           COMMON
                            	   380: 
                            	   381:          LONG
                            	     1M          DS      0
00:00001126 00              	     2M          DS.B    (*-X)&2
00:00001127 *
                            	   382: *                               JMP  JSR
00:00001128 2004            	   383: FORM11SL MOVE.L  D4,D0          LOOK FOR .S  OR  .L
00:0000112A 0240003F        	   384:          ANDI.W  #$3F,D0
00:0000112E 0C400038        	   385:          CMPI.W  #$38,D0
00:00001132 6608            	   386:          BNE.S   FORM112        NOT .S
00:00001134 1AFC002E        	   387:          MOVE.B  #'.',(A5)+     PERIOD
00:00001138 1AFC0053        	   388:          MOVE.B  #'S',(A5)+     S
00:0000113C 0C400039        	   389: FORM112  CMPI.W  #$39,D0
00:00001140 6608            	   390:          BNE.S   FORM114
00:00001142 1AFC002E        	   391:          MOVE.B  #'.',(A5)+     PERIOD
00:00001146 1AFC004C        	   392:          MOVE.B  #'L',(A5)+     L
00:0000114A 60D0            	   393: FORM114  BRA     FORM11
                            	   394: 
                            	   395: *  BIT   5432109876543210
                            	   396: *        ....XXX.....0...       DATA DESTINATION REGISTER
                            	   397: *        ....XXX.....1...       ADDRESS REGISTER
                            	   398: *        ....XXX.00......       BYTE
                            	   399: *        ........01......       WORD
                            	   400: *        ........10......       LONG
                            	   401: *        ............0...       DATA REGISTER TO DATA REGISTER
                            	   402: *        ............1...       MEMORY TO MEMORY
                            	   403: *        ............0XXX       DATA SOURCE REGISTER
                            	   404: *        ............1XXX       ADDRESS SOURCE REGISTER
                            	   405: *
                            	   406:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	   407: FORM12   DS      0              ABCD  ADDX  SBCD  SUBX
00:0000114C 610002D2        	   408:          BSR     FORMSIZE
                            	   409: 
00:00001150 08040003        	   410:          BTST    #3,D4
00:00001154 6610            	   411:          BNE.S   FORM125
                            	   412: 
00:00001156 6100FF1C        	   413:          BSR     FORMREGD       D@,D@;   FORMAT SOURCE
                            	   414: 
00:0000115A 1CC5            	   415:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	   416: 
00:0000115C 1814            	   417:          MOVE.B  (A4),D4
00:0000115E E20C            	   418:          LSR.B   #1,D4
00:00001160 6100FF12        	   419:          BSR     FORMREGD       FORMAT DESTINATION
00:00001164 6046            	   420:          BRA.S   CS11           COMMON
                            	   421: 
00:00001166 1CFC002D        	   422: FORM125  MOVE.B  #'-',(A6)+     -
00:0000116A 1CFC0028        	   423:          MOVE.B  #'(',(A6)+     (
00:0000116E 6100FEF4        	   424:          BSR     FORMREGA       A@    SOURCE
                            	   425: 
00:00001172 203C282D2C29    	   426:          MOVE.L  #'(-,)',D0     ),-(
00:00001178 6152            	   427:          BSR.S   SCHR           STORE CHARS
                            	   428: 
00:0000117A 1814            	   429:          MOVE.B  (A4),D4
00:0000117C E20C            	   430:          LSR.B   #1,D4
00:0000117E 6100FEE4        	   431:          BSR     FORMREGA       A@   DESTINATION
00:00001182 1CFC0029        	   432:          MOVE.B  #')',(A6)+
00:00001186 6024            	   433:          BRA.S   CS11           COMMON
                            	   434: 
                            	   435: *  BIT   5432109876543210
                            	   436: *        ....XXX.....1...       ADDRESS REGISTER    DESTINATION
                            	   437: *        ....XXX.00......       BYTE
                            	   438: *        ........01......       WORD
                            	   439: *        ........10......       LONG
                            	   440: *        ............1...       MEMORY TO MEMORY
                            	   441: *        ............1XXX       ADDRESS SOURCE REGISTER
                            	   442: *
                            	   443:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	   444: FORM12A  DS      0              CMPM
00:00001188 61000296        	   445:          BSR     FORMSIZE
                            	   446: 
00:0000118C 1CFC0028        	   447:          MOVE.B  #'(',(A6)+     (
00:00001190 6100FED2        	   448:          BSR     FORMREGA       A@
                            	   449: 
00:00001194 203C282C2B29    	   450:          MOVE.L  #'(,+)',D0     )+,(
00:0000119A 6130            	   451:          BSR.S   SCHR           STORE CHARS
                            	   452: 
00:0000119C 1814            	   453:          MOVE.B  (A4),D4
00:0000119E E20C            	   454:          LSR.B   #1,D4
00:000011A0 6100FEC2        	   455:          BSR     FORMREGA       A@
00:000011A4 1CFC0029        	   456:          MOVE.B  #')',(A6)+
00:000011A8 1CFC002B        	   457:          MOVE.B  #'+',(A6)+
00:000011AC 600005E8        	   458: CS11     BRA     COMMON
                            	   459: 
                            	   460:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
00:000011B0 6000023E        	   461: IQUICK   BRA     IQUICKA        ADDQ  SUBQ
                            	   462: 
                            	   463: *  BIT   5432109876543210
                            	   464: *        0111...0........       FIXED
                            	   465: *        ....RRR.........       DATA REGISTER
                            	   466: *        ........DDDDDDDD       SIGN EXTENDED DATA
                            	   467: *
                            	   468:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	   469: IMOVEQ   DS      0
00:000011B4 1CFC0023        	   470:          MOVE.B  #'#',(A6)+     IMMEDIATE
                            	   471: 
00:000011B8 3014            	   472:          MOVE.W  (A4),D0
00:000011BA 4880            	   473:          EXT.W   D0
00:000011BC 48C0            	   474:          EXT.L   D0
00:000011BE 61000934        	   475:          BSR     HEX2DEC        DECIMAL
                            	   476: 
00:000011C2 1CC5            	   477:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	   478: 
00:000011C4 EF5C            	   479:          ROL.W   #7,D4
00:000011C6 6100FEAC        	   480:          BSR     FORMREGD
00:000011CA 60E0            	   481:          BRA     CS11           COMMON
                            	   482: 
00:000011CC 1CC0            	   483: SCHR     MOVE.B  D0,(A6)+       OUTPUT STRING
00:000011CE E088            	   484:          LSR.L   #8,D0
00:000011D0 66FA            	   485:          BNE     SCHR           MORE TO OUTPUT
00:000011D2 4E75            	   486:          RTS
                            	   487: 
                            	   488: * MOVE FROM SR  (STATUS REGISTER)
                            	   489: *
                            	   490:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
00:000011D4 203C002C5253    	   491: IMVFSR   MOVE.L  #',RS'+0,D0   SR,
                            	   492: 
00:000011DA 61F0            	   493:          BSR     SCHR
00:000011DC 610002CC        	   494:          BSR     EEA            DATA ALTERABLE
00:000011E0 60CA            	   495:          BRA     CS11           COMMON
                            	   496: 
                            	   497: * MOVE FROM USP (USER STACK POINTER)
                            	   498: *
                            	   499:          LONG
                            	     1M          DS      0
00:000011E2 00              	     2M          DS.B    (*-X)&2
00:000011E3 *
00:000011E4 203C2C505355    	   500: IMVFUSP  MOVE.L  #',PSU',D0     USP,
00:000011EA 61E0            	   501:          BSR     SCHR
00:000011EC 6100FE76        	   502:          BSR     FORMREGA
00:000011F0 60BA            	   503:          BRA     CS11           COMMON
                            	   504: 
                            	   505: * MOVE TO SR (STATUS REGISTER)
                            	   506: *
                            	   507:          LONG
                            	     1M          DS      0
00:000011F2 00              	     2M          DS.B    (*-X)&2
00:000011F3 *
00:000011F4 3E3C0FFD        	   508: IMVTSR   MOVE.W  #$FFD,D7       DATA ADDRESSING
00:000011F8 610002B0        	   509:          BSR     EEA
00:000011FC 203C0052532C    	   510:          MOVE.L  #'RS,'+0,D0   ,SR
00:00001202 61C8            	   511: IMVT44   BSR     SCHR
00:00001204 60A6            	   512:          BRA     CS11           COMMON
                            	   513: 
                            	   514: * MOVE TO USP (USER STACK POINTER)
                            	   515: *
                            	   516:          LONG
                            	     1M          DS      0
00:00001206 00              	     2M          DS.B    (*-X)&2
00:00001207 *
00:00001208 6100FE5A        	   517: IMVTUSP  BSR     FORMREGA
00:0000120C 203C5053552C    	   518:          MOVE.L  #'PSU,',D0     ,USP
00:00001212 60EE            	   519:          BRA     IMVT44
                            	   520: 
                            	   521: *  MOVE TO CCR (CONDITION CODE REGISTER)
                            	   522: *
                            	   523:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
00:00001214 3E3C0FFD        	   524: IMVTCCR  MOVE.W  #$FFD,D7       DATA ADDRESSING
00:00001218 61000290        	   525:          BSR     EEA
00:0000121C 203C5243432C    	   526:          MOVE.L  #'RCC,',D0     ,CCR
00:00001222 60DE            	   527:          BRA     IMVT44
                            	   528: 
                            	   529: *  BIT   5432109876543210
                            	   530: *        0000...1..001...       FIXED
                            	   531: *        ....XXX.........       DATA REGISTER
                            	   532: *        ........0.......       MEMORY TO REGISTER
                            	   533: *        ........1.......       REGISTER TO MEMORY
                            	   534: *        .........0......       WORD
                            	   535: *        .........1......       LONG
                            	   536: *        .............XXX       ADDRESS REGISTER
                            	   537: *
                            	   538:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	   539: IMOVEP   DS      0
00:00001224 1AFC002E        	   540:          MOVE.B  #'.',(A5)+     D@,#(A@)
00:00001228 303C4C57        	   541:          MOVE.W  #'LW',D0
00:0000122C 08040006        	   542:          BTST    #6,D4
00:00001230 6702            	   543:          BEQ.S   IMOVEP11       USE "W"
00:00001232 E048            	   544:          LSR.W   #8,D0          USE "L"
00:00001234 1AC0            	   545: IMOVEP11 MOVE.B  D0,(A5)+       LENGTH
                            	   546: 
00:00001236 1814            	   547:          MOVE.B  (A4),D4
00:00001238 E20C            	   548:          LSR.B   #1,D4
                            	   549: 
00:0000123A 082C00070001    	   550:          BTST.B  #7,1(A4)
00:00001240 670E            	   551:          BEQ.S   IMOVEP35
                            	   552: 
00:00001242 6100FE30        	   553:          BSR     FORMREGD       D@,$HHHH(A@)
                            	   554: 
00:00001246 1CC5            	   555:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	   556: 
00:00001248 3814            	   557:          MOVE.W  (A4),D4
00:0000124A 6112            	   558:          BSR.S   IMOVEP66
00:0000124C 60000546        	   559: CS20     BRA     COMMON4
                            	   560: 
00:00001250 610C            	   561: IMOVEP35 BSR.S   IMOVEP66       $HHHH(A@),D@
                            	   562: 
00:00001252 1CC5            	   563:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	   564: 
00:00001254 1814            	   565:          MOVE.B  (A4),D4
00:00001256 E20C            	   566:          LSR.B   #1,D4
00:00001258 6100FE1A        	   567:          BSR     FORMREGD
00:0000125C 60EE            	   568:          BRA     CS20           COMMON4
                            	   569: 
00:0000125E 1CFC0024        	   570: IMOVEP66 MOVE.B  #'$',(A6)+     FORMAT DISPLACEMENT
00:00001262 302C0002        	   571:          MOVE.W  2(A4),D0
00:00001266 610008FE        	   572:          BSR     PNT4HX
                            	   573: 
00:0000126A 1CFC0028        	   574:          MOVE.B  #'(',(A6)+
                            	   575: 
00:0000126E 3814            	   576:          MOVE.W  (A4),D4
00:00001270 6100FDF2        	   577:          BSR     FORMREGA
00:00001274 1CFC0029        	   578:          MOVE.B  #')',(A6)+
00:00001278 4E75            	   579:          RTS
                            	   580: 
                            	   581:          LONG
                            	     1M          DS      0
00:0000127A 00              	     2M          DS.B    (*-X)&2
00:0000127B *
00:0000127C 60000518        	   582: SCOMMON  BRA     COMMON         NOP RESET RTE RTR RTS TRAPV
                            	   583: 
                            	   584:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
00:00001280 610000EA        	   585: ISCC     BSR     ICCCC          GET REST OF OP-CODE
00:00001284 61000224        	   586:          BSR     EEA            DATA ALTERABLE
00:00001288 60F2            	   587:          BRA     SCOMMON
                            	   588: 
                            	   589: 
                            	   590:          LONG
                            	     1M          DS      0
00:0000128A 00              	     2M          DS.B    (*-X)&2
00:0000128B *
                            	   591: IDBCC    DS      0              DB--
00:0000128C 3814            	   592:          MOVE.W  (A4),D4
00:0000128E 6100FDE4        	   593:          BSR     FORMREGD
                            	   594: 
00:00001292 1CC5            	   595:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
00:00001294 1CFC0024        	   596:          MOVE.B  #'$',(A6)+     HEX FIELD TO FOLLOW
                            	   597: 
00:00001298 610000D2        	   598:          BSR     ICCCC
00:0000129C 602E            	   599:          BRA.S   ICC55
                            	   600: 
                            	   601: *  BIT   5432109876543210
                            	   602: *        0110............       FIXED
                            	   603: *        ....CCCC........       CONDITION
                            	   604: *        ........DDDDDDD0       DISPLACEMENT
                            	   605: *        ...............1       ERROR (ODD BOUNDRY DISPLACEMENT)
                            	   606: *
                            	   607:          LONG
                            	     1M          DS      0
00:0000129E 00              	     2M          DS.B    (*-X)&2
00:0000129F *
                            	   608: ICC      DS      0              B--
00:000012A0 610000CA        	   609:          BSR     ICCCC
                            	   610: 
00:000012A4 1CFC0024        	   611: IBSR     MOVE.B  #'$',(A6)+     BSR   BRA
                            	   612: 
00:000012A8 4A04            	   613:          TST.B   D4
00:000012AA 6720            	   614:          BEQ.S   ICC55          16 BIT DISPLACEMENT
                            	   615: 
00:000012AC 1AFC002E        	   616:          MOVE.B  #'.',(A5)+
00:000012B0 1AFC0053        	   617:          MOVE.B  #'S',(A5)+
00:000012B4 4884            	   618:          EXT.W   D4             8 BIT DISPLACEMENT
                            	   619: 
00:000012B6 48C4            	   620: ICC35    EXT.L   D4             SIGN-EXTENDED DISPLACEMENT
00:000012B8 D8A9FFFC        	   621:          ADD.L   HISPC(A1),D4   + PROGRAM COUNTER
00:000012BC 5484            	   622:          ADDQ.L  #2,D4          + TWO
00:000012BE 2004            	   623:          MOVE.L  D4,D0
                            	   624: 
00:000012C0 E284            	   625:          ASR.L   #1,D4
00:000012C2 650004FA        	   626:          BCS     FERROR         ODD BOUNDRY DISPLACEMENT
                            	   627: 
00:000012C6 61000898        	   628:          BSR     PNT6HX
00:000012CA 60B0            	   629:          BRA     SCOMMON
                            	   630: 
00:000012CC 5483            	   631: ICC55    ADDQ.L  #2,D3          SIZE
00:000012CE 382C0002        	   632:          MOVE.W  2(A4),D4
00:000012D2 1AFC002E        	   633:          MOVE.B  #'.',(A5)+
00:000012D6 1AFC004C        	   634:          MOVE.B  #'L',(A5)+     .L FOR 16 BIT DISPLACEMENT
00:000012DA 60DA            	   635:          BRA     ICC35
                            	   636: 
                            	   637:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	   638: *                               BCHG  BCLR  BSET  BTST
                            	   639: ISETD    DS      0              DYNAMIC BIT
00:000012DC EF5C            	   640:          ROL.W   #7,D4
00:000012DE 6100FD94        	   641:          BSR     FORMREGD       DATA REGISTER
                            	   642: 
00:000012E2 1CC5            	   643: ISETD12  MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	   644: 
00:000012E4 3814            	   645:          MOVE.W  (A4),D4
00:000012E6 610001C2        	   646:          BSR     EEA            DATA ALTERABLE
00:000012EA 6090            	   647: CS18     BRA     SCOMMON
                            	   648: 
                            	   649:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	   650: *                            BCHG  BCLR  BSET  BTST
                            	   651: *  1ST WORD     .... .... ..XX XXXX    EA   DATA ALTERABLE ONLY
                            	   652: *  2ND WORD     0000 0000 000Y YYYY    BIT NUMBER
                            	   653: *
                            	   654: ISETS    DS      0              STATIC BIT
00:000012EC 5483            	   655:          ADDQ.L  #2,D3     SIZE
00:000012EE 1CFC0023        	   656:          MOVE.B  #'#',(A6)+     IMMEDIATE
                            	   657: 
00:000012F2 7000            	   658:          CLR.L   D0
00:000012F4 302C0002        	   659:          MOVE.W  2(A4),D0       GET BIT POSITION FROM 2ND WORD
00:000012F8 2200            	   660:          MOVE.L  D0,D1
00:000012FA EA89            	   661:          LSR.L   #5,D1
00:000012FC 660004C0        	   662:          BNE     FERROR
00:00001300 610007F2        	   663:          BSR     HEX2DEC        DECIMAL
                            	   664: 
00:00001304 60DC            	   665:          BRA     ISETD12
                            	   666: 
                            	   667: *   BIT  5432109876543210
                            	   668: *        ....XXX.........       IMMEDIATE COUNT/REGISTER
                            	   669: *        .......0........       RIGHT SHIFT
                            	   670: *        .......1........       LEFT SHIFT
                            	   671: *        ........00......       BYTE
                            	   672: *        ........01......       WORD
                            	   673: *        ........10......       LONG
                            	   674: *        ....0...11......       WORD (MEMORY)
                            	   675: *        ....0...11AAAAAA       EFFECTIVE ADDRESS
                            	   676: *        ..........0.....       SHIFT IMMEDIATE COUNT
                            	   677: *        ..........1.....       SHIFT COUNT (MODULO 64) IN DATA REGISTER
                            	   678: *
                            	   679:          LONG
                            	     1M          DS      0
00:00001306 00              	     2M          DS.B    (*-X)&2
00:00001307 *
                            	   680: ISHIFT   DS      0              AS-  LS-  RO-  ROX-
00:00001308 303C4C52        	   681:          MOVE.W  #'LR',D0
00:0000130C 08040008        	   682:          BTST    #8,D4          DIRECTION BIT
00:00001310 6702            	   683:          BEQ.S   ISHIFT13       RIGHT
00:00001312 E048            	   684:          LSR.W   #8,D0          LEFT
00:00001314 1AC0            	   685: ISHIFT13 MOVE.B  D0,(A5)+       DIRECTION; "L" OR "R"
                            	   686: 
00:00001316 3014            	   687:          MOVE.W  (A4),D0
00:00001318 024000C0        	   688:          ANDI.W  #$00C0,D0
00:0000131C 0C4000C0        	   689:          CMPI.W  #$00C0,D0
00:00001320 6730            	   690:          BEQ.S   ISHIFTM1       MEMORY SHIFT
                            	   691: 
00:00001322 610000FC        	   692:          BSR     FORMSIZE
                            	   693: 
00:00001326 EF5C            	   694:          ROL.W   #7,D4
00:00001328 0804000C        	   695:          BTST    #12,D4         I/R BIT
00:0000132C 6616            	   696:          BNE.S   ISHIFT33       COUNT IN REGISTER
                            	   697: 
00:0000132E 02040007        	   698:          ANDI.B  #$07,D4        IMMEDIATE COUNT
00:00001332 6604            	   699:          BNE.S   ISHIFT23
00:00001334 00040008        	   700:          ORI.B   #$08,D4        CHANGE ZERO TO EIGHT
00:00001338 00040030        	   701: ISHIFT23 ORI.B   #'0',D4
00:0000133C 1CFC0023        	   702:          MOVE.B  #'#',(A6)+
00:00001340 1CC4            	   703:          MOVE.B  D4,(A6)+
00:00001342 6004            	   704:          BRA.S   ISHIFT44
                            	   705: 
00:00001344 6100FD2E        	   706: ISHIFT33 BSR     FORMREGD
                            	   707: 
00:00001348 1CC5            	   708: ISHIFT44 MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	   709: 
00:0000134A 3814            	   710:          MOVE.W  (A4),D4
00:0000134C 6100FD26        	   711:          BSR     FORMREGD
00:00001350 6098            	   712: CS17     BRA     CS18           COMMON
                            	   713: 
00:00001352 1AFC002E        	   714: ISHIFTM1 MOVE.B  #'.',(A5)+     PERIOD
00:00001356 1AFC0057        	   715:          MOVE.B  #'W',(A5)+     .WORD
                            	   716: 
00:0000135A 0804000B        	   717:          BTST    #11,D4
00:0000135E 6600045E        	   718:          BNE     FERROR         BIT 11 MUST BE ZERO
                            	   719: 
00:00001362 3E3C01FC        	   720:          MOVE.W  #$1FC,D7       MEMORY ALTERABLE ADDRESSING
00:00001366 61000142        	   721:          BSR     EEA
00:0000136A 60E4            	   722:          BRA     CS17           COMMON
                            	   723: 
00:0000136C 700F            	   724: ICCCC    MOVEQ   #$0F,D0        APPEND CONDITION CODE
00:0000136E C014            	   725:          AND.B   (A4),D0        D0 = CCC
00:00001370 E388            	   726:          LSL.L   #1,D0          D0 = CCC*2
                            	   727: 
00:00001372 323B0010        	   728:          MOVE.W  BRTBL(PC,D0.W),D1  GET BRANCH MNEMONIC
00:00001376 1AC1            	   729:          MOVE.B  D1,(A5)+           (REVERSED) FROM THE TABLE
00:00001378 E049            	   730:          LSR.W   #8,D1              AND ADD THE NONBLANK PORTION
00:0000137A 0C010020        	   731:          CMPI.B  #BLANK,D1          TO THE BUFFER.
00:0000137E 6702            	   732:          BEQ.S   ICCCC9
00:00001380 1AC1            	   733:          MOVE.B  D1,(A5)+
00:00001382 4E75            	   734: ICCCC9   RTS
                            	   735: 
00:00001384 2054            	   736: BRTBL    DC.B    ' T'
00:00001386 5420            	   737:          dc.b    'T '
00:00001388 2046            	   738:          DC.B    ' F'
00:0000138A 4620            	   739:          dc.b    'F '
00:0000138C 4948            	   740:          DC.B    'IH'
00:0000138E 4849            	   741:          dc.b    'HI'
00:00001390 534C            	   742:          DC.B    'SL'
00:00001392 4C53            	   743:          dc.b    'LS'
00:00001394 4343            	   744:          DC.B    'CC'
00:00001396 4343            	   745:          dc.b    'CC'
00:00001398 5343            	   746:          DC.B    'SC'
00:0000139A 4353            	   747:          dc.b    'CS'
00:0000139C 454E            	   748:          DC.B    'EN'
00:0000139E 4E45            	   749:          dc.b    'NE'
00:000013A0 5145            	   750:          DC.B    'QE'
00:000013A2 4551            	   751:          dc.b    'EQ'
00:000013A4 4356            	   752:          DC.B    'CV'
00:000013A6 5643            	   753:          dc.b    'VC'
00:000013A8 5356            	   754:          DC.B    'SV'
00:000013AA 5653            	   755:          dc.b    'VS'
00:000013AC 4C50            	   756:          DC.B    'LP'
00:000013AE 504C            	   757:          dc.b    'PL'
00:000013B0 494D            	   758:          DC.B    'IM'
00:000013B2 4D49            	   759:          dc.b    'MI'
00:000013B4 4547            	   760:          DC.B    'EG'
00:000013B6 4745            	   761:          dc.b    'GE'
00:000013B8 544C            	   762:          DC.B    'TL'
00:000013BA 4C54            	   763:          dc.b    'LT'
00:000013BC 5447            	   764:          DC.B    'TG'
00:000013BE 4754            	   765:          dc.b    'GT'
00:000013C0 454C            	   766:          DC.B    'EL'
00:000013C2 4C45            	   767:          dc.b    'LE'
                            	   768: 
                            	   769: *   BIT  5432109876543210
                            	   770: *        ....RRRMMM......    DESTINATION REGISTER MODE
                            	   771: *        ..........MMMRRR    SOURCE MODE REGISTER
                            	   772: *
                            	   773: * IF BYTE SIZE; ADDRESS DIRECT NOT ALLOWED AS SOURCE
                            	   774: *
                            	   775: IMOVEA1  DS      0
00:000013C4 3E3C0FFF        	   776:          MOVE.W  #$FFF,D7       ALL MODES
00:000013C8 610000E0        	   777:          BSR     EEA
                            	   778: 
00:000013CC 1CC5            	   779:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	   780: 
00:000013CE 3814            	   781:          MOVE.W  (A4),D4        ....RRRMMM......
00:000013D0 E24C            	   782:          LSR.W   #1,D4          .....RRRMMM.....
00:000013D2 EA0C            	   783:          LSR.B   #5,D4          .....RRR.....MMM
00:000013D4 E05C            	   784:          ROR.W   #8,D4          .....MMM.....RRR
00:000013D6 EB0C            	   785:          LSL.B   #5,D4          .....MMMRRR.....
00:000013D8 EA4C            	   786:          LSR.W   #5,D4          ..........MMMRRR
                            	   787: 
                            	   788: * IF .BYTE DESTINATION A@ NOT ALLOWED
00:000013DA 3E3C01FF        	   789:          MOVE.W  #$1FF,D7       DATA ALTERABLE + A@
00:000013DE 1014            	   790:          MOVE.B  (A4),D0
00:000013E0 0C000001        	   791:          CMPI.B  #$01,D0
00:000013E4 6604            	   792:          BNE.S   IMOVE19        NOT BYTE SIZE
                            	   793: 
00:000013E6 3E3C01FD        	   794:          MOVE.W  #$1FD,D7       DATA ALTERABLE
                            	   795: IMOVE19
                            	   796: 
00:000013EA 610000BE        	   797:          BSR     EEA
00:000013EE 602C            	   798:          BRA.S   CS19           COMMON
                            	   799: 
                            	   800: *  IF BYTE; ADDRESS REGISTER DIRECT NOT ALLOWED
                            	   801: IQUICKA  DS      0              ADDQ  SUBQ
00:000013F0 612E            	   802:          BSR.S   FORMSIZE
                            	   803: 
00:000013F2 1CFC0023        	   804:          MOVE.B  #'#',(A6)+
00:000013F6 EF5C            	   805:          ROL.W   #7,D4
00:000013F8 02040007        	   806:          ANDI.B  #7,D4
00:000013FC 6604            	   807:          BNE.S   IQUICK21
00:000013FE 00040008        	   808:          ORI.B   #8,D4          MAKE ZERO INTO EIGHT
00:00001402 00040030        	   809: IQUICK21 ORI.B   #'0',D4        MAKE ASCII
00:00001406 1CC4            	   810:          MOVE.B  D4,(A6)+
                            	   811: 
00:00001408 1CC5            	   812:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	   813: 
00:0000140A 3814            	   814:          MOVE.W  (A4),D4
                            	   815: 
00:0000140C 3014            	   816:          MOVE.W  (A4),D0
00:0000140E 024000C0        	   817:          ANDI.W  #$00C0,D0
00:00001412 6704            	   818:          BEQ.S   IQUICK31       DATA ALTERABLE
00:00001414 3E3C01FF        	   819:          MOVE.W  #$1FF,D7       ALTERABLE ADDRESSING
00:00001418 61000090        	   820: IQUICK31 BSR     EEA
00:0000141C 60000378        	   821: CS19     BRA     COMMON
                            	   822: 
                            	   823: *  BIT   5432109876543210
                            	   824: *        ........00......       BYTE
                            	   825: *        ........01......       WORD
                            	   826: *        ........10......       LONG
                            	   827: *        ........11......       ERROR
                            	   828: *
                            	   829: FORMSIZE DS      0
00:00001420 3414            	   830:          MOVE.W  (A4),D2
00:00001422 1AFC002E        	   831:          MOVE.B  #'.',(A5)+     STORE PERIOD
00:00001426 EC4A            	   832:          LSR.W   #6,D2
00:00001428 02420003        	   833:          ANDI.W  #$03,D2
00:0000142C 6606            	   834:          BNE.S   FORM91
00:0000142E 1AFC0042        	   835:          MOVE.B  #'B',(A5)+     STORE "B"
00:00001432 6016            	   836:          BRA.S   FORM95
                            	   837: 
00:00001434 103C0057        	   838: FORM91   MOVE.B  #'W',D0
00:00001438 0C020001        	   839:          CMPI.B  #1,D2
00:0000143C 670A            	   840:          BEQ.S   FORM93
00:0000143E 103C004C        	   841:          MOVE.B  #'L',D0
00:00001442 0C020002        	   842:          CMPI.B  #2,D2
00:00001446 665E            	   843:          BNE.S   FE10           FERROR
00:00001448 1AC0            	   844: FORM93   MOVE.B  D0,(A5)+       STORE "W" OR "L"
00:0000144A 4E75            	   845: FORM95   RTS
                            	   846: 
00:0000144C 6100FC26        	   847: EA000    BSR     FORMREGD
00:00001450 08070000        	   848:          BTST    #0,D7
00:00001454 6750            	   849:          BEQ.S   FE10           FERROR
00:00001456 4E75            	   850:          RTS
                            	   851: 
00:00001458 6100FC0A        	   852: EA001    BSR     FORMREGA
00:0000145C 08070001        	   853:          BTST    #1,D7
00:00001460 6744            	   854:          BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
00:00001462 4E75            	   855:          RTS
                            	   856: 
00:00001464 1CFC0028        	   857: EA010    MOVE.B  #'(',(A6)+
00:00001468 6100FBFA        	   858:          BSR     FORMREGA
00:0000146C 1CFC0029        	   859:          MOVE.B  #')',(A6)+
00:00001470 08070002        	   860:          BTST    #2,D7
00:00001474 6730            	   861:          BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
00:00001476 4E75            	   862:          RTS
                            	   863: 
00:00001478 1CFC0028        	   864: EA011    MOVE.B  #'(',(A6)+
00:0000147C 6100FBE6        	   865:          BSR     FORMREGA
00:00001480 1CFC0029        	   866:          MOVE.B  #')',(A6)+
00:00001484 1CFC002B        	   867:          MOVE.B  #'+',(A6)+
00:00001488 08070003        	   868:          BTST    #3,D7
00:0000148C 6718            	   869:          BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
00:0000148E 4E75            	   870: EA011RTS RTS
                            	   871: 
00:00001490 1CFC002D        	   872: EA100    MOVE.B  #'-',(A6)+
00:00001494 1CFC0028        	   873:          MOVE.B  #'(',(A6)+
00:00001498 6100FBCA        	   874:          BSR     FORMREGA
00:0000149C 1CFC0029        	   875:          MOVE.B  #')',(A6)+
00:000014A0 08070004        	   876:          BTST    #4,D7
00:000014A4 66E8            	   877:          BNE     EA011RTS
00:000014A6 60000316        	   878: FE10     BRA     FERROR         THIS MODE NOT ALLOWED
                            	   879: 
                            	   880: *  ENTER       A4 = POINTER TO FIRST WORD
                            	   881: *              D3 = OFFSET TO EXTENSION
                            	   882: *              D4 = VALUE TO PROCESS
                            	   883: *              D7 = MODES ALLOWED MASK
                            	   884: *
                            	   885: EEA      DS      0
00:000014AA 2004            	   886:          MOVE.L  D4,D0
00:000014AC E648            	   887:          LSR.W   #3,D0
00:000014AE 02400007        	   888:          ANDI.W  #$7,D0
00:000014B2 6798            	   889:          BEQ     EA000
                            	   890: 
00:000014B4 0C000001        	   891:          CMPI.B  #1,D0
00:000014B8 679E            	   892:          BEQ     EA001
                            	   893: 
00:000014BA 0C000002        	   894:          CMPI.B  #2,D0
00:000014BE 67A4            	   895:          BEQ     EA010
                            	   896: 
00:000014C0 0C000003        	   897:          CMPI.B  #3,D0
00:000014C4 67B2            	   898:          BEQ     EA011
                            	   899: 
00:000014C6 0C000004        	   900:          CMPI.B  #4,D0
00:000014CA 67C4            	   901:          BEQ     EA100
                            	   902: 
00:000014CC 0C000005        	   903:          CMPI.B  #5,D0
00:000014D0 6760            	   904:          BEQ.S   EA101
                            	   905: 
00:000014D2 0C000007        	   906:          CMPI.B  #7,D0
00:000014D6 6770            	   907:          BEQ.S   EA111
                            	   908: 
                            	   909: *    EXTENSION WORD
                            	   910: *   BIT  5432109876543210
                            	   911: *        0...............    DATA REGISTER
                            	   912: *        1...............    ADDRESS REGISTER
                            	   913: *        .RRR............    REGISTER
                            	   914: *        ....0...........    SIGN EXTENDED, LOW ORDER INTEGER IN INDEX REG
                            	   915: *        ....1...........    LONG VALUE IN INDEX REGISTER
                            	   916: *        .....000........
                            	   917: *        ........DDDDDDDD    DISPLACEMENT INTEGER
                            	   918: *
                            	   919: * EA110            ADDRESS REGISTER INDIRECT WITH INDEX
                            	   920: 
00:000014D8 08070006        	   921:          BTST    #6,D7
00:000014DC 67C8            	   922:          BEQ     FE10           FERROR  THIS MODE NOT ALLOWED
                            	   923: 
00:000014DE 32343000        	   924:          MOVE.W  (A4,D3),D1
00:000014E2 02410700        	   925:          ANDI.W  #$0700,D1
00:000014E6 66BE            	   926:          BNE     FE10           FERROR  BITS 10-8 MUST BE ZERO
                            	   927: 
00:000014E8 30343000        	   928:          MOVE.W  (A4,D3),D0     D0 = DISPLACEMENT
00:000014EC 4880            	   929:          EXT.W   D0
00:000014EE 48C0            	   930:          EXT.L   D0
00:000014F0 61000602        	   931:          BSR     HEX2DEC        DECIMAL
00:000014F4 1CFC0028        	   932:          MOVE.B  #'(',(A6)+     (
                            	   933: 
00:000014F8 6100FB6A        	   934:          BSR     FORMREGA       XX(A@
                            	   935: 
00:000014FC 1CFC002C        	   936:          MOVE.B  #',',(A6)+     XX(A@,
                            	   937: 
00:00001500 18343000        	   938:          MOVE.B  (A4,D3),D4
00:00001504 E804            	   939:          ASR.B   #4,D4
00:00001506 6A06            	   940:          BPL.S   EA1105
00:00001508 6100FB5A        	   941:          BSR     FORMREGA
00:0000150C 6004            	   942:          BRA.S   EA1107
                            	   943: 
00:0000150E 6100FB64        	   944: EA1105   BSR     FORMREGD
00:00001512 1CFC002E        	   945: EA1107   MOVE.B  #'.',(A6)+     XX(A@,X@.
                            	   946: 
00:00001516 38343000        	   947:          MOVE.W  (A4,D3),D4     D4 = R@
00:0000151A 103C0057        	   948:          MOVE.B  #'W',D0        ..........W
00:0000151E 0804000B        	   949:          BTST    #11,D4
00:00001522 6704            	   950:          BEQ.S   EA1109
00:00001524 103C004C        	   951:          MOVE.B  #'L',D0        ..........L
00:00001528 1CC0            	   952: EA1109   MOVE.B  D0,(A6)+
00:0000152A 1CFC0029        	   953:          MOVE.B  #')',(A6)+     ...........)
00:0000152E 5483            	   954:          ADDQ.L  #2,D3
00:00001530 4E75            	   955:          RTS
                            	   956: 
                            	   957: * ADDRESS REGISTER INDIRECT WITH DISPLACEMENT
                            	   958: *
00:00001532 08070005        	   959: EA101    BTST    #5,D7          101000;   DIS(A@)
00:00001536 6756            	   960:          BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
                            	   961: 
00:00001538 30343000        	   962:          MOVE.W  (A4,D3),D0
00:0000153C 48C0            	   963:          EXT.L   D0
00:0000153E 610005B4        	   964:          BSR     HEX2DEC        DECIMAL
00:00001542 5483            	   965:          ADDQ.L  #2,D3          SIZE
00:00001544 6000FF1E        	   966:          BRA     EA010
                            	   967: 
                            	   968: *  111000        ABSOLUTE SHORT
                            	   969: *  111001        ABSOLUTE LONG
                            	   970: *  111010        PROGRAM COUNTER WITH DISPLACEMENT
                            	   971: *  111011        PROGRAM COUNTER WITH INDEX
                            	   972: *  111100        IMMEDIATE OR STATUS REG
                            	   973: *
                            	   974: EA111
00:00001548 02440007        	   975:          ANDI.W  #7,D4
00:0000154C 6618            	   976:          BNE.S   EA1112
                            	   977: 
00:0000154E 08070007        	   978:          BTST    #7,D7
00:00001552 673A            	   979:          BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
                            	   980: 
00:00001554 30343000        	   981:          MOVE.W  (A4,D3),D0     111000;   ABSOLUTE SHORT
00:00001558 48C0            	   982:          EXT.L   D0
00:0000155A 1CFC0024        	   983:          MOVE.B  #'$',(A6)+
00:0000155E 610005F8        	   984:          BSR     PNT8HX         SIGN EXTENDED VALUE
00:00001562 5483            	   985:          ADDQ.L  #2,D3          SIZE + 2
00:00001564 4E75            	   986:          RTS
                            	   987: 
00:00001566 0C040001        	   988: EA1112   CMPI.B  #1,D4
00:0000156A 6616            	   989:          BNE.S   EA1113
                            	   990: 
00:0000156C 08070008        	   991:          BTST    #8,D7
00:00001570 671C            	   992:          BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
                            	   993: 
00:00001572 1CFC0024        	   994:          MOVE.B  #'$',(A6)+     HEX
00:00001576 20343000        	   995:          MOVE.L  (A4,D3),D0     111001;     ABSOLUTE LONG
00:0000157A 610005DC        	   996:          BSR     PNT8HX
                            	   997: *-       MOVE.B  #'.',(A6)+     FORCE LONG FORMAT
                            	   998: *-       MOVE.B  #'L',(A6)+     IE   .L
00:0000157E 5883            	   999:          ADDQ.L  #4,D3
00:00001580 4E75            	  1000:          RTS
                            	  1001: 
00:00001582 0C040002        	  1002: EA1113   CMPI.B  #2,D4
00:00001586 662C            	  1003:          BNE.S   EA1114
                            	  1004: 
00:00001588 08070009        	  1005:          BTST    #9,D7
00:0000158C 6604            	  1006:          BNE.S   EA1113A
00:0000158E 6000022E        	  1007: FE11     BRA     FERROR         THIS MODE NOT ALLOWED
                            	  1008: EA1113A
                            	  1009: 
00:00001592 30343000        	  1010:          MOVE.W  (A4,D3),D0     111010;  PC + DISPLACEMENT  DESTINATION(PC)
00:00001596 48C0            	  1011:          EXT.L   D0
00:00001598 D0A9FFFC        	  1012:          ADD.L   HISPC(A1),D0
00:0000159C 5480            	  1013:          ADDQ.L  #2,D0
00:0000159E 1CFC0024        	  1014:          MOVE.B  #'$',(A6)+     HEX "$"
00:000015A2 610005B4        	  1015:          BSR     PNT8HX         DESTINATION
00:000015A6 203C29435028    	  1016:          MOVE.L  #')CP(',D0     (PC)
00:000015AC 6100FC1E        	  1017:          BSR     SCHR           STORE WORD
00:000015B0 5483            	  1018:          ADDQ.L  #2,D3          SIZE
00:000015B2 4E75            	  1019:          RTS
                            	  1020: 
00:000015B4 0C040003        	  1021: EA1114   CMPI.B  #3,D4
00:000015B8 6664            	  1022:          BNE.S   EA1115
                            	  1023: 
                            	  1024: * PROGRAM COUNTER WITH INDEX    DESTINATION(PC,R@.X)
                            	  1025: *
                            	  1026: *        5432109876543210       SECOND WORD
                            	  1027: *        0...............       DATA REGISTER
                            	  1028: *        1...............       ADDRESS REGISTER
                            	  1029: *        .XXX............       REGISTER
                            	  1030: *        ....0...........       SIGN-EXTENDED, LOW ORDER WORD INTEGER
                            	  1031: *                               ..IN INDEX REGISTER
                            	  1032: *        ....1...........       LONG VALUE IN INDEX REGISTER
                            	  1033: *        .....000........
                            	  1034: *        ........XXXXXXXX       DISPLACEMENT INTEGER
                            	  1035: *
00:000015BA 0807000A        	  1036:          BTST    #10,D7
00:000015BE 67CE            	  1037:          BEQ     FE11           FERROR  THIS MODE NOT ASLLOWED
                            	  1038: 
00:000015C0 32343000        	  1039:          MOVE.W  (A4,D3),D1
00:000015C4 02410700        	  1040:          ANDI.W  #$0700,D1
00:000015C8 66C4            	  1041:          BNE     FE11           FERROR;  BITS 10-8 MUST BE ZERO
                            	  1042: 
00:000015CA 10343001        	  1043:          MOVE.B  1(A4,D3),D0    111100;   DESTINATION(PC,R@.X)
00:000015CE 4880            	  1044:          EXT.W   D0
00:000015D0 48C0            	  1045:          EXT.L   D0
00:000015D2 D0A9FFFC        	  1046:          ADD.L   HISPC(A1),D0
00:000015D6 5480            	  1047:          ADDQ.L  #2,D0
00:000015D8 1CFC0024        	  1048:          MOVE.B  #'$',(A6)+     HEX "$"
00:000015DC 6100057A        	  1049:          BSR     PNT8HX         DESTINATION
                            	  1050: 
00:000015E0 203C2C435028    	  1051:          MOVE.L  #',CP(',D0
00:000015E6 6100FBE4        	  1052:          BSR     SCHR           DES(PC,
                            	  1053: 
00:000015EA 38343000        	  1054:          MOVE.W  (A4,D3),D4
00:000015EE E95C            	  1055:          ROL.W   #4,D4
00:000015F0 08040003        	  1056:          BTST    #3,D4
00:000015F4 6706            	  1057:          BEQ.S   EAF25
00:000015F6 6100FA6C        	  1058:          BSR     FORMREGA
00:000015FA 6004            	  1059:          BRA.S   EAF27
00:000015FC 6100FA76        	  1060: EAF25    BSR     FORMREGD       DES(PC,R@
                            	  1061: EAF27
                            	  1062: 
00:00001600 1CFC002E        	  1063:          MOVE.B  #'.',(A6)+     DES(PC,R@.
                            	  1064: 
00:00001604 38343000        	  1065:          MOVE.W  (A4,D3),D4
00:00001608 303C4C57        	  1066:          MOVE.W  #'LW',D0
00:0000160C 0804000B        	  1067:          BTST    #11,D4
00:00001610 6702            	  1068:          BEQ.S   EAF35
00:00001612 E048            	  1069:          LSR.W   #8,D0
00:00001614 1CC0            	  1070: EAF35    MOVE.B  D0,(A6)+       DES(PC,R@.X
                            	  1071: 
00:00001616 1CFC0029        	  1072:          MOVE.B  #')',(A6)+     DES(PC,R@.X)
00:0000161A 5483            	  1073:          ADDQ.L  #2,D3
00:0000161C 4E75            	  1074:          RTS
                            	  1075: 
                            	  1076: *   BIT  5432109876543210
                            	  1077: *        ..........111100       FIRST WORD;  #<IMMEDIATE>
                            	  1078: *
00:0000161E 0C040004        	  1079: EA1115   CMPI.B  #4,D4
00:00001622 6600FF6A        	  1080:          BNE     FE11           FERROR
                            	  1081: 
00:00001626 0807000B        	  1082:          BTST    #11,D7
00:0000162A 6700FF62        	  1083:          BEQ     FE11           FERROR;  THIS MODE NOT ALLOWED
                            	  1084: 
00:0000162E 1CFC0023        	  1085:          MOVE.B  #'#',(A6)+     IMMEDIATE
                            	  1086: 
00:00001632 122DFFFF        	  1087:          MOVE.B  -1(A5),D1
00:00001636 0C01004C        	  1088:          CMPI.B  #'L',D1
00:0000163A 6724            	  1089:          BEQ.S   EA11155        LONG
                            	  1090: 
00:0000163C 30343000        	  1091:          MOVE.W  (A4,D3),D0
                            	  1092: 
00:00001640 0C010042        	  1093:          CMPI.B  #'B',D1
00:00001644 6610            	  1094:          BNE.S   EA11153        .WORD
                            	  1095: 
                            	  1096: * BYTE SIZE; DATA ALLOWED
                            	  1097: *  0000 0000 XXXX XXXX
                            	  1098: *  1111 1111 1XXX XXXX
00:00001646 2200            	  1099:          MOVE.L  D0,D1
00:00001648 E049            	  1100:          LSR.W   #8,D1
00:0000164A 670A            	  1101:          BEQ.S   EA11153
00:0000164C 2200            	  1102:          MOVE.L  D0,D1
00:0000164E EE41            	  1103:          ASR.W   #7,D1
00:00001650 5241            	  1104:          ADDQ.W  #1,D1
00:00001652 6600FF3A        	  1105:          BNE     FE11           FERROR
                            	  1106: 
00:00001656 48C0            	  1107: EA11153  EXT.L   D0
00:00001658 6100049A        	  1108:          BSR     HEX2DEC
00:0000165C 5483            	  1109:          ADDQ.L  #2,D3
00:0000165E 4E75            	  1110:          RTS
                            	  1111: 
00:00001660 20343000        	  1112: EA11155  MOVE.L  (A4,D3),D0
00:00001664 6100048E        	  1113:          BSR     HEX2DEC
00:00001668 5883            	  1114:          ADDQ.L  #4,D3          SIZE
00:0000166A 4E75            	  1115:          RTS
                            	  1116: 
00:0000166C 1AFC002E        	  1117: MOVEMS   MOVE.B  #'.',(A5)+     PERIOD
00:00001670 303C4C57        	  1118:          MOVE.W  #'LW',D0
00:00001674 08040006        	  1119:          BTST    #6,D4
00:00001678 6702            	  1120:          BEQ.S   MOVEMS2
00:0000167A E048            	  1121:          LSR.W   #8,D0
00:0000167C 1AC0            	  1122: MOVEMS2  MOVE.B  D0,(A5)+       SIZE
00:0000167E 4E75            	  1123:          RTS
                            	  1124: 
                            	  1125: * MOVEM - REGISTER EXPANSION
                            	  1126: *
                            	  1127: MOVEMR   DS      0
00:00001680 342C0002        	  1128:          MOVE.W  2(A4),D2       D2 = SECOND WORD
00:00001684 7020            	  1129:          MOVEQ   #$20,D0        D0 = SPACE
00:00001686 7E2F            	  1130:          MOVEQ   #$2F,D7        D7 = /
00:00001688 538E            	  1131:          SUBQ.L  #1,A6          ADJUST STORE POINTER
00:0000168A 7A30            	  1132:          MOVEQ   #$30,D5        D5 = REGISTER #
00:0000168C 383C4144        	  1133:          MOVE.W  #'AD',D4       D4 = REG CLASS
                            	  1134: 
00:00001690 0302            	  1135: MOVEMR11 BTST    D1,D2
00:00001692 6730            	  1136:          BEQ.S   MOVEMR77       BIT RESET
                            	  1137: 
00:00001694 B016            	  1138:          CMP.B   (A6),D0        BIT SET
00:00001696 6612            	  1139:          BNE.S   MOVEMR44       NOT SPACE
                            	  1140: 
00:00001698 1D440001        	  1141: MOVEMR33 MOVE.B  D4,1(A6)       REG TYPE
00:0000169C 1D450002        	  1142:          MOVE.B  D5,2(A6)       REG #
00:000016A0 1D7C002D0003    	  1143:          MOVE.B  #'-',3(A6)     -
00:000016A6 568E            	  1144:          ADDQ.L  #3,A6
00:000016A8 602E            	  1145:          BRA.S   MOVEMR88
                            	  1146: 
00:000016AA 0C16002C        	  1147: MOVEMR44 CMPI.B  #',',(A6)
00:000016AE 67E8            	  1148:          BEQ     MOVEMR33       COMMA SEPARATOR
                            	  1149: 
00:000016B0 BE16            	  1150:          CMP.B   (A6),D7        / SEPARATOR
00:000016B2 67E4            	  1151:          BEQ     MOVEMR33
                            	  1152: 
00:000016B4 1D440001        	  1153:          MOVE.B  D4,1(A6)       REG TYPE
00:000016B8 1D450002        	  1154:          MOVE.B  D5,2(A6)       REG #
00:000016BC 1D7C002D0003    	  1155:          MOVE.B  #'-',3(A6)     - SEPARATOR
00:000016C2 6014            	  1156:          BRA.S   MOVEMR88
                            	  1157: 
00:000016C4 0C16002C        	  1158: MOVEMR77 CMPI.B  #',',(A6)
00:000016C8 670E            	  1159:          BEQ.S   MOVEMR88       COMMA
                            	  1160: 
00:000016CA B016            	  1161:          CMP.B   (A6),D0
00:000016CC 670A            	  1162:          BEQ.S   MOVEMR88       SPACE
00:000016CE B02E0001        	  1163:          CMP.B   1(A6),D0
00:000016D2 6702            	  1164:          BEQ.S   MOVEMR79       SPACE
00:000016D4 568E            	  1165:          ADDQ.L  #3,A6
00:000016D6 1C87            	  1166: MOVEMR79 MOVE.B  D7,(A6)        / SEPARATOR
                            	  1167: 
00:000016D8 5285            	  1168: MOVEMR88 ADDQ.L  #1,D5
00:000016DA D286            	  1169:          ADD.L   D6,D1          D1 = BIT POSITION
00:000016DC 0C050038        	  1170:          CMPI.B  #'8',D5
00:000016E0 66AE            	  1171:          BNE     MOVEMR11
                            	  1172: 
00:000016E2 B016            	  1173:          CMP.B   (A6),D0        SPACE
00:000016E4 670A            	  1174:          BEQ.S   MOVEMR94
                            	  1175: 
00:000016E6 B02E0001        	  1176:          CMP.B   1(A6),D0       SPACE
00:000016EA 6704            	  1177:          BEQ.S   MOVEMR94
00:000016EC 568E            	  1178:          ADDQ.L  #3,A6
00:000016EE 1C87            	  1179:          MOVE.B  D7,(A6)        /   SEPARATOR
                            	  1180: 
00:000016F0 1A3C0030        	  1181: MOVEMR94 MOVE.B  #'0',D5        RESET REG TO ZERO
00:000016F4 E04C            	  1182:          LSR.W   #8,D4          CHANGE REG TYPE
00:000016F6 6698            	  1183:          BNE     MOVEMR11       MORE
                            	  1184: 
00:000016F8 1C80            	  1185:          MOVE.B  D0,(A6)        SPACE
00:000016FA 4E75            	  1186:          RTS
                            	  1187: 
                            	  1188: DCODE68K DS      0
00:000016FC 4E51FFF0        	  1189:          LINK    A1,#-LOCVARSZ       CREATE A FRAME FOR THE
00:00001700 48E91007FFF0    	  1190:          MOVEM.L D0-D2/A4,DDATA(A1)  CODE AND ITS PC.  A4
00:00001706 49E9FFF0        	  1191:          LEA     DDATA(A1),A4        POINTS TO THE CODE.
                            	  1192: 
00:0000170A 264D            	  1193:          MOVE.L  A5,A3          A3 = START OF OUTPUT BUFFER
00:0000170C 7050            	  1194:          MOVEQ   #BUFSIZE,D0
00:0000170E 2C4B            	  1195:          MOVE.L  A3,A6
00:00001710 1CFC0020        	  1196: DEC311   MOVE.B  #BLANK,(A6)+   SPACE FILL BUFFER
00:00001714 5380            	  1197:          SUBQ.L  #1,D0
00:00001716 66F8            	  1198:          BNE     DEC311
                            	  1199: 
00:00001718 2C4B            	  1200:          MOVE.L  A3,A6          FORMAT ADDRESS
00:0000171A 2029FFFC        	  1201:          MOVE.L  HISPC(A1),D0
00:0000171E 6100046A        	  1202:          BSR     FRELADDR
                            	  1203: 
                            	  1204: * CHECK FOR KNOWN ILLEGAL CODES
00:00001722 3014            	  1205:          MOVE.W  (A4),D0
                            	  1206: 
00:00001724 4BFA00C2        	  1207:          LEA     KI(PC),A5
00:00001728 2C4D            	  1208:          MOVE.L  A5,A6
00:0000172A 548E            	  1209:          ADD.L   #KIEND-KI,A6
00:0000172C B05D            	  1210: DEC404   CMP.W   (A5)+,D0
00:0000172E 671A            	  1211:          BEQ.S   FE12           FERROR;  ILLEGAL CODE
00:00001730 BBCE            	  1212:          CMP.L   A6,A5
00:00001732 66F8            	  1213:          BNE     DEC404
                            	  1214: 
                            	  1215: * LOOK FOR MATCH OF OP-CODE
                            	  1216: *
00:00001734 4BFA00B4        	  1217:          LEA     TBL(PC),A5     A5 = POINTER TO DECODE TABLE
00:00001738 4DFA02BA        	  1218:          LEA     TBLE(PC),A6    A6 = POINTER TO END OF TABLE
00:0000173C 3014            	  1219: DEC411   MOVE.W  (A4),D0        FIRST WORD
00:0000173E C05D            	  1220:          AND.W   (A5)+,D0       MASK
00:00001740 B05D            	  1221:          CMP.W   (A5)+,D0
00:00001742 6708            	  1222:          BEQ.S   DEC425         FOUND MATCH
00:00001744 548D            	  1223:          ADDQ.L  #2,A5          UPDATE POINTER
00:00001746 BBCE            	  1224:          CMP.L   A6,A5
00:00001748 66F2            	  1225:          BNE     DEC411         MORE TABLE
00:0000174A 6072            	  1226: FE12     BRA.S   FERROR         ILLEGAL INSTRUCTION
                            	  1227: 
00:0000174C 7C00            	  1228: DEC425   CLR.L   D6
00:0000174E 1C1D            	  1229:          MOVE.B  (A5)+,D6       D6 = (GOTO OFFSET)/4
00:00001750 E58E            	  1230:          LSL.L   #2,D6
                            	  1231: 
00:00001752 7E00            	  1232:          CLR.L   D7
00:00001754 1E1D            	  1233:          MOVE.B  (A5)+,D7       D7 = INDEX TO OP-CODE
                            	  1234: 
                            	  1235: * MOVE OP-CODE TO BUFFER
                            	  1236: *
00:00001756 41FA029C        	  1237:          LEA     OPCTBL(PC),A0
00:0000175A 4A47            	  1238: DEC510   TST     D7
00:0000175C 6708            	  1239:          BEQ.S   DEC530         AT INDEX
00:0000175E 4A18            	  1240: DEC515   TST.B   (A0)+
00:00001760 6AFC            	  1241:          BPL     DEC515         MOVE THROUGH FIELD
00:00001762 5387            	  1242:          SUBQ.L  #1,D7
00:00001764 60F4            	  1243:          BRA     DEC510
                            	  1244: 
00:00001766 701F            	  1245: DEC530   MOVEQ   #FOC,D0
00:00001768 4BF30000        	  1246:          LEA.L   (A3,D0),A5     A5 = STORE POINTER  OP-CODE
00:0000176C 1018            	  1247: DEC535   MOVE.B  (A0)+,D0
00:0000176E 08800007        	  1248:          BCLR    #7,D0
00:00001772 6604            	  1249:          BNE.S   DEC537         END OF MOVE
00:00001774 1AC0            	  1250:          MOVE.B  D0,(A5)+
00:00001776 60F4            	  1251:          BRA     DEC535
00:00001778 1AC0            	  1252: DEC537   MOVE.B  D0,(A5)+
                            	  1253: 
                            	  1254: * CALCULATE GOTO AND GO
                            	  1255: *
00:0000177A 7602            	  1256:          MOVEQ   #2,D3          D3= SIZE
00:0000177C 41FAF7AE        	  1257:          LEA     X(PC),A0
00:00001780 D1C6            	  1258:          ADD.L   D6,A0
                            	  1259: 
00:00001782 7027            	  1260:          MOVEQ   #FOP,D0
00:00001784 4DF30000        	  1261:          LEA.L   (A3,D0),A6     A6 = POINTER FOR OPERAND
                            	  1262: 
00:00001788 3814            	  1263:          MOVE.W  (A4),D4        D4 = FIRST WORD
                            	  1264: 
00:0000178A 1A3C002C        	  1265:          MOVE.B  #',',D5        D5 = CONTAINS ASCII COMMA
                            	  1266: 
00:0000178E 3E3C01FD        	  1267:          MOVE.W  #$1FD,D7       D7 = DATA ALTERABLE MODES ALLOWED
                            	  1268: 
00:00001792 4ED0            	  1269:          JMP     (A0)
                            	  1270: *
                            	  1271: *  A4 = POINTER TO DATA IN FRAME CREATED BY 'LINK A1,...'
                            	  1272: *  A5 = POINTER STORE OP-CODE
                            	  1273: *  A6 = POINTER STORE OPERAND
                            	  1274: *  D3 = SIZE = 2 BYTES
                            	  1275: *  D4 = FIRST WORD
                            	  1276: *  D7 = ADDRESS MODES ALLOWED ($1FD) DATA ALTERABLE
                            	  1277: 
00:00001794 5483            	  1278: COMMON4  ADDQ.L  #2,D3          SIZE = 4
                            	  1279: 
00:00001796 2C03            	  1280: COMMON   MOVE.L  D3,D6          D6 = SIZE
00:00001798 1CFC0020        	  1281:          MOVE.B  #BLANK,(A6)+   SPACE AS LAST CHAR
                            	  1282: 
00:0000179C 2A4E            	  1283:          MOVE.L  A6,A5          SAVE END OF BUFFER POINTER
00:0000179E 700A            	  1284:          MOVEQ   #FDATA,D0
00:000017A0 4DF30000        	  1285:          LEA.L   (A3,D0),A6
                            	  1286: 
00:000017A4 301C            	  1287: COMMON35 MOVE.W  (A4)+,D0       GET NEXT WORD OF DATA.
00:000017A6 54A9FFFC        	  1288:          ADDQ.L  #2,HISPC(A1)   ADJUST PROG COUNTER.
00:000017AA 610003BA        	  1289:          BSR     PNT4HX         FORMAT DATA. (A6)+
00:000017AE 5503            	  1290:          SUBQ.B  #2,D3
00:000017B0 66F2            	  1291:          BNE     COMMON35
                            	  1292: 
00:000017B2 2C4D            	  1293:          MOVE.L  A5,A6          A6 = RESTORE END POINTER
                            	  1294: 
00:000017B4 2A4B            	  1295:          MOVE.L  A3,A5          A5 =  BEGINNING OF BUFFER
                            	  1296: 
00:000017B6 2869FFFC        	  1297:          MOVE.L  HISPC(A1),A4   MOVE THE UPDATED PC
00:000017BA 4E59            	  1298:          UNLK    A1               TO A4 AND UNDO FRAME.
                            	  1299: 
00:000017BC 4E75            	  1300:          RTS
                            	  1301: 
                            	  1302: 
                            	  1303: FERROR   DS      0
                            	  1304: * ILLEGAL INSTRUCTION
                            	  1305: *
00:000017BE 701F            	  1306:          MOVEQ   #FOC,D0
00:000017C0 4DF30000        	  1307:          LEA.L   (A3,D0),A6
00:000017C4 4BFA0018        	  1308:          LEA     MSG111(PC),A5
00:000017C8 101D            	  1309: FERROR35 MOVE.B  (A5)+,D0
00:000017CA 0C000004        	  1310:          CMPI.B  #EOT,D0
00:000017CE 6704            	  1311:          BEQ.S   FERROR39
00:000017D0 1CC0            	  1312:          MOVE.B  D0,(A6)+
00:000017D2 60F4            	  1313:          BRA     FERROR35
                            	  1314: FERROR39 DS      0
                            	  1315: 
00:000017D4 3014            	  1316:          MOVE.W  (A4),D0
00:000017D6 6100038E        	  1317:          BSR     PNT4HX
                            	  1318: 
00:000017DA 7602            	  1319:          MOVEQ   #2,D3          SIZE
                            	  1320: 
00:000017DC 60B8            	  1321:          BRA     COMMON
                            	  1322: 
00:000017DE 44432E5720202020	  1323: MSG111   DC.B    'DC.W    $',EOT
00:000017E6 24
00:000017E7 04
                            	  1324: 
                            	  1325: 
                            	  1326: 
00:000017E8 4AFB            	  1327: KI       DC.W    $4AFB          KNOWN ILLEGAL CODES
                            	  1328: KIEND    DS      0
                            	  1329: 
                            	  1330: 
                            	  1331: *  \1   MASK
                            	  1332: *  \2   OP-CODE PATTERN
                            	  1333: *  \3   GOTO OFFSET
                            	  1334: *  \4   INDEX TO OP-CODE
                            	  1335: C68      MACRO
                            	  1336:          DC.W    $\1
                            	  1337:          DC.W    $\2
                            	  1338:          DC.B    (\3-X)>>2
                            	  1339:          DC.B    \4
                            	  1340:          ENDM
                            	  1341: 
                            	  1342: TBL      DS      0
                            	  1343:          C68     FEC0,E6C0,ISHIFT,56           RO
00:000017EA FEC0            	     1M          DC.W    $FEC0
00:000017EC E6C0            	     2M          DC.W    $E6C0
00:000017EE F7              	     3M          DC.B    (ISHIFT-X)>>2
00:000017EF 38              	     4M          DC.B    56
                            	  1344:          C68     FEC0,E4C0,ISHIFT,57           ROX
00:000017F0 FEC0            	     1M          DC.W    $FEC0
00:000017F2 E4C0            	     2M          DC.W    $E4C0
00:000017F4 F7              	     3M          DC.B    (ISHIFT-X)>>2
00:000017F5 39              	     4M          DC.B    57
                            	  1345:          C68     FEC0,E2C0,ISHIFT,55           LS
00:000017F6 FEC0            	     1M          DC.W    $FEC0
00:000017F8 E2C0            	     2M          DC.W    $E2C0
00:000017FA F7              	     3M          DC.B    (ISHIFT-X)>>2
00:000017FB 37              	     4M          DC.B    55
                            	  1346:          C68     FEC0,E0C0,ISHIFT,54           AS
00:000017FC FEC0            	     1M          DC.W    $FEC0
00:000017FE E0C0            	     2M          DC.W    $E0C0
00:00001800 F7              	     3M          DC.B    (ISHIFT-X)>>2
00:00001801 36              	     4M          DC.B    54
                            	  1347:          C68     F018,E018,ISHIFT,56           RO
00:00001802 F018            	     1M          DC.W    $F018
00:00001804 E018            	     2M          DC.W    $E018
00:00001806 F7              	     3M          DC.B    (ISHIFT-X)>>2
00:00001807 38              	     4M          DC.B    56
                            	  1348:          C68     F018,E010,ISHIFT,57           ROX
00:00001808 F018            	     1M          DC.W    $F018
00:0000180A E010            	     2M          DC.W    $E010
00:0000180C F7              	     3M          DC.B    (ISHIFT-X)>>2
00:0000180D 39              	     4M          DC.B    57
                            	  1349:          C68     F018,E008,ISHIFT,55           LS
00:0000180E F018            	     1M          DC.W    $F018
00:00001810 E008            	     2M          DC.W    $E008
00:00001812 F7              	     3M          DC.B    (ISHIFT-X)>>2
00:00001813 37              	     4M          DC.B    55
                            	  1350:          C68     F018,E000,ISHIFT,54           AS
00:00001814 F018            	     1M          DC.W    $F018
00:00001816 E000            	     2M          DC.W    $E000
00:00001818 F7              	     3M          DC.B    (ISHIFT-X)>>2
00:00001819 36              	     4M          DC.B    54
                            	  1351:          C68     F0C0,D0C0,FORM10EX,4          ADD       <EA>,A@
00:0000181A F0C0            	     1M          DC.W    $F0C0
00:0000181C D0C0            	     2M          DC.W    $D0C0
00:0000181E 5E              	     3M          DC.B    (FORM10EX-X)>>2
00:0000181F 04              	     4M          DC.B    4
                            	  1352:          C68     F130,D100,FORM12,53           ADDX
00:00001820 F130            	     1M          DC.W    $F130
00:00001822 D100            	     2M          DC.W    $D100
00:00001824 88              	     3M          DC.B    (FORM12-X)>>2
00:00001825 35              	     4M          DC.B    53
                            	  1353:          C68     F000,D000,FORM10EX,4            ADD
00:00001826 F000            	     1M          DC.W    $F000
00:00001828 D000            	     2M          DC.W    $D000
00:0000182A 5E              	     3M          DC.B    (FORM10EX-X)>>2
00:0000182B 04              	     4M          DC.B    4
                            	  1354:          C68     F1F8,C188,FORM9,50            EXG
00:0000182C F1F8            	     1M          DC.W    $F1F8
00:0000182E C188            	     2M          DC.W    $C188
00:00001830 5B              	     3M          DC.B    (FORM9-X)>>2
00:00001831 32              	     4M          DC.B    50
                            	  1355:          C68     F1F8,C148,FORM8,50            EXG
00:00001832 F1F8            	     1M          DC.W    $F1F8
00:00001834 C148            	     2M          DC.W    $C148
00:00001836 57              	     3M          DC.B    (FORM8-X)>>2
00:00001837 32              	     4M          DC.B    50
                            	  1356:          C68     F1F8,C140,FORM7,50            EXG
00:00001838 F1F8            	     1M          DC.W    $F1F8
00:0000183A C140            	     2M          DC.W    $C140
00:0000183C 54              	     3M          DC.B    (FORM7-X)>>2
00:0000183D 32              	     4M          DC.B    50
                            	  1357:          C68     F1F0,C100,FORM12,49           ABCD
00:0000183E F1F0            	     1M          DC.W    $F1F0
00:00001840 C100            	     2M          DC.W    $C100
00:00001842 88              	     3M          DC.B    (FORM12-X)>>2
00:00001843 31              	     4M          DC.B    49
                            	  1358:          C68     F1C0,C1C0,FORM6D,48           MULS
00:00001844 F1C0            	     1M          DC.W    $F1C0
00:00001846 C1C0            	     2M          DC.W    $C1C0
00:00001848 4A              	     3M          DC.B    (FORM6D-X)>>2
00:00001849 30              	     4M          DC.B    48
                            	  1359:          C68     F1C0,C0C0,FORM6D,47           MULU
00:0000184A F1C0            	     1M          DC.W    $F1C0
00:0000184C C0C0            	     2M          DC.W    $C0C0
00:0000184E 4A              	     3M          DC.B    (FORM6D-X)>>2
00:0000184F 2F              	     4M          DC.B    47
                            	  1360:          C68     F000,C000,FORM10,2            AND
00:00001850 F000            	     1M          DC.W    $F000
00:00001852 C000            	     2M          DC.W    $C000
00:00001854 6E              	     3M          DC.B    (FORM10-X)>>2
00:00001855 02              	     4M          DC.B    2
                            	  1361:          C68     F0C0,B0C0,FORM10EX,6          CMP     <EA>,A@
00:00001856 F0C0            	     1M          DC.W    $F0C0
00:00001858 B0C0            	     2M          DC.W    $B0C0
00:0000185A 5E              	     3M          DC.B    (FORM10EX-X)>>2
00:0000185B 06              	     4M          DC.B    6
                            	  1362:          C68     F138,B108,FORM12A,46           CMPM
00:0000185C F138            	     1M          DC.W    $F138
00:0000185E B108            	     2M          DC.W    $B108
00:00001860 97              	     3M          DC.B    (FORM12A-X)>>2
00:00001861 2E              	     4M          DC.B    46
                            	  1363:          C68     F100,B100,FORM10,5            EOR
00:00001862 F100            	     1M          DC.W    $F100
00:00001864 B100            	     2M          DC.W    $B100
00:00001866 6E              	     3M          DC.B    (FORM10-X)>>2
00:00001867 05              	     4M          DC.B    5
                            	  1364:          C68     F000,B000,FORM10EX,6            CMP
00:00001868 F000            	     1M          DC.W    $F000
00:0000186A B000            	     2M          DC.W    $B000
00:0000186C 5E              	     3M          DC.B    (FORM10EX-X)>>2
00:0000186D 06              	     4M          DC.B    6
                            	  1365:          C68     F0C0,90C0,FORM10EX,44         SUB       <EA>,A@
00:0000186E F0C0            	     1M          DC.W    $F0C0
00:00001870 90C0            	     2M          DC.W    $90C0
00:00001872 5E              	     3M          DC.B    (FORM10EX-X)>>2
00:00001873 2C              	     4M          DC.B    44
                            	  1366:          C68     F130,9100,FORM12,45           SUBX
00:00001874 F130            	     1M          DC.W    $F130
00:00001876 9100            	     2M          DC.W    $9100
00:00001878 88              	     3M          DC.B    (FORM12-X)>>2
00:00001879 2D              	     4M          DC.B    45
                            	  1367:          C68     F000,9000,FORM10EX,44           SUB
00:0000187A F000            	     1M          DC.W    $F000
00:0000187C 9000            	     2M          DC.W    $9000
00:0000187E 5E              	     3M          DC.B    (FORM10EX-X)>>2
00:0000187F 2C              	     4M          DC.B    44
                            	  1368:          C68     F1F0,8100,FORM12,43           SBCD
00:00001880 F1F0            	     1M          DC.W    $F1F0
00:00001882 8100            	     2M          DC.W    $8100
00:00001884 88              	     3M          DC.B    (FORM12-X)>>2
00:00001885 2B              	     4M          DC.B    43
                            	  1369:          C68     F1C0,81C0,FORM6D,42           DIVS
00:00001886 F1C0            	     1M          DC.W    $F1C0
00:00001888 81C0            	     2M          DC.W    $81C0
00:0000188A 4A              	     3M          DC.B    (FORM6D-X)>>2
00:0000188B 2A              	     4M          DC.B    42
                            	  1370:          C68     F1C0,80C0,FORM6D,41           DIVU
00:0000188C F1C0            	     1M          DC.W    $F1C0
00:0000188E 80C0            	     2M          DC.W    $80C0
00:00001890 4A              	     3M          DC.B    (FORM6D-X)>>2
00:00001891 29              	     4M          DC.B    41
                            	  1371:          C68     F000,8000,FORM10,40           OR
00:00001892 F000            	     1M          DC.W    $F000
00:00001894 8000            	     2M          DC.W    $8000
00:00001896 6E              	     3M          DC.B    (FORM10-X)>>2
00:00001897 28              	     4M          DC.B    40
                            	  1372:          C68     F100,7000,IMOVEQ,39           MOVEQ
00:00001898 F100            	     1M          DC.W    $F100
00:0000189A 7000            	     2M          DC.W    $7000
00:0000189C A2              	     3M          DC.B    (IMOVEQ-X)>>2
00:0000189D 27              	     4M          DC.B    39
                            	  1373:          C68     FF00,6100,IBSR,51             BSR
00:0000189E FF00            	     1M          DC.W    $FF00
00:000018A0 6100            	     2M          DC.W    $6100
00:000018A2 DE              	     3M          DC.B    (IBSR-X)>>2
00:000018A3 33              	     4M          DC.B    51
                            	  1374:          C68     FF00,6000,IBSR,65             BRA
00:000018A4 FF00            	     1M          DC.W    $FF00
00:000018A6 6000            	     2M          DC.W    $6000
00:000018A8 DE              	     3M          DC.B    (IBSR-X)>>2
00:000018A9 41              	     4M          DC.B    65
                            	  1375:          C68     F000,6000,ICC,38              B
00:000018AA F000            	     1M          DC.W    $F000
00:000018AC 6000            	     2M          DC.W    $6000
00:000018AE DD              	     3M          DC.B    (ICC-X)>>2
00:000018AF 26              	     4M          DC.B    38
                            	  1376:          C68     F0F8,50C8,IDBCC,37              DB
00:000018B0 F0F8            	     1M          DC.W    $F0F8
00:000018B2 50C8            	     2M          DC.W    $50C8
00:000018B4 D8              	     3M          DC.B    (IDBCC-X)>>2
00:000018B5 25              	     4M          DC.B    37
                            	  1377:          C68     F0C0,50C0,ISCC,36             S
00:000018B6 F0C0            	     1M          DC.W    $F0C0
00:000018B8 50C0            	     2M          DC.W    $50C0
00:000018BA D5              	     3M          DC.B    (ISCC-X)>>2
00:000018BB 24              	     4M          DC.B    36
                            	  1378:          C68     F100,5100,IQUICK,35           SUBQ
00:000018BC F100            	     1M          DC.W    $F100
00:000018BE 5100            	     2M          DC.W    $5100
00:000018C0 A1              	     3M          DC.B    (IQUICK-X)>>2
00:000018C1 23              	     4M          DC.B    35
                            	  1379:          C68     F100,5000,IQUICK,34           ADDQ
00:000018C2 F100            	     1M          DC.W    $F100
00:000018C4 5000            	     2M          DC.W    $5000
00:000018C6 A1              	     3M          DC.B    (IQUICK-X)>>2
00:000018C7 22              	     4M          DC.B    34
                            	  1380:          C68     F1C0,41C0,FORM6A,33           LEA
00:000018C8 F1C0            	     1M          DC.W    $F1C0
00:000018CA 41C0            	     2M          DC.W    $41C0
00:000018CC 46              	     3M          DC.B    (FORM6A-X)>>2
00:000018CD 21              	     4M          DC.B    33
                            	  1381:          C68     F1C0,4180,FORM6D,32           CHK
00:000018CE F1C0            	     1M          DC.W    $F1C0
00:000018D0 4180            	     2M          DC.W    $4180
00:000018D2 4A              	     3M          DC.B    (FORM6D-X)>>2
00:000018D3 20              	     4M          DC.B    32
                            	  1382:          C68     FFC0,4EC0,FORM11SL,31         JMP
00:000018D4 FFC0            	     1M          DC.W    $FFC0
00:000018D6 4EC0            	     2M          DC.W    $4EC0
00:000018D8 7F              	     3M          DC.B    (FORM11SL-X)>>2
00:000018D9 1F              	     4M          DC.B    31
                            	  1383:          C68     FFC0,4E80,FORM11SL,30         JSR
00:000018DA FFC0            	     1M          DC.W    $FFC0
00:000018DC 4E80            	     2M          DC.W    $4E80
00:000018DE 7F              	     3M          DC.B    (FORM11SL-X)>>2
00:000018DF 1E              	     4M          DC.B    30
                            	  1384:          C68     FFFF,4E77,SCOMMON,29           RTR
00:000018E0 FFFF            	     1M          DC.W    $FFFF
00:000018E2 4E77            	     2M          DC.W    $4E77
00:000018E4 D4              	     3M          DC.B    (SCOMMON-X)>>2
00:000018E5 1D              	     4M          DC.B    29
                            	  1385:          C68     FFFF,4E76,SCOMMON,28           TRAPV
00:000018E6 FFFF            	     1M          DC.W    $FFFF
00:000018E8 4E76            	     2M          DC.W    $4E76
00:000018EA D4              	     3M          DC.B    (SCOMMON-X)>>2
00:000018EB 1C              	     4M          DC.B    28
                            	  1386:          C68     FFFF,4E75,SCOMMON,27           RTS
00:000018EC FFFF            	     1M          DC.W    $FFFF
00:000018EE 4E75            	     2M          DC.W    $4E75
00:000018F0 D4              	     3M          DC.B    (SCOMMON-X)>>2
00:000018F1 1B              	     4M          DC.B    27
                            	  1387:          C68     FFFF,4E73,SCOMMON,26           RTE
00:000018F2 FFFF            	     1M          DC.W    $FFFF
00:000018F4 4E73            	     2M          DC.W    $4E73
00:000018F6 D4              	     3M          DC.B    (SCOMMON-X)>>2
00:000018F7 1A              	     4M          DC.B    26
                            	  1388:          C68     FFFF,4E72,ISTOP,25             STOP
00:000018F8 FFFF            	     1M          DC.W    $FFFF
00:000018FA 4E72            	     2M          DC.W    $4E72
00:000018FC 13              	     3M          DC.B    (ISTOP-X)>>2
00:000018FD 19              	     4M          DC.B    25
                            	  1389:          C68     FFFF,4E71,SCOMMON,24           NOP
00:000018FE FFFF            	     1M          DC.W    $FFFF
00:00001900 4E71            	     2M          DC.W    $4E71
00:00001902 D4              	     3M          DC.B    (SCOMMON-X)>>2
00:00001903 18              	     4M          DC.B    24
                            	  1390:          C68     FFFF,4E70,SCOMMON,23           RESET
00:00001904 FFFF            	     1M          DC.W    $FFFF
00:00001906 4E70            	     2M          DC.W    $4E70
00:00001908 D4              	     3M          DC.B    (SCOMMON-X)>>2
00:00001909 17              	     4M          DC.B    23
                            	  1391:          C68     FFF8,4E68,IMVFUSP,60          MOVE FROM USP
00:0000190A FFF8            	     1M          DC.W    $FFF8
00:0000190C 4E68            	     2M          DC.W    $4E68
00:0000190E AE              	     3M          DC.B    (IMVFUSP-X)>>2
00:0000190F 3C              	     4M          DC.B    60
                            	  1392:          C68     FFF8,4E60,IMVTUSP,60          MOVE TO USP
00:00001910 FFF8            	     1M          DC.W    $FFF8
00:00001912 4E60            	     2M          DC.W    $4E60
00:00001914 B7              	     3M          DC.B    (IMVTUSP-X)>>2
00:00001915 3C              	     4M          DC.B    60
                            	  1393:          C68     FFF8,4E58,FORM5,22            UNLINK
00:00001916 FFF8            	     1M          DC.W    $FFF8
00:00001918 4E58            	     2M          DC.W    $4E58
00:0000191A 45              	     3M          DC.B    (FORM5-X)>>2
00:0000191B 16              	     4M          DC.B    22
                            	  1394:          C68     FFF8,4E50,ILINK,21            LINK
00:0000191C FFF8            	     1M          DC.W    $FFF8
00:0000191E 4E50            	     2M          DC.W    $4E50
00:00001920 36              	     3M          DC.B    (ILINK-X)>>2
00:00001921 15              	     4M          DC.B    21
                            	  1395:          C68     FFF0,4E40,FORM4,20            TRAP
00:00001922 FFF0            	     1M          DC.W    $FFF0
00:00001924 4E40            	     2M          DC.W    $4E40
00:00001926 40              	     3M          DC.B    (FORM4-X)>>2
00:00001927 14              	     4M          DC.B    20
                            	  1396:          C68     FF80,4C80,IMOVEMTR,15         MOVEM FROM REGISTERS
00:00001928 FF80            	     1M          DC.W    $FF80
00:0000192A 4C80            	     2M          DC.W    $4C80
00:0000192C 0C              	     3M          DC.B    (IMOVEMTR-X)>>2
00:0000192D 0F              	     4M          DC.B    15
                            	  1397:          C68     FFC0,4AC0,FORM1A,19           TAS
00:0000192E FFC0            	     1M          DC.W    $FFC0
00:00001930 4AC0            	     2M          DC.W    $4AC0
00:00001932 3D              	     3M          DC.B    (FORM1A-X)>>2
00:00001933 13              	     4M          DC.B    19
                            	  1398:          C68     FF00,4A00,FORM1,18            TST
00:00001934 FF00            	     1M          DC.W    $FF00
00:00001936 4A00            	     2M          DC.W    $4A00
00:00001938 3C              	     3M          DC.B    (FORM1-X)>>2
00:00001939 12              	     4M          DC.B    18
                            	  1399:          C68     FFF8,48C0,FORM3,17            EXT.L
00:0000193A FFF8            	     1M          DC.W    $FFF8
00:0000193C 48C0            	     2M          DC.W    $48C0
00:0000193E 3F              	     3M          DC.B    (FORM3-X)>>2
00:0000193F 11              	     4M          DC.B    17
                            	  1400:          C68     FFF8,4880,FORM3,16            EXT.W
00:00001940 FFF8            	     1M          DC.W    $FFF8
00:00001942 4880            	     2M          DC.W    $4880
00:00001944 3F              	     3M          DC.B    (FORM3-X)>>2
00:00001945 10              	     4M          DC.B    16
                            	  1401:          C68     FF80,4880,IMOVEMFR,15         MOVEA TO REGISTERS
00:00001946 FF80            	     1M          DC.W    $FF80
00:00001948 4880            	     2M          DC.W    $4880
00:0000194A 00              	     3M          DC.B    (IMOVEMFR-X)>>2
00:0000194B 0F              	     4M          DC.B    15
                            	  1402:          C68     FFF8,4840,FORM3,14            SWAP
00:0000194C FFF8            	     1M          DC.W    $FFF8
00:0000194E 4840            	     2M          DC.W    $4840
00:00001950 3F              	     3M          DC.B    (FORM3-X)>>2
00:00001951 0E              	     4M          DC.B    14
                            	  1403:          C68     FFC0,4840,FORM11,13           PEA
00:00001952 FFC0            	     1M          DC.W    $FFC0
00:00001954 4840            	     2M          DC.W    $4840
00:00001956 7C              	     3M          DC.B    (FORM11-X)>>2
00:00001957 0D              	     4M          DC.B    13
                            	  1404:          C68     FFC0,4800,FORM1A,12           NBCD
00:00001958 FFC0            	     1M          DC.W    $FFC0
00:0000195A 4800            	     2M          DC.W    $4800
00:0000195C 3D              	     3M          DC.B    (FORM1A-X)>>2
00:0000195D 0C              	     4M          DC.B    12
                            	  1405:          C68     FFC0,46C0,IMVTSR,59           MOVE TO SR
00:0000195E FFC0            	     1M          DC.W    $FFC0
00:00001960 46C0            	     2M          DC.W    $46C0
00:00001962 B2              	     3M          DC.B    (IMVTSR-X)>>2
00:00001963 3B              	     4M          DC.B    59
                            	  1406:          C68     FF00,4600,FORM1,11            NOT
00:00001964 FF00            	     1M          DC.W    $FF00
00:00001966 4600            	     2M          DC.W    $4600
00:00001968 3C              	     3M          DC.B    (FORM1-X)>>2
00:00001969 0B              	     4M          DC.B    11
                            	  1407:          C68     FFC0,44C0,IMVTCCR,59          MOVE TO CCR
00:0000196A FFC0            	     1M          DC.W    $FFC0
00:0000196C 44C0            	     2M          DC.W    $44C0
00:0000196E BA              	     3M          DC.B    (IMVTCCR-X)>>2
00:0000196F 3B              	     4M          DC.B    59
                            	  1408:          C68     FF00,4400,FORM1,10            NEG
00:00001970 FF00            	     1M          DC.W    $FF00
00:00001972 4400            	     2M          DC.W    $4400
00:00001974 3C              	     3M          DC.B    (FORM1-X)>>2
00:00001975 0A              	     4M          DC.B    10
                            	  1409:          C68     FF00,4200,FORM1,9             CLR
00:00001976 FF00            	     1M          DC.W    $FF00
00:00001978 4200            	     2M          DC.W    $4200
00:0000197A 3C              	     3M          DC.B    (FORM1-X)>>2
00:0000197B 09              	     4M          DC.B    9
                            	  1410:          C68     FFC0,40C0,IMVFSR,59           MOVE.W  FROM  SR
00:0000197C FFC0            	     1M          DC.W    $FFC0
00:0000197E 40C0            	     2M          DC.W    $40C0
00:00001980 AA              	     3M          DC.B    (IMVFSR-X)>>2
00:00001981 3B              	     4M          DC.B    59
                            	  1411:          C68     FF00,4000,FORM1,8             NEGX
00:00001982 FF00            	     1M          DC.W    $FF00
00:00001984 4000            	     2M          DC.W    $4000
00:00001986 3C              	     3M          DC.B    (FORM1-X)>>2
00:00001987 08              	     4M          DC.B    8
                            	  1412:          C68     F000,3000,IMOVE,59            MOVE.W
00:00001988 F000            	     1M          DC.W    $F000
00:0000198A 3000            	     2M          DC.W    $3000
00:0000198C 35              	     3M          DC.B    (IMOVE-X)>>2
00:0000198D 3B              	     4M          DC.B    59
                            	  1413:          C68     F000,2000,IMOVE,60            MOVE.L
00:0000198E F000            	     1M          DC.W    $F000
00:00001990 2000            	     2M          DC.W    $2000
00:00001992 35              	     3M          DC.B    (IMOVE-X)>>2
00:00001993 3C              	     4M          DC.B    60
                            	  1414:          C68     F000,1000,IMOVE,58            MOVE.B
00:00001994 F000            	     1M          DC.W    $F000
00:00001996 1000            	     2M          DC.W    $1000
00:00001998 35              	     3M          DC.B    (IMOVE-X)>>2
00:00001999 3A              	     4M          DC.B    58
                            	  1415:          C68     FF00,0C00,IMMED,6             CMP       #
00:0000199A FF00            	     1M          DC.W    $FF00
00:0000199C 0C00            	     2M          DC.W    $0C00
00:0000199E 18              	     3M          DC.B    (IMMED-X)>>2
00:0000199F 06              	     4M          DC.B    6
                            	  1416:          C68     FF00,0A00,IMMED,5             EOR       #
00:000019A0 FF00            	     1M          DC.W    $FF00
00:000019A2 0A00            	     2M          DC.W    $0A00
00:000019A4 18              	     3M          DC.B    (IMMED-X)>>2
00:000019A5 05              	     4M          DC.B    5
                            	  1417:          C68     FF00,0600,IMMED,4             ADD       #
00:000019A6 FF00            	     1M          DC.W    $FF00
00:000019A8 0600            	     2M          DC.W    $0600
00:000019AA 18              	     3M          DC.B    (IMMED-X)>>2
00:000019AB 04              	     4M          DC.B    4
                            	  1418:          C68     FF00,0400,IMMED,3             SUB       #
00:000019AC FF00            	     1M          DC.W    $FF00
00:000019AE 0400            	     2M          DC.W    $0400
00:000019B0 18              	     3M          DC.B    (IMMED-X)>>2
00:000019B1 03              	     4M          DC.B    3
                            	  1419:          C68     FF00,0200,IMMED,2             AND       #
00:000019B2 FF00            	     1M          DC.W    $FF00
00:000019B4 0200            	     2M          DC.W    $0200
00:000019B6 18              	     3M          DC.B    (IMMED-X)>>2
00:000019B7 02              	     4M          DC.B    2
                            	  1420:          C68     FF00,0000,IMMED,1             OR        #
00:000019B8 FF00            	     1M          DC.W    $FF00
00:000019BA 0000            	     2M          DC.W    $0000
00:000019BC 18              	     3M          DC.B    (IMMED-X)>>2
00:000019BD 01              	     4M          DC.B    1
                            	  1421:          C68     F138,0108,IMOVEP,0            MOVEP
00:000019BE F138            	     1M          DC.W    $F138
00:000019C0 0108            	     2M          DC.W    $0108
00:000019C2 BE              	     3M          DC.B    (IMOVEP-X)>>2
00:000019C3 00              	     4M          DC.B    0
                            	  1422:          C68     FFC0,08C0,ISETS,64            BSET
00:000019C4 FFC0            	     1M          DC.W    $FFC0
00:000019C6 08C0            	     2M          DC.W    $08C0
00:000019C8 F0              	     3M          DC.B    (ISETS-X)>>2
00:000019C9 40              	     4M          DC.B    64
                            	  1423:          C68     FFC0,0880,ISETS,63            BCLR
00:000019CA FFC0            	     1M          DC.W    $FFC0
00:000019CC 0880            	     2M          DC.W    $0880
00:000019CE F0              	     3M          DC.B    (ISETS-X)>>2
00:000019CF 3F              	     4M          DC.B    63
                            	  1424:          C68     FFC0,0840,ISETS,62            BCHG
00:000019D0 FFC0            	     1M          DC.W    $FFC0
00:000019D2 0840            	     2M          DC.W    $0840
00:000019D4 F0              	     3M          DC.B    (ISETS-X)>>2
00:000019D5 3E              	     4M          DC.B    62
                            	  1425:          C68     FFC0,0800,ISETS,61            BTST
00:000019D6 FFC0            	     1M          DC.W    $FFC0
00:000019D8 0800            	     2M          DC.W    $0800
00:000019DA F0              	     3M          DC.B    (ISETS-X)>>2
00:000019DB 3D              	     4M          DC.B    61
                            	  1426:          C68     F1C0,01C0,ISETD,64            BSET
00:000019DC F1C0            	     1M          DC.W    $F1C0
00:000019DE 01C0            	     2M          DC.W    $01C0
00:000019E0 EC              	     3M          DC.B    (ISETD-X)>>2
00:000019E1 40              	     4M          DC.B    64
                            	  1427:          C68     F1C0,0180,ISETD,63            BCLR
00:000019E2 F1C0            	     1M          DC.W    $F1C0
00:000019E4 0180            	     2M          DC.W    $0180
00:000019E6 EC              	     3M          DC.B    (ISETD-X)>>2
00:000019E7 3F              	     4M          DC.B    63
                            	  1428:          C68     F1C0,0140,ISETD,62            BCHG
00:000019E8 F1C0            	     1M          DC.W    $F1C0
00:000019EA 0140            	     2M          DC.W    $0140
00:000019EC EC              	     3M          DC.B    (ISETD-X)>>2
00:000019ED 3E              	     4M          DC.B    62
                            	  1429:          C68     F1C0,0100,ISETD,61            BTST
00:000019EE F1C0            	     1M          DC.W    $F1C0
00:000019F0 0100            	     2M          DC.W    $0100
00:000019F2 EC              	     3M          DC.B    (ISETD-X)>>2
00:000019F3 3D              	     4M          DC.B    61
                            	  1430: TBLE     DS      0
                            	  1431: 
                            	  1432: N68      MACRO
                            	  1433:          DC.B    '\1',128+'\2'        \1\2
                            	  1434:          ENDM
                            	  1435: 
                            	  1436: OPCTBL   DS      0
                            	  1437:          N68     MOVE,P    0
00:000019F4 4D4F5645        	     1M          DC.B    'MOVE',128+'P'        MOVEP
00:000019F8 D0
                            	  1438:          N68     O,R       1
00:000019F9 4F              	     1M          DC.B    'O',128+'R'        OR
00:000019FA D2
                            	  1439:          N68     AN,D      2
00:000019FB 414E            	     1M          DC.B    'AN',128+'D'        AND
00:000019FD C4
                            	  1440:          N68     SU,B      3
00:000019FE 5355            	     1M          DC.B    'SU',128+'B'        SUB
00:00001A00 C2
                            	  1441:          N68     AD,D      4
00:00001A01 4144            	     1M          DC.B    'AD',128+'D'        ADD
00:00001A03 C4
                            	  1442:          N68     EO,R      5
00:00001A04 454F            	     1M          DC.B    'EO',128+'R'        EOR
00:00001A06 D2
                            	  1443:          N68     CM,P      6
00:00001A07 434D            	     1M          DC.B    'CM',128+'P'        CMP
00:00001A09 D0
                            	  1444:          N68     MOV,E     7
00:00001A0A 4D4F56          	     1M          DC.B    'MOV',128+'E'        MOVE
00:00001A0D C5
                            	  1445:          N68     NEG,X     8
00:00001A0E 4E4547          	     1M          DC.B    'NEG',128+'X'        NEGX
00:00001A11 D8
                            	  1446:          N68     CL,R      9
00:00001A12 434C            	     1M          DC.B    'CL',128+'R'        CLR
00:00001A14 D2
                            	  1447:          N68     NE,G      10
00:00001A15 4E45            	     1M          DC.B    'NE',128+'G'        NEG
00:00001A17 C7
                            	  1448:          N68     NO,T      11
00:00001A18 4E4F            	     1M          DC.B    'NO',128+'T'        NOT
00:00001A1A D4
                            	  1449:          N68     NBC,D     12
00:00001A1B 4E4243          	     1M          DC.B    'NBC',128+'D'        NBCD
00:00001A1E C4
                            	  1450:          N68     PEA.,L    13
00:00001A1F 5045412E        	     1M          DC.B    'PEA.',128+'L'        PEA.L
00:00001A23 CC
                            	  1451:          N68     SWAP.,W   14
00:00001A24 535741502E      	     1M          DC.B    'SWAP.',128+'W'        SWAP.W
00:00001A29 D7
                            	  1452:          N68     MOVE,M    15
00:00001A2A 4D4F5645        	     1M          DC.B    'MOVE',128+'M'        MOVEM
00:00001A2E CD
                            	  1453:          N68     EXT.,W    16
00:00001A2F 4558542E        	     1M          DC.B    'EXT.',128+'W'        EXT.W
00:00001A33 D7
                            	  1454:          N68     EXT.,L    17
00:00001A34 4558542E        	     1M          DC.B    'EXT.',128+'L'        EXT.L
00:00001A38 CC
                            	  1455:          N68     TS,T      18
00:00001A39 5453            	     1M          DC.B    'TS',128+'T'        TST
00:00001A3B D4
                            	  1456:          N68     TAS.,B    19
00:00001A3C 5441532E        	     1M          DC.B    'TAS.',128+'B'        TAS.B
00:00001A40 C2
                            	  1457:          N68     TRA,P     20
00:00001A41 545241          	     1M          DC.B    'TRA',128+'P'        TRAP
00:00001A44 D0
                            	  1458:          N68     LIN,K     21
00:00001A45 4C494E          	     1M          DC.B    'LIN',128+'K'        LINK
00:00001A48 CB
                            	  1459:          N68     UNL,K     22
00:00001A49 554E4C          	     1M          DC.B    'UNL',128+'K'        UNLK
00:00001A4C CB
                            	  1460:          N68     RESE,T    23
00:00001A4D 52455345        	     1M          DC.B    'RESE',128+'T'        RESET
00:00001A51 D4
                            	  1461:          N68     NO,P      24
00:00001A52 4E4F            	     1M          DC.B    'NO',128+'P'        NOP
00:00001A54 D0
                            	  1462:          N68     STO,P     25
00:00001A55 53544F          	     1M          DC.B    'STO',128+'P'        STOP
00:00001A58 D0
                            	  1463:          N68     RT,E      26
00:00001A59 5254            	     1M          DC.B    'RT',128+'E'        RTE
00:00001A5B C5
                            	  1464:          N68     RT,S      27
00:00001A5C 5254            	     1M          DC.B    'RT',128+'S'        RTS
00:00001A5E D3
                            	  1465:          N68     TRAP,V    28
00:00001A5F 54524150        	     1M          DC.B    'TRAP',128+'V'        TRAPV
00:00001A63 D6
                            	  1466:          N68     RT,R      29
00:00001A64 5254            	     1M          DC.B    'RT',128+'R'        RTR
00:00001A66 D2
                            	  1467:          N68     JS,R      30
00:00001A67 4A53            	     1M          DC.B    'JS',128+'R'        JSR
00:00001A69 D2
                            	  1468:          N68     JM,P      31
00:00001A6A 4A4D            	     1M          DC.B    'JM',128+'P'        JMP
00:00001A6C D0
                            	  1469:          N68     CHK.,W    32
00:00001A6D 43484B2E        	     1M          DC.B    'CHK.',128+'W'        CHK.W
00:00001A71 D7
                            	  1470:          N68     LEA.,L    33
00:00001A72 4C45412E        	     1M          DC.B    'LEA.',128+'L'        LEA.L
00:00001A76 CC
                            	  1471:          N68     ADD,Q     34
00:00001A77 414444          	     1M          DC.B    'ADD',128+'Q'        ADDQ
00:00001A7A D1
                            	  1472:          N68     SUB,Q     35
00:00001A7B 535542          	     1M          DC.B    'SUB',128+'Q'        SUBQ
00:00001A7E D1
00:00001A7F D3              	  1473:          DC.B    128+'S'   36
                            	  1474:          N68     D,B       37
00:00001A80 44              	     1M          DC.B    'D',128+'B'        DB
00:00001A81 C2
00:00001A82 C2              	  1475:          DC.B    128+'B'   38
                            	  1476:          N68     MOVEQ.,L  .....39
00:00001A83 4D4F5645512E    	     1M          DC.B    'MOVEQ.',128+'L'        MOVEQ.L
00:00001A89 CC
                            	  1477:          N68     O,R       40
00:00001A8A 4F              	     1M          DC.B    'O',128+'R'        OR
00:00001A8B D2
                            	  1478:          N68     DIVU.,W   41
00:00001A8C 444956552E      	     1M          DC.B    'DIVU.',128+'W'        DIVU.W
00:00001A91 D7
                            	  1479:          N68     DIVS.,W   42
00:00001A92 444956532E      	     1M          DC.B    'DIVS.',128+'W'        DIVS.W
00:00001A97 D7
                            	  1480:          N68     SBC,D     43
00:00001A98 534243          	     1M          DC.B    'SBC',128+'D'        SBCD
00:00001A9B C4
                            	  1481:          N68     SU,B      44
00:00001A9C 5355            	     1M          DC.B    'SU',128+'B'        SUB
00:00001A9E C2
                            	  1482:          N68     SUB,X     45
00:00001A9F 535542          	     1M          DC.B    'SUB',128+'X'        SUBX
00:00001AA2 D8
                            	  1483:          N68     CMP,M     46
00:00001AA3 434D50          	     1M          DC.B    'CMP',128+'M'        CMPM
00:00001AA6 CD
                            	  1484:          N68     MULU.,W   47
00:00001AA7 4D554C552E      	     1M          DC.B    'MULU.',128+'W'        MULU.W
00:00001AAC D7
                            	  1485:          N68     MULS.,W   48
00:00001AAD 4D554C532E      	     1M          DC.B    'MULS.',128+'W'        MULS.W
00:00001AB2 D7
                            	  1486:          N68     ABC,D    49
00:00001AB3 414243          	     1M          DC.B    'ABC',128+'D'        ABCD
00:00001AB6 C4
                            	  1487:          N68     EX,G      50
00:00001AB7 4558            	     1M          DC.B    'EX',128+'G'        EXG
00:00001AB9 C7
                            	  1488:          N68     BS,R      .....51
00:00001ABA 4253            	     1M          DC.B    'BS',128+'R'        BSR
00:00001ABC D2
                            	  1489:          N68     NUL,L     .....52
00:00001ABD 4E554C          	     1M          DC.B    'NUL',128+'L'        NULL
00:00001AC0 CC
                            	  1490:          N68     ADD,X     53
00:00001AC1 414444          	     1M          DC.B    'ADD',128+'X'        ADDX
00:00001AC4 D8
                            	  1491:          N68     A,S       54
00:00001AC5 41              	     1M          DC.B    'A',128+'S'        AS
00:00001AC6 D3
                            	  1492:          N68     L,S       55
00:00001AC7 4C              	     1M          DC.B    'L',128+'S'        LS
00:00001AC8 D3
                            	  1493:          N68     R,O       56
00:00001AC9 52              	     1M          DC.B    'R',128+'O'        RO
00:00001ACA CF
                            	  1494:          N68     RO,X      57
00:00001ACB 524F            	     1M          DC.B    'RO',128+'X'        ROX
00:00001ACD D8
                            	  1495:          N68     MOVE.,B   58
00:00001ACE 4D4F56452E      	     1M          DC.B    'MOVE.',128+'B'        MOVE.B
00:00001AD3 C2
                            	  1496:          N68     MOVE.,W   59
00:00001AD4 4D4F56452E      	     1M          DC.B    'MOVE.',128+'W'        MOVE.W
00:00001AD9 D7
                            	  1497:          N68     MOVE.,L   60
00:00001ADA 4D4F56452E      	     1M          DC.B    'MOVE.',128+'L'        MOVE.L
00:00001ADF CC
                            	  1498:          N68     BTS,T     61
00:00001AE0 425453          	     1M          DC.B    'BTS',128+'T'        BTST
00:00001AE3 D4
                            	  1499:          N68     BCH,G     62
00:00001AE4 424348          	     1M          DC.B    'BCH',128+'G'        BCHG
00:00001AE7 C7
                            	  1500:          N68     BCL,R     63
00:00001AE8 42434C          	     1M          DC.B    'BCL',128+'R'        BCLR
00:00001AEB D2
                            	  1501:          N68     BSE,T     64
00:00001AEC 425345          	     1M          DC.B    'BSE',128+'T'        BSET
00:00001AEF D4
                            	  1502:          N68     BR,A      65
00:00001AF0 4252            	     1M          DC.B    'BR',128+'A'        BRA
00:00001AF2 C1
                            	  1503: 
00:00001AF3 00              	  1504:          DC.B    0              PAD BYTE
                            	  1505: 
                            	  1506: *    CONVERT BINARY TO DECIMAL  REG D0 PUT IN (A6) BUFFER AS ASCII
                            	  1507: *
00:00001AF4 48E77B00        	  1508: HEX2DEC  MOVEM.L   D1-D4/D6-D7,-(A7)   SAVE REGISTERS
00:00001AF8 2E00            	  1509:          MOVE.L D0,D7  SAVE IT HERE
00:00001AFA 6A08            	  1510:          BPL.S HX2DC
00:00001AFC 4487            	  1511:          NEG.L D7  CHANGE TO POSITIVE
00:00001AFE 6B4E            	  1512:          BMI.S     HX2DC57   SPECIAL CASE (-0)
00:00001B00 1CFC002D        	  1513:          MOVE.B #'-',(A6)+  PUT IN NEG SIGN
00:00001B04 4244            	  1514: HX2DC    CLR.W     D4        FOR ZERO SURPRESS
00:00001B06 7C0A            	  1515:          MOVE.L #10,D6  COUNTER
00:00001B08 7401            	  1516: HX2DC0   MOVE.L #1,D2  VALUE TO SUB
00:00001B0A 2206            	  1517:          MOVE.L D6,D1  COUNTER
00:00001B0C 5381            	  1518:          SUB.L #1,D1  ADJUST - FORM POWER OF TEN
00:00001B0E 671A            	  1519:          BEQ.S HX2DC2  IF POWER IS ZERO
00:00001B10 3602            	  1520: HX2DC1   MOVE.W D2,D3  D3=LOWER WORD
00:00001B12 C6FC000A        	  1521:          MULU #10,D3
00:00001B16 4842            	  1522:          SWAP D2   D2=UPPER WORD
00:00001B18 C4FC000A        	  1523:          MULU #10,D2
00:00001B1C 4843            	  1524:          SWAP D3   ADD UPPER TO UPPER
00:00001B1E D443            	  1525:          ADD.W D3,D2
00:00001B20 4842            	  1526:          SWAP D2  PUT UPPER IN UPPER
00:00001B22 4843            	  1527:          SWAP D3  PUT LOWER IN LOWER
00:00001B24 3403            	  1528:          MOVE.W D3,D2  D2=UPPER & LOWER
00:00001B26 5381            	  1529:          SUB.L #1,D1
00:00001B28 66E6            	  1530:          BNE HX2DC1
00:00001B2A 7000            	  1531: HX2DC2   CLR.L D0  HOLDS SUB AMT
00:00001B2C BE82            	  1532: HX2DC22  CMP.L D2,D7
00:00001B2E 6D06            	  1533:          BLT.S HX2DC3  IF NO MORE SUB POSSIBLE
00:00001B30 5280            	  1534:          ADD.L #1,D0  BUMP SUBS
00:00001B32 9E82            	  1535:          SUB.L D2,D7  COUNT DOWN BY POWERS OF TEN
00:00001B34 60F6            	  1536:          BRA.S HX2DC22  DO MORE
00:00001B36 4A00            	  1537: HX2DC3   TST.B D0  ANY VALUE?
00:00001B38 6604            	  1538:          BNE.S HX2DC4
00:00001B3A 4A44            	  1539:          TST.W     D4        ZERO SURPRESS
00:00001B3C 6708            	  1540:          BEQ.S HX2DC5
00:00001B3E D03C0030        	  1541: HX2DC4   ADD.B #$30,D0  BINARY TO ASCII
00:00001B42 1CC0            	  1542:          MOVE.B D0,(A6)+  PUT IN BUFFER
00:00001B44 1800            	  1543:          MOVE.B    D0,D4     MARK AS NON ZERO SURPRESS
00:00001B46 5386            	  1544: HX2DC5   SUB.L #1,D6     NEXT POWER
00:00001B48 66BE            	  1545:          BNE HX2DC0
00:00001B4A 4A44            	  1546:          TST.W     D4        SEE IF ANYTHING PRINTED
00:00001B4C 6604            	  1547:          BNE.S HX2DC6
00:00001B4E 1CFC0030        	  1548: HX2DC57  MOVE.B #'0',(A6)+  PRINT AT LEST A ZERO
00:00001B52 4CDF00DE        	  1549: HX2DC6   MOVEM.L   (A7)+,D1-D4/D6-D7   RESTORE REGISTERS
00:00001B56 4E75            	  1550:          RTS  END OF ROUTINE
                            	  1551: 
                            	  1552: *
                            	  1553: *  PRINT HEX ROUTINES
                            	  1554: *
                            	  1555: *
                            	  1556: * PRINT 8 HEX CHARACTERS
                            	  1557: *
                            	  1558: *  D0,D1,D2 DESTROYED
                            	  1559: *
00:00001B58 4840            	  1560: PNT8HX   SWAP D0  FLIP REG HALVES
00:00001B5A 610A            	  1561:          BSR.S  PNT4HX  DO TOP WORD
00:00001B5C 4840            	  1562:          SWAP D0  NOW DO LOWER WORD
00:00001B5E 6006            	  1563:          BRA.S PNT4HX
                            	  1564: * PRINT 6 HEX CHARACTERS
00:00001B60 4840            	  1565: PNT6HX   SWAP D0  FLIP REGISTER HALVES
00:00001B62 610A            	  1566:          BSR.S PNT2HX
00:00001B64 4840            	  1567:          SWAP D0  FLIP BACK REG HALVES
                            	  1568: * PRINT 4 HEX CHARACTERS IN D0.W
00:00001B66 3200            	  1569: PNT4HX   MOVE.W D0,D1  SAVE IN TEMP
00:00001B68 E058            	  1570:          ROR.W  #8,D0  GET BITS 15-8 INTO LOWER BYTE
00:00001B6A 6102            	  1571:          BSR.S  PNT2HX  PRINT IT
00:00001B6C 3001            	  1572:          MOVE.W D1,D0  PULL IT BACK
                            	  1573: * PRINT 2 HEX CHARACTERS IN D0.B
00:00001B6E 3400            	  1574: PNT2HX   MOVE.W D0,D2  SAVE IN TEMP REG
00:00001B70 E850            	  1575:          ROXR.W #4,D0  FORM UPPER NIBBLE
00:00001B72 6102            	  1576:          BSR.S PUTHEX  PUT ASCII INTO PRINT BUFFER
00:00001B74 3002            	  1577:          MOVE.W D2,D0  GET BACK FROM TEMP
                            	  1578: * CONVERT D0.NIBBLE TO HEX & PUT IT IN PRINT BUFFER
                            	  1579: *
00:00001B76 C03C000F        	  1580: PUTHEX   AND.B #$0F,D0  SAVE LOWER NIBBLE
00:00001B7A 803C0030        	  1581:          OR.B #$30,D0  CONVERT TO ASCII
00:00001B7E B03C0039        	  1582:          CMP.B #$39,D0   SEE IF IT IS>9
00:00001B82 6F02            	  1583:          BLE.S SAVHEX
00:00001B84 5E40            	  1584:          ADD #7,D0  ADD TO MAKE 10=>A
00:00001B86 1CC0            	  1585: SAVHEX   MOVE.B D0,(A6)+ PUT IT IN PRINT BUFFER
00:00001B88 4E75            	  1586:          RTS
                            	  1587:          
                            	  1588: * FORMAT RELATIVE ADDRESS  AAAAAA+Rn
                            	  1589: *        ENTER     D0 = VALUE
                            	  1590: *                  A6 = STORE POINTER
                            	  1591: *
00:00001B8A 48E74780        	  1592: FRELADDR MOVEM.L   D1/D5-D7/A0,-(A7)
00:00001B8E 41F9000FFE7A    	  1593:          LEA       OFFSET,A0
00:00001B94 7EFF            	  1594:          MOVE.L    #-1,D7              D7 = DIFF. BEST FIT
00:00001B96 7C00            	  1595:          CLR.L     D6                  D6 = OFFSET POSITION
                            	  1596: 
00:00001B98 2200            	  1597: FREL10   MOVE.L    D0,D1
00:00001B9A 4A90            	  1598:          TST.L     (A0)
00:00001B9C 670C            	  1599:          BEQ.S     FREL15              ZERO OFFSET
00:00001B9E 9290            	  1600:          SUB.L     (A0),D1             D1 = DIFF.
00:00001BA0 6B08            	  1601:          BMI.S     FREL15              NO FIT
                            	  1602: 
00:00001BA2 B287            	  1603:          CMP.L     D7,D1
00:00001BA4 6404            	  1604:          BCC.S     FREL15              OLD FIT BETTER
                            	  1605: 
00:00001BA6 2E01            	  1606:          MOVE.L    D1,D7               D7 = NEW BEST FIT
00:00001BA8 2A06            	  1607:          MOVE.L    D6,D5               D5 = POSITION
                            	  1608: 
00:00001BAA 5888            	  1609: FREL15   ADD.L     #4,A0
00:00001BAC 5286            	  1610:          ADD.L     #1,D6
00:00001BAE BC7C0008        	  1611:          CMP.W     #8,D6               .                             2,0
00:00001BB2 66E4            	  1612:          BNE       FREL10              MORE OFFSETS TO CHECK
                            	  1613: 
00:00001BB4 4A87            	  1614:          TST.L     D7
00:00001BB6 6B1E            	  1615:          BMI.S     FREL25              NO FIT
00:00001BB8 4A46            	  1616:          TST       D6
00:00001BBA 6608            	  1617:          BNE.S     FREL20
00:00001BBC 4AB9000FFE7A    	  1618:          TST.L     OFFSET
00:00001BC2 6712            	  1619:          BEQ.S     FREL25              R0 = 000000; NO FIT
                            	  1620: 
00:00001BC4 2007            	  1621: FREL20   MOVE.L    D7,D0
00:00001BC6 6198            	  1622:          BSR       PNT6HX              FORMAT OFFSET
00:00001BC8 1CFC002B        	  1623:          MOVE.B    #'+',(A6)+          +
00:00001BCC 1CFC0052        	  1624:          MOVE.B    #'R',(A6)+          R
00:00001BD0 DA3C0030        	  1625:          ADD.B     #'0',D5             MAKE ASCII
00:00001BD4 600A            	  1626:          BRA.S     FREL30
                            	  1627: 
00:00001BD6 6188            	  1628: FREL25   BSR       PNT6HX              FORMAT ADDRESS AS IS
00:00001BD8 1A3C0020        	  1629:          MOVE.B    #' ',D5             .                             2,0
00:00001BDC 1CC5            	  1630:          MOVE.B    D5,(A6)+            THREE SPACES FOR ALIGNMENT    2,0
00:00001BDE 1CC5            	  1631:          MOVE.B    D5,(A6)+            .                             2,0
00:00001BE0 1CC5            	  1632: FREL30   MOVE.B    D5,(A6)+            .                             2,0
                            	  1633: 
00:00001BE2 4CDF01E2        	  1634:          MOVEM.L   (A7)+,D1/D5-D7/A0   .                             2,0
00:00001BE6 4E75            	  1635:          RTS
                            	  1636: 

Source: "monitor.asm"
                            	  1424:    
                            	  1425: FLASHUTIL_START
                            	  1426:   ;SECTION UTIL
00:00001BE8 2E7C0010000049F9	  1427:   INCBIN "flash-util.bin"
00:00001BF0 000801BA6100019C
00:00001BF8 49F9000801D56100
00:00001C00 0192617061000184
00:00001C08 61000156123C0001
00:00001C10 B001671849F90008
00:00001C18 01F3610001761001
00:00001C20 610001686100013A
00:00001C28 6000010E49F90008
00:00001C30 01E76100015E6156
00:00001C38 6100015061000122
00:00001C40 123C00A4B0016718
00:00001C48 49F9000801F36100
00:00001C50 0142100161000134
00:00001C58 61000106600000DA
00:00001C60 614E6100008E49F9
00:00001C68 0008025D61000124
00:00001C70 600000C611FC00AA
00:00001C78 055511FC005502AA
00:00001C80 11FC009005551038
00:00001C88 0000611C4E7511FC
00:00001C90 00AA055511FC0055
00:00001C98 02AA11FC00900555
00:00001CA0 1038000161024E75
00:00001CA8 11FC00F000004E75
00:00001CB0 49F9000802256100
00:00001CB8 00DA11FC00AA0555
00:00001CC0 11FC005502AA11FC
00:00001CC8 0080055511FC00AA
00:00001CD0 055511FC005502AA
00:00001CD8 11FC0010055599CC
00:00001CE0 0814000767FA49F9
00:00001CE8 0008021D610000A4
00:00001CF0 4E7549F90008023F
00:00001CF8 61000098163C002E
00:00001D00 11FC00AA055511FC
00:00001D08 005502AA11FC00A0
00:00001D10 055514D810380000
00:00001D18 B038000066F65204
00:00001D20 670EB3C866DA49F9
00:00001D28 0008021D61644E75
00:00001D30 13C30007A00060EA
00:00001D38 207800044ED013FC
00:00001D40 00FD0007E0000839
00:00001D48 00000007D00066EE
00:00001D50 13C00007A00013FC
00:00001D58 00FF0007E0004E75
00:00001D60 2F00103C000D61D6
00:00001D68 103C000A61D0201F
00:00001D70 4E751F00C03C000F
00:00001D78 D03C0030B03C0039
00:00001D80 63025E0061B8101F
00:00001D88 4E75E81861E4E918
00:00001D90 60E0161C4A036708
00:00001D98 13C30007A00060F2
00:00001DA0 4E75436865636B69
00:00001DA8 6E6720466C617368
00:00001DB0 20524F4D2049442E
00:00001DB8 2E2E0D0A004D616E
00:00001DC0 7566616374757265
00:00001DC8 722049443A200044
00:00001DD0 6576696365204944
00:00001DD8 3A200041424F5254
00:00001DE0 202D20494420646F
00:00001DE8 6573206E6F74206D
00:00001DF0 6174636820657870
00:00001DF8 6563746564207661
00:00001E00 6C75652000646F6E
00:00001E08 652E0D0A00457261
00:00001E10 73696E6720466C61
00:00001E18 736820524F4D2063
00:00001E20 6869702E2E2E0050
00:00001E28 726F6772616D6D69
00:00001E30 6E6720466C617368
00:00001E38 20524F4D20636869
00:00001E40 702E2E2E00526562
00:00001E48 6F6F74696E672E2E
00:00001E50 2E0D0A00
                            	  1428:   ;SECTION MAIN
                            	  1429: FLASHUTIL_END
                            	  1430: 
                            	  1431: ;----------------------- STRING CONSTANTS -------------------------------------
                            	  1432:   IFEQ LOADADDR
00:00001E54 0D              	  1433: TITLE1 dc.b 13,10,'zBug(ROM) for 68Katy (press ? for help)',13,10,0
00:00001E55 0A
00:00001E56 7A42756728524F4D
00:00001E5E 2920666F72203638
00:00001E66 4B61747920287072
00:00001E6E 657373203F20666F
00:00001E76 722068656C7029
00:00001E7D 0D
00:00001E7E 0A
00:00001E7F 00
                            	  1434:   ENDC
                            	  1435:   IFNE LOADADDR,0
                            	  1436: TITLE1 dc.b 13,10,'zBug(RAM) for 68Katy (press ? for help)',13,10,0
                            	  1437:   ENDC
                            	  1438: 
00:00001E80 426F6F742066726F	  1439: BRESET dc.b 'Boot from RESET vector',13,10,0
00:00001E88 6D20524553455420
00:00001E90 766563746F72
00:00001E96 0D
00:00001E97 0A
00:00001E98 00
00:00001E99 4A756D7020746F20	  1440: BZERO dc.b 'Jump to 0',13,10,0
00:00001EA1 30
00:00001EA2 0D
00:00001EA3 0A
00:00001EA4 00
                            	  1441: 
00:00001EA5 3E              	  1442: PROMPT dc.b '>',0
00:00001EA6 00
                            	  1443: 
00:00001EA7 6C656172206D656D	  1444: CLEAR  dc.b 'lear memory with 0x0000',0
00:00001EAF 6F72792077697468
00:00001EB7 20307830303030
00:00001EBE 00
00:00001EBF 696C6C206D656D6F	  1445: FILL   dc.b 'ill memory with 0xFFFF',0 
00:00001EC7 7279207769746820
00:00001ECF 307846464646
00:00001ED5 00
00:00001ED6 0D              	  1446: STARTA dc.b 13,10,10,'start address=',0
00:00001ED7 0A
00:00001ED8 0A
00:00001ED9 7374617274206164
00:00001EE1 64726573733D
00:00001EE7 00
00:00001EE8 0D              	  1447: STOP   dc.b 13,10,'stop  address=',0
00:00001EE9 0A
00:00001EEA 73746F7020206164
00:00001EF2 64726573733D
00:00001EF8 00
00:00001EF9 0D              	  1448: DONE   dc.b 13,10,'done...',0
00:00001EFA 0A
00:00001EFB 646F6E652E2E2E
00:00001F02 00
                            	  1449: 
00:00001F03 646974206D656D6F	  1450: EDIT1  dc.b 'dit memory (quit: SPACE BAR, next address: ENTER)',0
00:00001F0B 7279202871756974
00:00001F13 3A20535041434520
00:00001F1B 4241522C206E6578
00:00001F23 7420616464726573
00:00001F2B 733A20454E544552
00:00001F33 29
00:00001F34 00
00:00001F35 0D              	  1451: EDIT   dc.b 13,10,10,'Address=',0
00:00001F36 0A
00:00001F37 0A
00:00001F38 416464726573733D
00:00001F40 00
00:00001F41 2020726F6D      	  1452: ROM    dc.b '  rom',0
00:00001F46 00
                            	  1453: 
00:00001F47 6F696E7465723D  	  1454: NEW    dc.b 'ointer=',0
00:00001F4E 00
                            	  1455: 
00:00001F4F 706461746520466C	  1456: UPDATE dc.b 'pdate Flash ROM (max size 480K)',13,10,0
00:00001F57 61736820524F4D20
00:00001F5F 286D61782073697A
00:00001F67 65203438304B29
00:00001F6E 0D
00:00001F6F 0A
00:00001F70 00
                            	  1457: 
00:00001F71 65782064756D7020	  1458: HEX    dc.b 'ex dump memory',13,10,10
00:00001F79 6D656D6F7279
00:00001F7F 0D
00:00001F80 0A
00:00001F81 0A
00:00001F82 4144445245535320	  1459:        dc.b 'ADDRESS  0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F',0
00:00001F8A 2030202031202032
00:00001F92 2020332020342020
00:00001F9A 3520203620203720
00:00001FA2 2038202039202041
00:00001FAA 2020422020432020
00:00001FB2 44202045202046
00:00001FB9 00
                            	  1460: 
00:00001FBA 6F6164204D6F746F	  1461: LOAD   dc.b 'oad Motorola S-record. Accepts S2 and S8. (cancel: ESC)',13,10,0
00:00001FC2 726F6C6120532D72
00:00001FCA 65636F72642E2041
00:00001FD2 6363657074732053
00:00001FDA 3220616E64205338
00:00001FE2 2E202863616E6365
00:00001FEA 6C3A2045534329
00:00001FF1 0D
00:00001FF2 0A
00:00001FF3 00
                            	  1462: 
00:00001FF4 204C6F6164206269	  1463: LOADB  dc.b ' Load binary data',13,10,0
00:00001FFC 6E61727920646174
00:00002004 61
00:00002005 0D
00:00002006 0A
00:00002007 00
00:00002008 526561647920746F	  1464: LOADB1 dc.b 'Ready to receive. Terminates after inactivity. (cancel: ESC)', 13,10,0
00:00002010 2072656365697665
00:00002018 2E205465726D696E
00:00002020 6174657320616674
00:00002028 657220696E616374
00:00002030 69766974792E2028
00:00002038 63616E63656C3A20
00:00002040 45534329
00:00002044 0D
00:00002045 0A
00:00002046 00
                            	  1465: 
00:00002047 206279746573206C	  1466: NUMBER dc.b ' bytes loaded, ',0
00:0000204F 6F616465642C20
00:00002056 00
00:00002057 206572726F7273  	  1467: ERROR  dc.b ' errors',13,10,0
00:0000205E 0D
00:0000205F 0A
00:00002060 00
                            	  1468: 
00:00002061 756D7020746F2061	  1469: JUMP_TO dc.b 'ump to address ',0 
00:00002069 64647265737320
00:00002070 00
                            	  1470: 
00:00002071 6567697374657220	  1471: REGISTER_DISP dc.b 'egister display (A7 = user stack pointer)',0
00:00002079 646973706C617920
00:00002081 284137203D207573
00:00002089 657220737461636B
00:00002091 20706F696E746572
00:00002099 29
00:0000209A 00
                            	  1472: 
00:0000209B 6973617373656D62	  1473: DIS    dc.b 'isassemble machine code',13,10,0
00:000020A3 6C65206D61636869
00:000020AB 6E6520636F6465
00:000020B2 0D
00:000020B3 0A
00:000020B4 00
                            	  1474: 
                            	  1475: ;UPLOAD1 dc.b 'pload binary image, hit any key to begin ',0
                            	  1476: ;STRING1 dc.b '  dc.l ',0
                            	  1477: 
                            	  1478:   IFEQ LOADADDR
00:000020B5 0D              	  1479: ABOUTZBUG dc.b 13,10,'zBug(ROM) for 68Katy 20150113 by W. Sirichote, S. Chamberlin',13,10,0
00:000020B6 0A
00:000020B7 7A42756728524F4D
00:000020BF 2920666F72203638
00:000020C7 4B61747920323031
00:000020CF 3530313133206279
00:000020D7 20572E2053697269
00:000020DF 63686F74652C2053
00:000020E7 2E204368616D6265
00:000020EF 726C696E
00:000020F3 0D
00:000020F4 0A
00:000020F5 00
                            	  1480:   ENDC
                            	  1481:   IFNE LOADADDR,0
                            	  1482: ABOUTZBUG dc.b 13,10,'zBug(RAM) for 68Katy 20150113 by W. Sirichote, S. Chamberlin',13,10,0
                            	  1483:   ENDC
                            	  1484: 
00:000020F6 5573696E6720636F	  1485: MEMUSE1 dc.b 'Using code from ',0
00:000020FE 64652066726F6D20
00:00002106 00
00:00002107 2C20646174612061	  1486: MEMUSE2 dc.b ', data above ',0
00:0000210F 626F766520
00:00002114 00
                            	  1487: 
00:00002115 7261636520696E73	  1488: TRACE_MSG dc.b 'race instruction',0
00:0000211D 7472756374696F6E
00:00002125 00
                            	  1489: 
00:00002126 7461636B20646973	  1490: VIEW      dc.b 'tack display, shows 16-word deep',13,10,0
00:0000212E 706C61792C207368
00:00002136 6F77732031362D77
00:0000213E 6F72642064656570
00:00002146 0D
00:00002147 0A
00:00002148 00
                            	  1491: 
00:00002149 0D              	  1492: ILLEGAL_MSG dc.b 13,10,'Illegal instruction!',0
00:0000214A 0A
00:0000214B 496C6C6567616C20
00:00002153 696E737472756374
00:0000215B 696F6E21
00:0000215F 00
00:00002160 0D              	  1493: DEFAULT_MSG dc.b 13,10,'Exception has no handler!', 0
00:00002161 0A
00:00002162 457863657074696F
00:0000216A 6E20686173206E6F
00:00002172 2068616E646C6572
00:0000217A 21
00:0000217B 00
00:0000217C 0D              	  1494: ADDRERR_MSG dc.b 13,10,'Address error!', 0
00:0000217D 0A
00:0000217E 4164647265737320
00:00002186 6572726F7221
00:0000218C 00
00:0000218D 0D              	  1495: ZERODIV_MSG dc.b 13,10,'Division by zero!', 0
00:0000218E 0A
00:0000218F 4469766973696F6E
00:00002197 206279207A65726F
00:0000219F 21
00:000021A0 00
00:000021A1 0D              	  1496: PRIVVIOL_MSG dc.b 13,10,'Privilege violation!', 0
00:000021A2 0A
00:000021A3 50726976696C6567
00:000021AB 652076696F6C6174
00:000021B3 696F6E21
00:000021B7 00
00:000021B8 0D              	  1497: LINEA_MSG dc.b 13,10,'Line A emulator!', 0
00:000021B9 0A
00:000021BA 4C696E6520412065
00:000021C2 6D756C61746F7221
00:000021CA 00
00:000021CB 0D              	  1498: LINEF_MSG dc.b 13,10,'Line F emulator!', 0
00:000021CC 0A
00:000021CD 4C696E6520462065
00:000021D5 6D756C61746F7221
00:000021DD 00
                            	  1499: 
00:000021DE 544F532D2D2D3E  	  1500: TOP_OF_STACK dc.b 'TOS--->',0
00:000021E5 00
00:000021E6 20202020202020  	  1501: BLANK_BLOCK  dc.b '       ',0
00:000021ED 00
                            	  1502: 
00:000021EE 50433D          	  1503: PC_REG dc.b 'PC=',0
00:000021F1 00
00:000021F2 53523D          	  1504: SR_REG dc.b 'SR=',0
00:000021F5 00
                            	  1505: 
00:000021F6 433D            	  1506: CARRY_FLAG dc.b 'C=',0
00:000021F8 00
00:000021F9 563D            	  1507: V_FLAG     dc.b 'V=',0
00:000021FB 00
00:000021FC 5A3D            	  1508: Z_FLAG     dc.b 'Z=',0
00:000021FE 00
00:000021FF 4E3D            	  1509: N_FLAG     dc.b 'N=',0
00:00002201 00
00:00002202 583D            	  1510: X_FLAG     dc.b 'X=',0
00:00002204 00
                            	  1511: 
                            	  1512: 
00:00002205 4D6F6E69746F7220	  1513: HELP_LIST dc.b 'Monitor commands',13,10,10
00:0000220D 636F6D6D616E6473
00:00002215 0D
00:00002216 0A
00:00002217 0A
00:00002218 4420202044697361	  1514:        dc.b 'D   Disassemble machine code at current pointer',13,10
00:00002220 7373656D626C6520
00:00002228 6D616368696E6520
00:00002230 636F646520617420
00:00002238 63757272656E7420
00:00002240 706F696E746572
00:00002247 0D
00:00002248 0A
00:00002249 4520202045646974	  1515:        dc.b 'E   Edit memory',13,10
00:00002251 206D656D6F7279
00:00002258 0D
00:00002259 0A
00:0000225A 4620202046696C6C	  1516:        dc.b 'F   Fill memory with 0xFFFF',13,10
00:00002262 206D656D6F727920
00:0000226A 7769746820307846
00:00002272 464646
00:00002275 0D
00:00002276 0A
00:00002277 4820202048657820	  1517:        dc.b 'H   Hex dump memory from current pointer',13,10
00:0000227F 64756D70206D656D
00:00002287 6F72792066726F6D
00:0000228F 2063757272656E74
00:00002297 20706F696E746572
00:0000229F 0D
00:000022A0 0A
00:000022A1 49202020496E6974	  1518:        dc.b 'I   Init from RAM [$80000] -> SP [$80004] -> PC',13,10
00:000022A9 2066726F6D205241
00:000022B1 4D205B2438303030
00:000022B9 305D202D3E205350
00:000022C1 205B243830303034
00:000022C9 5D202D3E205043
00:000022D0 0D
00:000022D1 0A
00:000022D2 4A2020204A756D70	  1519:        dc.b 'J   Jump to address',13,10
00:000022DA 20746F2061646472
00:000022E2 657373
00:000022E5 0D
00:000022E6 0A
00:000022E7 4C2020204C6F6164	  1520:        dc.b 'L   Load Motorola S-record',13,10
00:000022EF 204D6F746F726F6C
00:000022F7 6120532D7265636F
00:000022FF 7264
00:00002301 0D
00:00002302 0A
00:00002303 4E2020204C6F6164	  1521:        dc.b 'N   Load binary data',13,10
00:0000230B 2062696E61727920
00:00002313 64617461
00:00002317 0D
00:00002318 0A
00:00002319 5020202053657420	  1522:        dc.b 'P   Set current pointer',13,10
00:00002321 63757272656E7420
00:00002329 706F696E746572
00:00002330 0D
00:00002331 0A
00:00002332 5220202052656769	  1523:        dc.b 'R   Register display',13,10
00:0000233A 7374657220646973
00:00002342 706C6179
00:00002346 0D
00:00002347 0A
00:00002348 5320202053746163	  1524:        dc.b 'S   Stack display',13,10
00:00002350 6B20646973706C61
00:00002358 79
00:00002359 0D
00:0000235A 0A
00:0000235B 5420202054726163	  1525:        dc.b 'T   Trace instruction at PC',13,10
00:00002363 6520696E73747275
00:0000236B 6374696F6E206174
00:00002373 205043
00:00002376 0D
00:00002377 0A
00:00002378 5520202055706461	  1526:        dc.b 'U   Update Flash ROM',13,10
00:00002380 746520466C617368
00:00002388 20524F4D
00:0000238C 0D
00:0000238D 0A
00:0000238E 5A202020436C6561	  1527:        dc.b 'Z   Clear memory with 0x0000',13,10
00:00002396 72206D656D6F7279
00:0000239E 2077697468203078
00:000023A6 30303030
00:000023AA 0D
00:000023AB 0A
00:000023AC 2E2020204D6F6469	  1528:        dc.b '.   Modify registers, as .PC .D0 .A0',13,10
00:000023B4 6679207265676973
00:000023BC 746572732C206173
00:000023C4 202E5043202E4430
00:000023CC 202E4130
00:000023D0 0D
00:000023D1 0A
00:000023D2 3F20202048656C70	  1529:        dc.b '?   Help',13,10,0
00:000023DA 0D
00:000023DB 0A
00:000023DC 00
                            	  1530: TAIL
                            	  1531:        END START
                            	  1532: 
                            	  1533: 
                            	  1534: 
                            	  1535: 
                            	  1536: 


Symbols by name:
ABORT                            A:00000CDC
ABOUT                            A:00000E60
ABOUTZBUG                        A:000020B5
ADDRERR_MSG                      A:0000217C
ADDRESS_REGP                     A:00000DA6
BIT_ESC                          E:00000000
BLANK                            E:00000020
BLANK_BLOCK                      A:000021E6
BOOT_RAM                         A:00000ED8
BRESET                           A:00001E80
BRTBL                            A:00001384
BUFFER                           E:00000022
BUFSIZE                          E:00000050
BZERO                            A:00001E99
CARRY_FLAG                       A:000021F6
CHECKSUM_ERROR                   A:000008AC
CHECK_DATA                       A:0000083E
CHECK_ESC                        A:000007F8
CHK_ACK                          A:000007A2
CIN                              A:00000640
CINREADY                         A:00000664
CINS                             A:0000061E
CLEAR                            A:00001EA7
CLEAR1                           A:00000D46
CLEAR_MEMORY                     A:00000A0C
CLEAR_MEMORY1                    A:00000A32
CLEAR_MON_RAM                    A:00000D3C
COMMON                           A:00001796
COMMON35                         A:000017A4
COMMON4                          A:00001794
COPY_FLASHUTIL                   A:00000746
COUT                             A:000005FC
CR                               E:0000000D
CS11                             A:000011AC
CS12                             A:00001116
CS13                             A:00001094
CS14                             A:00001024
CS15                             A:00000FE4
CS16                             A:00000F76
CS17                             A:00001350
CS18                             A:000012EA
CS19                             A:0000141C
CS20                             A:0000124C
DATA_FOUND                       A:0000084C
DATA_REGP                        A:00000D7E
DCODE68K                         A:000016FC
DDATA                            E:FFFFFFF0
DEC311                           A:00001710
DEC404                           A:0000172C
DEC411                           A:0000173C
DEC425                           A:0000174C
DEC510                           A:0000175A
DEC515                           A:0000175E
DEC530                           A:00001766
DEC535                           A:0000176C
DEC537                           A:00001778
DEFAULT_MSG                      A:00002160
DHEX2DEC                         A:00000AFC
DHX2DC                           A:00000B0C
DHX2DC0                          A:00000B10
DHX2DC1                          A:00000B18
DHX2DC2                          A:00000B32
DHX2DC22                         A:00000B34
DHX2DC3                          A:00000B3E
DHX2DC4                          A:00000B46
DHX2DC5                          A:00000B4E
DHX2DC57                         A:00000B56
DHX2DC6                          A:00000B5A
DIS                              A:0000209B
DIS1                             A:00000E24
DISASSEMBLE                      A:00000E0C
DISPLAY_REG                      A:00000B64
DISPLAY_REG1                     A:00000B6E
DONE                             A:00001EF9
DOUT                             E:0007E000
EA000                            A:0000144C
EA001                            A:00001458
EA010                            A:00001464
EA011                            A:00001478
EA011RTS                         A:0000148E
EA100                            A:00001490
EA101                            A:00001532
EA1105                           A:0000150E
EA1107                           A:00001512
EA1109                           A:00001528
EA111                            A:00001548
EA1112                           A:00001566
EA1113                           A:00001582
EA1113A                          A:00001592
EA1114                           A:000015B4
EA1115                           A:0000161E
EA11153                          A:00001656
EA11155                          A:00001660
EAF25                            A:000015FC
EAF27                            A:00001600
EAF35                            A:00001614
EDIT                             A:00001F35
EDIT1                            A:00001F03
EDIT_MEMORY                      A:00000A44
EDIT_MEMORY2                     A:00000A62
EDIT_MEMORY3                     A:00000ACA
EDIT_MEMORY4                     A:00000AC6
EDIT_MEMORY5                     A:00000AB8
EEA                              A:000014AA
EEA10                            A:0000109E
EOT                              E:00000004
ERROR                            A:00002057
ESC                              E:0000001B
FDATA                            E:0000000A
FE10                             A:000014A6
FE11                             A:0000158E
FE12                             A:0000174A
FERROR                           A:000017BE
FERROR35                         A:000017C8
FERROR39                         A:000017D4
FILL                             A:00001EBF
FILLJMP                          A:00000444
FILL_MEMORY                      A:000009D4
FILL_MEMORY1                     A:000009FA
FLAG                             E:00000020
FLASHUTIL_END                    A:00001E54
FLASHUTIL_START                  A:00001BE8
FOC                              E:0000001F
FOP                              E:00000027
FORM1                            A:0000101C
FORM10                           A:000010E4
FORM103                          A:000010EA
FORM104                          A:000010EE
FORM105                          A:00001100
FORM10E3                         A:000010C6
FORM10E4                         A:000010CE
FORM10E6                         A:000010DA
FORM10EX                         A:000010A4
FORM11                           A:0000111C
FORM112                          A:0000113C
FORM114                          A:0000114A
FORM11SL                         A:00001128
FORM12                           A:0000114C
FORM125                          A:00001166
FORM12A                          A:00001188
FORM1A                           A:00001020
FORM3                            A:00001028
FORM4                            A:0000102C
FORM5                            A:00001040
FORM6A                           A:00001044
FORM6D                           A:00001054
FORM7                            A:0000107C
FORM8                            A:00001088
FORM815                          A:0000108C
FORM9                            A:00001098
FORM91                           A:00001434
FORM93                           A:00001448
FORM95                           A:0000144A
FORMREG5                         A:00001068
FORMREGA                         A:00001064
FORMREGD                         A:00001074
FORMSIZE                         A:00001420
FREL10                           A:00001B98
FREL15                           A:00001BAA
FREL20                           A:00001BC4
FREL25                           A:00001BD6
FREL30                           A:00001BE0
FRELADDR                         A:00001B8A
GETBIN                           A:0000079C
GET_32BIT                        A:00000996
GET_ADDRESS                      A:000009B8
GET_ADDRESS1                     A:000009BE
GET_HEX                          A:000006DE
GET_HEX1                         A:000006F0
GET_HEX2                         A:000006FE
GET_HEXS                         A:0000070E
GET_TYPE                         A:00000800
GOTBIN                           A:00000798
HELP                             A:00000AD0
HELP_LIST                        A:00002205
HEX                              A:00001F71
HEX2DEC                          A:00001AF4
HEX_DUMP                         A:000008F2
HEX_DUMP1                        A:00000922
HEX_DUMP2                        A:0000090E
HEX_DUMP3                        A:00000948
HEX_DUMP4                        A:00000942
HEX_DUMP5                        A:0000094E
HEX_DUMP6                        A:0000093A
HISPC                            E:FFFFFFFC
HX2DC                            A:00001B04
HX2DC0                           A:00001B08
HX2DC1                           A:00001B10
HX2DC2                           A:00001B2A
HX2DC22                          A:00001B2C
HX2DC3                           A:00001B36
HX2DC4                           A:00001B3E
HX2DC5                           A:00001B46
HX2DC57                          A:00001B4E
HX2DC6                           A:00001B52
IBSR                             A:000012A4
ICC                              A:000012A0
ICC35                            A:000012B6
ICC55                            A:000012CC
ICCCC                            A:0000136C
ICCCC9                           A:00001382
IDBCC                            A:0000128C
ILINK                            A:00001004
ILLEGAL_MSG                      A:00002149
IM7788                           A:00000F40
IM7799                           A:00000F44
IMMED                            A:00000F8C
IMMED45                          A:00000FB2
IMMED55                          A:00000FE6
IMMED65                          A:00000FEC
IMMED75                          A:00000FFC
IMOVE                            A:00001000
IMOVE19                          A:000013EA
IMOVEA1                          A:000013C4
IMOVEMFR                         A:00000F2C
IMOVEMTR                         A:00000F5C
IMOVEP                           A:00001224
IMOVEP11                         A:00001234
IMOVEP35                         A:00001250
IMOVEP66                         A:0000125E
IMOVEQ                           A:000011B4
IMVFSR                           A:000011D4
IMVFUSP                          A:000011E4
IMVT44                           A:00001202
IMVTCCR                          A:00001214
IMVTSR                           A:000011F4
IMVTUSP                          A:00001208
INT_OFF                          E:00002700
IQUICK                           A:000011B0
IQUICK21                         A:00001402
IQUICK31                         A:00001418
IQUICKA                          A:000013F0
ISCC                             A:00001280
ISETD                            A:000012DC
ISETD12                          A:000012E2
ISETS                            A:000012EC
ISHIFT                           A:00001308
ISHIFT13                         A:00001314
ISHIFT23                         A:00001338
ISHIFT33                         A:00001344
ISHIFT44                         A:00001348
ISHIFTM1                         A:00001352
ISTOP                            A:00000F78
JADDR_ERR                        E:000FFFF4
JBUS_ERR                         E:000FFFFA
JCHK                             E:000FFFE2
JILLEGAL                         E:000FFFEE
JINT1                            E:000FFFBE
JINT2                            E:000FFFB8
JINT3                            E:000FFFB2
JINT4                            E:000FFFAC
JINT5                            E:000FFFA6
JINT6                            E:000FFFA0
JINT7                            E:000FFF9A
JLAST_ENTRY                      E:000FFF3A
JLINE_A                          E:000FFFCA
JLINE_F                          E:000FFFC4
JPRIV_VIOL                       E:000FFFD6
JTRACE                           E:000FFFD0
JTRAP0                           E:000FFF94
JTRAP1                           E:000FFF8E
JTRAP2                           E:000FFF88
JTRAP3                           E:000FFF82
JTRAP4                           E:000FFF7C
JTRAP5                           E:000FFF76
JTRAP6                           E:000FFF70
JTRAP7                           E:000FFF6A
JTRAP8                           E:000FFF64
JTRAP9                           E:000FFF5E
JTRAPA                           E:000FFF58
JTRAPB                           E:000FFF52
JTRAPC                           E:000FFF4C
JTRAPD                           E:000FFF46
JTRAPE                           E:000FFF40
JTRAPF                           E:000FFF3A
JTRAPV                           E:000FFFDC
JUMP                             A:00000C9C
JUMP1                            A:00000CDE
JUMPLONG                         E:00004EF9
JUMP_TABLE_TOP                   E:000FFFFA
JUMP_TO                          A:00002061
JZERO_DIV                        E:000FFFE8
KI                               A:000017E8
KIEND                            A:000017EA
LF                               E:0000000A
LINEA_MSG                        A:000021B8
LINEF_MSG                        A:000021CB
LOAD                             A:00001FBA
LOADADDR                         E:00000000
LOADB                            A:00001FF4
LOADB1                           A:00002008
LOCVARSZ                         E:00000010
LOOP                             A:000004D8
MEMUSE1                          A:000020F6
MEMUSE2                          A:00002107
MODIFY_REG                       A:00000D50
MONVARS                          E:000FFE7A
MOVEMR                           A:00001680
MOVEMR11                         A:00001690
MOVEMR33                         A:00001698
MOVEMR44                         A:000016AA
MOVEMR77                         A:000016C4
MOVEMR79                         A:000016D6
MOVEMR88                         A:000016D8
MOVEMR94                         A:000016F0
MOVEMS                           A:0000166C
MOVEMS2                          A:0000167C
MSG111                           A:000017DE
NEW                              A:00001F47
NEW_LINE                         A:0000067A
NEW_POINTER                      A:00000964
NEXT1                            A:000004F6
NEXT10                           A:00000564
NEXT11                           A:000005AE
NEXT12                           A:000005BC
NEXT13                           A:000005CA
NEXT14                           A:000005D8
NEXT15                           A:000005D8
NEXT16                           A:000005E6
NEXT17                           A:000005E6
NEXT18                           A:000005F0
NEXT2                            A:00000502
NEXT3                            A:0000050E
NEXT4                            A:0000051A
NEXT5                            A:00000526
NEXT6                            A:00000532
NEXT7                            A:0000053E
NEXT8                            A:0000054A
NEXT9                            A:00000556
NOACK                            A:000007A2
NOT_TOS                          A:00000EA4
NO_CHANGE                        A:000004EA
NO_ERROR                         A:000008A8
NUMBER                           A:00002047
N_FLAG                           A:000021FF
OFFSET                           E:000FFE7A
OFFSET_OFF                       E:00000000
OPCTBL                           A:000019F4
OUT1X                            A:000008B4
OUT1X1                           A:000008C6
OUT2X                            A:000008CE
OUT4X                            A:000008D6
OUT6X                            A:000008DE
OUT8X                            A:000008E6
PC_REG                           A:000021EE
PNT2HX                           A:00001B6E
PNT4HX                           A:00001B66
PNT6HX                           A:00001B60
PNT8HX                           A:00001B58
POINTER_NOW                      E:00000072
PRINT_BIT                        A:00000C86
PRINT_D0                         A:000008EE
PRINT_DEC                        A:00000ADC
PRINT_LINE                       A:00000E54
PRIVVIOL_MSG                     A:000021A1
PROMPT                           A:00001EA5
PSTR                             A:0000066E
PSTR1                            A:00000678
PUTHEX                           A:00001B76
RAM                              E:00080000
RAMTOP                           E:000FFFFF
READ_BINARY                      A:0000075C
READ_BINARY_XFER                 A:0000077C
READ_DATA                        A:0000087C
READ_S_REC                       A:000007DE
READ_S_REC1                      A:000007EC
REG1                             A:00000C10
REG2                             A:00000C80
REG3                             A:00000C4C
REG4                             A:00000C44
REGISTER_DISP                    A:00002071
ROM                              A:00001F41
ROMBASE                          E:00000000
SAVHEX                           A:00001B86
SCHR                             A:000011CC
SCOMMON                          A:0000127C
SCROLL                           A:0000069A
SCROLL1                          A:0000069E
SEND_PROMPT                      A:000006A6
SEND_TITLE                       A:000006C0
SERIN                            E:00078000
SEROUT                           E:0007A000
SERSTATUS_RDF                    E:0007C000
SERSTATUS_TXE                    E:0007D000
SERVICE_ADDRERR                  A:00000EF0
SERVICE_DEFAULT                  A:00000F22
SERVICE_ILLEGAL                  A:00000EE6
SERVICE_LINEA                    A:00000F0E
SERVICE_LINEF                    A:00000F18
SERVICE_PRIVVIOL                 A:00000F04
SERVICE_TRAP0                    A:00000DCE
SERVICE_ZERODIV                  A:00000EFA
SKIP_PRINT_BLANK                 A:00000EAE
SP                               E:00000020
SPACE                            A:00000690
SRESET                           A:00000418
SR_REG                           A:000021F2
START                            A:0000042C
STARTA                           A:00001ED6
STOP                             A:00001EE8
SUPER_STACK                      E:000FFE76
SZERO                            A:00000400
TAIL                             A:000023DD
TBL                              A:000017EA
TBLE                             A:000019F4
TEST_RAM                         A:000009D2
TITLE1                           A:00001E54
TOP_OF_STACK                     A:000021DE
TO_HEX                           A:000006CA
TRACE_BIT                        E:00000007
TRACE_JUMP                       A:00000CFA
TRACE_MSG                        A:00002115
UPDATE                           A:00001F4F
UPDATE_FLASH                     A:00000722
USER_ADDR                        E:00000096
USER_DATA                        E:00000076
USER_PC                          E:000000BC
USER_SR                          E:000000B6
USER_SS                          E:000000B8
USER_STACK                       E:000FFE26
USER_USP                         E:000000B2
VIEW                             A:00002126
VIEW1                            A:00000E8E
VIEW_USP                         A:00000E6C
V_FLAG                           A:000021F9
WAITBIN                          A:00000786
WAITBIN2                         A:000007B2
WAIT_CR                          A:0000080A
WHATP                            A:00000DCC
WRITE_1                          A:00000C92
X                                A:00000F2C
X_FLAG                           A:00002202
ZERODIV_MSG                      A:0000218D
ZERO_TO_NINE                     A:000006DA
Z_FLAG                           A:000021FC

Symbols by value:
FFFFFFF0 DDATA
FFFFFFFC HISPC
00000000 BIT_ESC
00000000 LOADADDR
00000000 OFFSET_OFF
00000000 ROMBASE
00000004 EOT
00000007 TRACE_BIT
0000000A FDATA
0000000A LF
0000000D CR
00000010 LOCVARSZ
0000001B ESC
0000001F FOC
00000020 BLANK
00000020 FLAG
00000020 SP
00000022 BUFFER
00000027 FOP
00000050 BUFSIZE
00000072 POINTER_NOW
00000076 USER_DATA
00000096 USER_ADDR
000000B2 USER_USP
000000B6 USER_SR
000000B8 USER_SS
000000BC USER_PC
00000400 SZERO
00000418 SRESET
0000042C START
00000444 FILLJMP
000004D8 LOOP
000004EA NO_CHANGE
000004F6 NEXT1
00000502 NEXT2
0000050E NEXT3
0000051A NEXT4
00000526 NEXT5
00000532 NEXT6
0000053E NEXT7
0000054A NEXT8
00000556 NEXT9
00000564 NEXT10
000005AE NEXT11
000005BC NEXT12
000005CA NEXT13
000005D8 NEXT14
000005D8 NEXT15
000005E6 NEXT16
000005E6 NEXT17
000005F0 NEXT18
000005FC COUT
0000061E CINS
00000640 CIN
00000664 CINREADY
0000066E PSTR
00000678 PSTR1
0000067A NEW_LINE
00000690 SPACE
0000069A SCROLL
0000069E SCROLL1
000006A6 SEND_PROMPT
000006C0 SEND_TITLE
000006CA TO_HEX
000006DA ZERO_TO_NINE
000006DE GET_HEX
000006F0 GET_HEX1
000006FE GET_HEX2
0000070E GET_HEXS
00000722 UPDATE_FLASH
00000746 COPY_FLASHUTIL
0000075C READ_BINARY
0000077C READ_BINARY_XFER
00000786 WAITBIN
00000798 GOTBIN
0000079C GETBIN
000007A2 CHK_ACK
000007A2 NOACK
000007B2 WAITBIN2
000007DE READ_S_REC
000007EC READ_S_REC1
000007F8 CHECK_ESC
00000800 GET_TYPE
0000080A WAIT_CR
0000083E CHECK_DATA
0000084C DATA_FOUND
0000087C READ_DATA
000008A8 NO_ERROR
000008AC CHECKSUM_ERROR
000008B4 OUT1X
000008C6 OUT1X1
000008CE OUT2X
000008D6 OUT4X
000008DE OUT6X
000008E6 OUT8X
000008EE PRINT_D0
000008F2 HEX_DUMP
0000090E HEX_DUMP2
00000922 HEX_DUMP1
0000093A HEX_DUMP6
00000942 HEX_DUMP4
00000948 HEX_DUMP3
0000094E HEX_DUMP5
00000964 NEW_POINTER
00000996 GET_32BIT
000009B8 GET_ADDRESS
000009BE GET_ADDRESS1
000009D2 TEST_RAM
000009D4 FILL_MEMORY
000009FA FILL_MEMORY1
00000A0C CLEAR_MEMORY
00000A32 CLEAR_MEMORY1
00000A44 EDIT_MEMORY
00000A62 EDIT_MEMORY2
00000AB8 EDIT_MEMORY5
00000AC6 EDIT_MEMORY4
00000ACA EDIT_MEMORY3
00000AD0 HELP
00000ADC PRINT_DEC
00000AFC DHEX2DEC
00000B0C DHX2DC
00000B10 DHX2DC0
00000B18 DHX2DC1
00000B32 DHX2DC2
00000B34 DHX2DC22
00000B3E DHX2DC3
00000B46 DHX2DC4
00000B4E DHX2DC5
00000B56 DHX2DC57
00000B5A DHX2DC6
00000B64 DISPLAY_REG
00000B6E DISPLAY_REG1
00000C10 REG1
00000C44 REG4
00000C4C REG3
00000C80 REG2
00000C86 PRINT_BIT
00000C92 WRITE_1
00000C9C JUMP
00000CDC ABORT
00000CDE JUMP1
00000CFA TRACE_JUMP
00000D3C CLEAR_MON_RAM
00000D46 CLEAR1
00000D50 MODIFY_REG
00000D7E DATA_REGP
00000DA6 ADDRESS_REGP
00000DCC WHATP
00000DCE SERVICE_TRAP0
00000E0C DISASSEMBLE
00000E24 DIS1
00000E54 PRINT_LINE
00000E60 ABOUT
00000E6C VIEW_USP
00000E8E VIEW1
00000EA4 NOT_TOS
00000EAE SKIP_PRINT_BLANK
00000ED8 BOOT_RAM
00000EE6 SERVICE_ILLEGAL
00000EF0 SERVICE_ADDRERR
00000EFA SERVICE_ZERODIV
00000F04 SERVICE_PRIVVIOL
00000F0E SERVICE_LINEA
00000F18 SERVICE_LINEF
00000F22 SERVICE_DEFAULT
00000F2C IMOVEMFR
00000F2C X
00000F40 IM7788
00000F44 IM7799
00000F5C IMOVEMTR
00000F76 CS16
00000F78 ISTOP
00000F8C IMMED
00000FB2 IMMED45
00000FE4 CS15
00000FE6 IMMED55
00000FEC IMMED65
00000FFC IMMED75
00001000 IMOVE
00001004 ILINK
0000101C FORM1
00001020 FORM1A
00001024 CS14
00001028 FORM3
0000102C FORM4
00001040 FORM5
00001044 FORM6A
00001054 FORM6D
00001064 FORMREGA
00001068 FORMREG5
00001074 FORMREGD
0000107C FORM7
00001088 FORM8
0000108C FORM815
00001094 CS13
00001098 FORM9
0000109E EEA10
000010A4 FORM10EX
000010C6 FORM10E3
000010CE FORM10E4
000010DA FORM10E6
000010E4 FORM10
000010EA FORM103
000010EE FORM104
00001100 FORM105
00001116 CS12
0000111C FORM11
00001128 FORM11SL
0000113C FORM112
0000114A FORM114
0000114C FORM12
00001166 FORM125
00001188 FORM12A
000011AC CS11
000011B0 IQUICK
000011B4 IMOVEQ
000011CC SCHR
000011D4 IMVFSR
000011E4 IMVFUSP
000011F4 IMVTSR
00001202 IMVT44
00001208 IMVTUSP
00001214 IMVTCCR
00001224 IMOVEP
00001234 IMOVEP11
0000124C CS20
00001250 IMOVEP35
0000125E IMOVEP66
0000127C SCOMMON
00001280 ISCC
0000128C IDBCC
000012A0 ICC
000012A4 IBSR
000012B6 ICC35
000012CC ICC55
000012DC ISETD
000012E2 ISETD12
000012EA CS18
000012EC ISETS
00001308 ISHIFT
00001314 ISHIFT13
00001338 ISHIFT23
00001344 ISHIFT33
00001348 ISHIFT44
00001350 CS17
00001352 ISHIFTM1
0000136C ICCCC
00001382 ICCCC9
00001384 BRTBL
000013C4 IMOVEA1
000013EA IMOVE19
000013F0 IQUICKA
00001402 IQUICK21
00001418 IQUICK31
0000141C CS19
00001420 FORMSIZE
00001434 FORM91
00001448 FORM93
0000144A FORM95
0000144C EA000
00001458 EA001
00001464 EA010
00001478 EA011
0000148E EA011RTS
00001490 EA100
000014A6 FE10
000014AA EEA
0000150E EA1105
00001512 EA1107
00001528 EA1109
00001532 EA101
00001548 EA111
00001566 EA1112
00001582 EA1113
0000158E FE11
00001592 EA1113A
000015B4 EA1114
000015FC EAF25
00001600 EAF27
00001614 EAF35
0000161E EA1115
00001656 EA11153
00001660 EA11155
0000166C MOVEMS
0000167C MOVEMS2
00001680 MOVEMR
00001690 MOVEMR11
00001698 MOVEMR33
000016AA MOVEMR44
000016C4 MOVEMR77
000016D6 MOVEMR79
000016D8 MOVEMR88
000016F0 MOVEMR94
000016FC DCODE68K
00001710 DEC311
0000172C DEC404
0000173C DEC411
0000174A FE12
0000174C DEC425
0000175A DEC510
0000175E DEC515
00001766 DEC530
0000176C DEC535
00001778 DEC537
00001794 COMMON4
00001796 COMMON
000017A4 COMMON35
000017BE FERROR
000017C8 FERROR35
000017D4 FERROR39
000017DE MSG111
000017E8 KI
000017EA KIEND
000017EA TBL
000019F4 OPCTBL
000019F4 TBLE
00001AF4 HEX2DEC
00001B04 HX2DC
00001B08 HX2DC0
00001B10 HX2DC1
00001B2A HX2DC2
00001B2C HX2DC22
00001B36 HX2DC3
00001B3E HX2DC4
00001B46 HX2DC5
00001B4E HX2DC57
00001B52 HX2DC6
00001B58 PNT8HX
00001B60 PNT6HX
00001B66 PNT4HX
00001B6E PNT2HX
00001B76 PUTHEX
00001B86 SAVHEX
00001B8A FRELADDR
00001B98 FREL10
00001BAA FREL15
00001BC4 FREL20
00001BD6 FREL25
00001BE0 FREL30
00001BE8 FLASHUTIL_START
00001E54 FLASHUTIL_END
00001E54 TITLE1
00001E80 BRESET
00001E99 BZERO
00001EA5 PROMPT
00001EA7 CLEAR
00001EBF FILL
00001ED6 STARTA
00001EE8 STOP
00001EF9 DONE
00001F03 EDIT1
00001F35 EDIT
00001F41 ROM
00001F47 NEW
00001F4F UPDATE
00001F71 HEX
00001FBA LOAD
00001FF4 LOADB
00002008 LOADB1
00002047 NUMBER
00002057 ERROR
00002061 JUMP_TO
00002071 REGISTER_DISP
0000209B DIS
000020B5 ABOUTZBUG
000020F6 MEMUSE1
00002107 MEMUSE2
00002115 TRACE_MSG
00002126 VIEW
00002149 ILLEGAL_MSG
00002160 DEFAULT_MSG
0000217C ADDRERR_MSG
0000218D ZERODIV_MSG
000021A1 PRIVVIOL_MSG
000021B8 LINEA_MSG
000021CB LINEF_MSG
000021DE TOP_OF_STACK
000021E6 BLANK_BLOCK
000021EE PC_REG
000021F2 SR_REG
000021F6 CARRY_FLAG
000021F9 V_FLAG
000021FC Z_FLAG
000021FF N_FLAG
00002202 X_FLAG
00002205 HELP_LIST
000023DD TAIL
00002700 INT_OFF
00004EF9 JUMPLONG
00078000 SERIN
0007A000 SEROUT
0007C000 SERSTATUS_RDF
0007D000 SERSTATUS_TXE
0007E000 DOUT
00080000 RAM
000FFE26 USER_STACK
000FFE76 SUPER_STACK
000FFE7A MONVARS
000FFE7A OFFSET
000FFF3A JLAST_ENTRY
000FFF3A JTRAPF
000FFF40 JTRAPE
000FFF46 JTRAPD
000FFF4C JTRAPC
000FFF52 JTRAPB
000FFF58 JTRAPA
000FFF5E JTRAP9
000FFF64 JTRAP8
000FFF6A JTRAP7
000FFF70 JTRAP6
000FFF76 JTRAP5
000FFF7C JTRAP4
000FFF82 JTRAP3
000FFF88 JTRAP2
000FFF8E JTRAP1
000FFF94 JTRAP0
000FFF9A JINT7
000FFFA0 JINT6
000FFFA6 JINT5
000FFFAC JINT4
000FFFB2 JINT3
000FFFB8 JINT2
000FFFBE JINT1
000FFFC4 JLINE_F
000FFFCA JLINE_A
000FFFD0 JTRACE
000FFFD6 JPRIV_VIOL
000FFFDC JTRAPV
000FFFE2 JCHK
000FFFE8 JZERO_DIV
000FFFEE JILLEGAL
000FFFF4 JADDR_ERR
000FFFFA JBUS_ERR
000FFFFA JUMP_TABLE_TOP
000FFFFF RAMTOP
